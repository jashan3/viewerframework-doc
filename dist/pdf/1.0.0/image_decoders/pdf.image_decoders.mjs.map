{"version":3,"file":"pdf.image_decoders.mjs","mappings":"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;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAAC,EACjD;EAAEH,EAAE,EAAE,MAAM;EAAEC,IAAI,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAE,CAA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AAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEG,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAED,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAEA,YAAY,CAAC,EAAE,CAAC,CAAC,EAAEA,YAAY,CAAC,EACpC,CAAC,CAAC,EAAED,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEA,WAAW,CAAC,EAClC,CAAC,CAAC,EAAEA,WAAW,CAAC,EA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AC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EACd,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAClB,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAClB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,IAAI,CAAC,EACT,CAAC,CAAC,EAAE,IAAI,CAAC,EACT,CAAC,CAAC,EAAE,IAAI,CAAC,EACT,CAAC,CAAC,EAAE,IAAI,CAAC,EACT,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAChB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,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C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAC9C,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAC9C,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAC9C,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,IAAI,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CACvC;AAGD,MAAMe,WAAW,GAAG,CAClB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EACtC,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,GAAG,CAAC,EACT,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,EAAE,CAAC,EACR,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CACnC;AAGD,MAAMC,WAAW,GAA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","sources":["webpack://pdfjs-local/webpack/bootstrap","webpack://pdfjs-local/webpack/runtime/define property getters","webpack://pdfjs-local/webpack/runtime/hasOwnProperty shorthand","webpack://pdfjs-local/./src/shared/util.js","webpack://pdfjs-local/./src/core/primitives.js","webpack://pdfjs-local/./src/core/base_stream.js","webpack://pdfjs-local/./src/core/core_utils.js","webpack://pdfjs-local/./src/core/arithmetic_decoder.js","webpack://pdfjs-local/./src/core/ccitt.js","webpack://pdfjs-local/./src/core/jbig2.js","webpack://pdfjs-local/./src/shared/image_utils.js","webpack://pdfjs-local/./src/core/jpg.js","webpack://pdfjs-local/./external/openjpeg/openjpeg.js","webpack://pdfjs-local/./src/core/stream.js","webpack://pdfjs-local/./src/core/jpx.js","webpack://pdfjs-local/./src/pdf.image_decoders.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Represent the percentage of the height of a single-line field over\n// the font size. Acrobat seems to use this value.\nconst LINE_FACTOR = 1.35;\nconst LINE_DESCENT_FACTOR = 0.35;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - SAVE is used, on the worker-thread, when saving modified annotations.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - IS_EDITING is used when editing is active in the viewer.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  IS_EDITING: 0x80,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  HIGHLIGHT: 9,\n  STAMP: 13,\n  INK: 15,\n  SIGNATURE: 101,\n};\n\nconst AnnotationEditorParamsType = {\n  RESIZE: 1,\n  CREATE: 2,\n  FREETEXT_SIZE: 11,\n  FREETEXT_COLOR: 12,\n  FREETEXT_OPACITY: 13,\n  INK_COLOR: 21,\n  INK_THICKNESS: 22,\n  INK_OPACITY: 23,\n  HIGHLIGHT_COLOR: 31,\n  HIGHLIGHT_DEFAULT_COLOR: 32,\n  HIGHLIGHT_THICKNESS: 33,\n  HIGHLIGHT_FREE: 34,\n  HIGHLIGHT_SHOW_ALL: 35,\n  DRAW_STEP: 41,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  // PLEASE NOTE: We purposely keep any removed operators commented out, since\n  //              re-numbering the list would risk breaking third-party users.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  // beginAnnotations: 78,\n  // endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  // paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n  setStrokeTransparent: 92,\n  setFillTransparent: 93,\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    // eslint-disable-next-line no-console\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    // eslint-disable-next-line no-console\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  switch (url?.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  if (options && typeof url === \"string\") {\n    // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n    if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n      const dots = url.match(/\\./g);\n      // Avoid accidentally matching a *relative* URL pointing to a file named\n      // e.g. \"www.pdf\" or similar.\n      if (dots?.length >= 2) {\n        url = `http://${url}`;\n      }\n    }\n\n    // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n    // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n    if (options.tryConvertEncoding) {\n      try {\n        url = stringToUTF8String(url);\n      } catch {}\n    }\n  }\n\n  const absoluteUrl = baseUrl ? URL.parse(url, baseUrl) : URL.parse(url);\n  return _isValidProtocol(absoluteUrl) ? absoluteUrl : null;\n}\n\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n      this.constructor === BaseException\n    ) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass ResponseException extends BaseException {\n  constructor(msg, status, missing) {\n    super(msg, \"ResponseException\");\n    this.status = status;\n    this.missing = missing;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\nfunction string32(value) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(\n      this,\n      \"isOffscreenCanvasSupported\",\n      typeof OffscreenCanvas !== \"undefined\"\n    );\n  }\n\n  static get isImageDecoderSupported() {\n    return shadow(\n      this,\n      \"isImageDecoderSupported\",\n      typeof ImageDecoder !== \"undefined\"\n    );\n  }\n\n  static get platform() {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (typeof navigator !== \"undefined\" &&\n        typeof navigator?.platform === \"string\" &&\n        typeof navigator?.userAgent === \"string\")\n    ) {\n      const { platform, userAgent } = navigator;\n\n      return shadow(this, \"platform\", {\n        isAndroid: userAgent.includes(\"Android\"),\n        isLinux: platform.includes(\"Linux\"),\n        isMac: platform.includes(\"Mac\"),\n        isWindows: platform.includes(\"Win\"),\n        isFirefox:\n          (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n          userAgent.includes(\"Firefox\"),\n      });\n    }\n    return shadow(this, \"platform\", {\n      isAndroid: false,\n      isLinux: false,\n      isMac: false,\n      isWindows: false,\n      isFirefox: false,\n    });\n  }\n\n  static get isCSSRoundSupported() {\n    return shadow(\n      this,\n      \"isCSSRoundSupported\",\n      globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\")\n    );\n  }\n}\n\nconst hexNumbers = Array.from(Array(256).keys(), n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Apply a scaling matrix to some min/max values.\n  // If a scaling factor is negative then min and max must be\n  // swapped.\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[2];\n        minMax[2] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[2] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[1];\n        minMax[1] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[1] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[1];\n      minMax[1] = temp;\n      temp = minMax[2];\n      minMax[2] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[1];\n        minMax[1] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[1] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[2];\n        minMax[2] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[2] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[5];\n    minMax[2] += transform[4];\n    minMax[3] += transform[5];\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = this.applyTransform(r, m);\n    const p2 = this.applyTransform(r.slice(2, 4), m);\n    const p3 = this.applyTransform([r[0], r[3]], m);\n    const p4 = this.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'null'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(\n      Math.min(rect1[0], rect1[2]),\n      Math.min(rect2[0], rect2[2])\n    );\n    const xHigh = Math.min(\n      Math.max(rect1[0], rect1[2]),\n      Math.max(rect2[0], rect2[2])\n    );\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(\n      Math.min(rect1[1], rect1[3]),\n      Math.min(rect2[1], rect2[3])\n    );\n    const yHigh = Math.min(\n      Math.max(rect1[1], rect1[3]),\n      Math.max(rect2[1], rect2[3])\n    );\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  static #getExtremumOnCurve(x0, x1, x2, x3, y0, y1, y2, y3, t, minMax) {\n    if (t <= 0 || t >= 1) {\n      return;\n    }\n    const mt = 1 - t;\n    const tt = t * t;\n    const ttt = tt * t;\n    const x = mt * (mt * (mt * x0 + 3 * t * x1) + 3 * tt * x2) + ttt * x3;\n    const y = mt * (mt * (mt * y0 + 3 * t * y1) + 3 * tt * y2) + ttt * y3;\n    minMax[0] = Math.min(minMax[0], x);\n    minMax[1] = Math.min(minMax[1], y);\n    minMax[2] = Math.max(minMax[2], x);\n    minMax[3] = Math.max(minMax[3], y);\n  }\n\n  static #getExtremum(x0, x1, x2, x3, y0, y1, y2, y3, a, b, c, minMax) {\n    if (Math.abs(a) < 1e-12) {\n      if (Math.abs(b) >= 1e-12) {\n        this.#getExtremumOnCurve(\n          x0,\n          x1,\n          x2,\n          x3,\n          y0,\n          y1,\n          y2,\n          y3,\n          -c / b,\n          minMax\n        );\n      }\n      return;\n    }\n\n    const delta = b ** 2 - 4 * c * a;\n    if (delta < 0) {\n      return;\n    }\n    const sqrtDelta = Math.sqrt(delta);\n    const a2 = 2 * a;\n    this.#getExtremumOnCurve(\n      x0,\n      x1,\n      x2,\n      x3,\n      y0,\n      y1,\n      y2,\n      y3,\n      (-b + sqrtDelta) / a2,\n      minMax\n    );\n    this.#getExtremumOnCurve(\n      x0,\n      x1,\n      x2,\n      x3,\n      y0,\n      y1,\n      y2,\n      y3,\n      (-b - sqrtDelta) / a2,\n      minMax\n    );\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], x0, x3);\n      minMax[1] = Math.min(minMax[1], y0, y3);\n      minMax[2] = Math.max(minMax[2], x0, x3);\n      minMax[3] = Math.max(minMax[3], y0, y3);\n    } else {\n      minMax = [\n        Math.min(x0, x3),\n        Math.min(y0, y3),\n        Math.max(x0, x3),\n        Math.max(y0, y3),\n      ];\n    }\n    this.#getExtremum(\n      x0,\n      x1,\n      x2,\n      x3,\n      y0,\n      y1,\n      y2,\n      y3,\n      3 * (-x0 + 3 * (x1 - x2) + x3),\n      6 * (x0 - 2 * x1 + x2),\n      3 * (x1 - x0),\n      minMax\n    );\n    this.#getExtremum(\n      x0,\n      x1,\n      x2,\n      x3,\n      y0,\n      y1,\n      y2,\n      y3,\n      3 * (-y0 + 3 * (y1 - y2) + y3),\n      6 * (y0 - 2 * y1 + y2),\n      3 * (y1 - y0),\n      minMax\n    );\n    return minMax;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  // See section 7.9.2.2 Text String Type.\n  // The string can contain some language codes bracketed with 0x0b,\n  // so we must remove them.\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n      if (str.length % 2 === 1) {\n        str = str.slice(0, -1);\n      }\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n      if (str.length % 2 === 1) {\n        str = str.slice(0, -1);\n      }\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        const decoded = decoder.decode(buffer);\n        if (!decoded.includes(\"\\x1b\")) {\n          return decoded;\n        }\n        return decoded.replaceAll(/\\x1b[^\\x1b]*(?:\\x1b|$)/g, \"\");\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const charCode = str.charCodeAt(i);\n    if (charCode === 0x1b) {\n      // eslint-disable-next-line no-empty\n      while (++i < ii && str.charCodeAt(i) !== 0x1b) {}\n      continue;\n    }\n    const code = PDFStringTranslateTable[charCode];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\nlet NormalizeRegex = null;\nlet NormalizationMap = null;\nfunction normalizeUnicode(str) {\n  if (!NormalizeRegex) {\n    // In order to generate the following regex:\n    //  - create a PDF containing all the chars in the range 0000-FFFF with\n    //    a NFKC which is different of the char.\n    //  - copy and paste all those chars and get the ones where NFKC is\n    //    required.\n    // It appears that most the chars here contain some ligatures.\n    NormalizeRegex =\n      /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  }\n  return str.replaceAll(NormalizeRegex, (_, p1, p2) =>\n    p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2)\n  );\n}\n\nfunction getUuid() {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    typeof crypto.randomUUID === \"function\"\n  ) {\n    return crypto.randomUUID();\n  }\n  const buf = new Uint8Array(32);\n  crypto.getRandomValues(buf);\n  return bytesToString(buf);\n}\n\nconst AnnotationPrefix = \"pdfjs_internal_id_\";\n\n// TODO: Remove this once `Uint8Array.prototype.toHex` is generally available.\nfunction toHexUtil(arr) {\n  if (Uint8Array.prototype.toHex) {\n    return arr.toHex();\n  }\n  return Array.from(arr, num => hexNumbers[num]).join(\"\");\n}\n\n// TODO: Remove this once `Uint8Array.prototype.toBase64` is generally\n//       available.\nfunction toBase64Util(arr) {\n  if (Uint8Array.prototype.toBase64) {\n    return arr.toBase64();\n  }\n  return btoa(bytesToString(arr));\n}\n\n// TODO: Remove this once `Uint8Array.fromBase64` is generally available.\nfunction fromBase64Util(str) {\n  if (Uint8Array.fromBase64) {\n    return Uint8Array.fromBase64(str);\n  }\n  return stringToBytes(atob(str));\n}\n\n// TODO: Remove this once https://bugzilla.mozilla.org/show_bug.cgi?id=1928493\n//       is fixed.\nif (\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"SKIP_BABEL\")) &&\n  typeof Promise.try !== \"function\"\n) {\n  Promise.try = function (fn, ...args) {\n    return new Promise(resolve => {\n      resolve(fn(...args));\n    });\n  };\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMode,\n  AnnotationPrefix,\n  AnnotationReplyType,\n  AnnotationType,\n  assert,\n  BaseException,\n  BASELINE_FACTOR,\n  bytesToString,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  FormatError,\n  fromBase64Util,\n  getModificationDate,\n  getUuid,\n  getVerbosityLevel,\n  hexNumbers,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayEqual,\n  isNodeJS,\n  LINE_DESCENT_FACTOR,\n  LINE_FACTOR,\n  normalizeUnicode,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  RenderingIntentFlag,\n  ResponseException,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  TextRenderingMode,\n  toBase64Util,\n  toHexUtil,\n  UnknownErrorException,\n  unreachable,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, shadow, unreachable } from \"../shared/util.js\";\n\nconst CIRCULAR_REF = Symbol(\"CIRCULAR_REF\");\nconst EOF = Symbol(\"EOF\");\n\nlet CmdCache = Object.create(null);\nlet NameCache = Object.create(null);\nlet RefCache = Object.create(null);\n\nfunction clearPrimitiveCaches() {\n  CmdCache = Object.create(null);\n  NameCache = Object.create(null);\n  RefCache = Object.create(null);\n}\n\nclass Name {\n  constructor(name) {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n      typeof name !== \"string\"\n    ) {\n      unreachable('Name: The \"name\" must be a string.');\n    }\n    this.name = name;\n  }\n\n  static get(name) {\n    // eslint-disable-next-line no-restricted-syntax\n    return (NameCache[name] ||= new Name(name));\n  }\n}\n\nclass Cmd {\n  constructor(cmd) {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n      typeof cmd !== \"string\"\n    ) {\n      unreachable('Cmd: The \"cmd\" must be a string.');\n    }\n    this.cmd = cmd;\n  }\n\n  static get(cmd) {\n    // eslint-disable-next-line no-restricted-syntax\n    return (CmdCache[cmd] ||= new Cmd(cmd));\n  }\n}\n\nconst nonSerializable = function nonSerializableClosure() {\n  return nonSerializable; // Creating closure on some variable.\n};\n\nclass Dict {\n  constructor(xref = null) {\n    // Map should only be used internally, use functions below to access.\n    this._map = new Map();\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable; // Disable cloning of the Dict.\n  }\n\n  assignXref(newXref) {\n    this.xref = newXref;\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  // Automatically dereferences Ref objects.\n  get(key1, key2, key3) {\n    let value = this._map.get(key1);\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.get: Expected keys to be ordered by length.\");\n      }\n      value = this._map.get(key2);\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.get: Expected keys to be ordered by length.\");\n        }\n        value = this._map.get(key3);\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetch(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but returns a promise and uses fetchIfRefAsync().\n  async getAsync(key1, key2, key3) {\n    let value = this._map.get(key1);\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.getAsync: Expected keys to be ordered by length.\");\n      }\n      value = this._map.get(key2);\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.getAsync: Expected keys to be ordered by length.\");\n        }\n        value = this._map.get(key3);\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      return this.xref.fetchAsync(value, this.suppressEncryption);\n    }\n    return value;\n  }\n\n  // Same as get(), but dereferences all elements if the result is an Array.\n  getArray(key1, key2, key3) {\n    let value = this._map.get(key1);\n    if (value === undefined && key2 !== undefined) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n        key2.length < key1.length\n      ) {\n        unreachable(\"Dict.getArray: Expected keys to be ordered by length.\");\n      }\n      value = this._map.get(key2);\n      if (value === undefined && key3 !== undefined) {\n        if (\n          (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n          key3.length < key2.length\n        ) {\n          unreachable(\"Dict.getArray: Expected keys to be ordered by length.\");\n        }\n        value = this._map.get(key3);\n      }\n    }\n    if (value instanceof Ref && this.xref) {\n      value = this.xref.fetch(value, this.suppressEncryption);\n    }\n\n    if (Array.isArray(value)) {\n      value = value.slice(); // Ensure that we don't modify the Dict data.\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        if (value[i] instanceof Ref && this.xref) {\n          value[i] = this.xref.fetch(value[i], this.suppressEncryption);\n        }\n      }\n    }\n    return value;\n  }\n\n  // No dereferencing.\n  getRaw(key) {\n    return this._map.get(key);\n  }\n\n  getKeys() {\n    return [...this._map.keys()];\n  }\n\n  // No dereferencing.\n  getRawValues() {\n    return [...this._map.values()];\n  }\n\n  set(key, value) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      if (typeof key !== \"string\") {\n        unreachable('Dict.set: The \"key\" must be a string.');\n      } else if (value === undefined) {\n        unreachable('Dict.set: The \"value\" cannot be undefined.');\n      }\n    }\n    this._map.set(key, value);\n  }\n\n  has(key) {\n    return this._map.has(key);\n  }\n\n  *[Symbol.iterator]() {\n    for (const [key, value] of this._map) {\n      yield [\n        key,\n        value instanceof Ref && this.xref\n          ? this.xref.fetch(value, this.suppressEncryption)\n          : value,\n      ];\n    }\n  }\n\n  static get empty() {\n    const emptyDict = new Dict(null);\n\n    emptyDict.set = (key, value) => {\n      unreachable(\"Should not call `set` on the empty dictionary.\");\n    };\n    return shadow(this, \"empty\", emptyDict);\n  }\n\n  static merge({ xref, dictArray, mergeSubDicts = false }) {\n    const mergedDict = new Dict(xref),\n      properties = new Map();\n\n    for (const dict of dictArray) {\n      if (!(dict instanceof Dict)) {\n        continue;\n      }\n      for (const [key, value] of dict._map) {\n        let property = properties.get(key);\n        if (property === undefined) {\n          property = [];\n          properties.set(key, property);\n        } else if (!mergeSubDicts || !(value instanceof Dict)) {\n          // Ignore additional entries, if either:\n          //  - This is a \"shallow\" merge, where only the first element matters.\n          //  - The value is *not* a `Dict`, since other types cannot be merged.\n          continue;\n        }\n        property.push(value);\n      }\n    }\n    for (const [name, values] of properties) {\n      if (values.length === 1 || !(values[0] instanceof Dict)) {\n        mergedDict._map.set(name, values[0]);\n        continue;\n      }\n      const subDict = new Dict(xref);\n\n      for (const dict of values) {\n        for (const [key, value] of dict._map) {\n          if (!subDict._map.has(key)) {\n            subDict._map.set(key, value);\n          }\n        }\n      }\n      if (subDict.size > 0) {\n        mergedDict._map.set(name, subDict);\n      }\n    }\n    properties.clear();\n\n    return mergedDict.size > 0 ? mergedDict : Dict.empty;\n  }\n\n  clone() {\n    const dict = new Dict(this.xref);\n    for (const key of this.getKeys()) {\n      dict.set(key, this.getRaw(key));\n    }\n    return dict;\n  }\n\n  delete(key) {\n    delete this._map[key];\n  }\n}\n\nclass Ref {\n  constructor(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n\n  toString() {\n    // This function is hot, so we make the string as compact as possible.\n    // |this.gen| is almost always zero, so we treat that case specially.\n    if (this.gen === 0) {\n      return `${this.num}R`;\n    }\n    return `${this.num}R${this.gen}`;\n  }\n\n  static fromString(str) {\n    const ref = RefCache[str];\n    if (ref) {\n      return ref;\n    }\n    const m = /^(\\d+)R(\\d*)$/.exec(str);\n    if (!m || m[1] === \"0\") {\n      return null;\n    }\n\n    // eslint-disable-next-line no-restricted-syntax\n    return (RefCache[str] = new Ref(\n      parseInt(m[1]),\n      !m[2] ? 0 : parseInt(m[2])\n    ));\n  }\n\n  static get(num, gen) {\n    const key = gen === 0 ? `${num}R` : `${num}R${gen}`;\n    // eslint-disable-next-line no-restricted-syntax\n    return (RefCache[key] ||= new Ref(num, gen));\n  }\n}\n\n// The reference is identified by number and generation.\n// This structure stores only one instance of the reference.\nclass RefSet {\n  constructor(parent = null) {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n      parent &&\n      !(parent instanceof RefSet)\n    ) {\n      unreachable('RefSet: Invalid \"parent\" value.');\n    }\n    this._set = new Set(parent?._set);\n  }\n\n  has(ref) {\n    return this._set.has(ref.toString());\n  }\n\n  put(ref) {\n    this._set.add(ref.toString());\n  }\n\n  remove(ref) {\n    this._set.delete(ref.toString());\n  }\n\n  [Symbol.iterator]() {\n    return this._set.values();\n  }\n\n  clear() {\n    this._set.clear();\n  }\n}\n\nclass RefSetCache {\n  constructor() {\n    this._map = new Map();\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  get(ref) {\n    return this._map.get(ref.toString());\n  }\n\n  has(ref) {\n    return this._map.has(ref.toString());\n  }\n\n  put(ref, obj) {\n    this._map.set(ref.toString(), obj);\n  }\n\n  putAlias(ref, aliasRef) {\n    this._map.set(ref.toString(), this.get(aliasRef));\n  }\n\n  [Symbol.iterator]() {\n    return this._map.values();\n  }\n\n  clear() {\n    this._map.clear();\n  }\n\n  *values() {\n    yield* this._map.values();\n  }\n\n  *items() {\n    for (const [ref, value] of this._map) {\n      yield [Ref.fromString(ref), value];\n    }\n  }\n}\n\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\n\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\n\nfunction isDict(v, type) {\n  return (\n    v instanceof Dict && (type === undefined || isName(v.get(\"Type\"), type))\n  );\n}\n\nfunction isRefsEqual(v1, v2) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      v1 instanceof Ref && v2 instanceof Ref,\n      \"isRefsEqual: Both parameters should be `Ref`s.\"\n    );\n  }\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\n\nexport {\n  CIRCULAR_REF,\n  clearPrimitiveCaches,\n  Cmd,\n  Dict,\n  EOF,\n  isCmd,\n  isDict,\n  isName,\n  isRefsEqual,\n  Name,\n  Ref,\n  RefSet,\n  RefSetCache,\n};\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bytesToString, shadow, unreachable } from \"../shared/util.js\";\n\nclass BaseStream {\n  constructor() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) &&\n      this.constructor === BaseStream\n    ) {\n      unreachable(\"Cannot initialize BaseStream.\");\n    }\n  }\n\n  // eslint-disable-next-line getter-return\n  get length() {\n    unreachable(\"Abstract getter `length` accessed\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get isEmpty() {\n    unreachable(\"Abstract getter `isEmpty` accessed\");\n  }\n\n  get isDataLoaded() {\n    return shadow(this, \"isDataLoaded\", true);\n  }\n\n  getByte() {\n    unreachable(\"Abstract method `getByte` called\");\n  }\n\n  getBytes(length) {\n    unreachable(\"Abstract method `getBytes` called\");\n  }\n\n  /**\n   * NOTE: This method can only be used to get image-data that is guaranteed\n   *       to be fully loaded, since otherwise intermittent errors may occur;\n   *       note the `ObjectLoader` class.\n   */\n  async getImageData(length, decoderOptions) {\n    return this.getBytes(length, decoderOptions);\n  }\n\n  async asyncGetBytes() {\n    unreachable(\"Abstract method `asyncGetBytes` called\");\n  }\n\n  get isAsync() {\n    return false;\n  }\n\n  get isAsyncDecoder() {\n    return false;\n  }\n\n  get canAsyncDecodeImageFromBuffer() {\n    return false;\n  }\n\n  async getTransferableImage() {\n    return null;\n  }\n\n  peekByte() {\n    const peekedByte = this.getByte();\n    if (peekedByte !== -1) {\n      this.pos--;\n    }\n    return peekedByte;\n  }\n\n  peekBytes(length) {\n    const bytes = this.getBytes(length);\n    this.pos -= bytes.length;\n    return bytes;\n  }\n\n  getUint16() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    if (b0 === -1 || b1 === -1) {\n      return -1;\n    }\n    return (b0 << 8) + b1;\n  }\n\n  getInt32() {\n    const b0 = this.getByte();\n    const b1 = this.getByte();\n    const b2 = this.getByte();\n    const b3 = this.getByte();\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n\n  getByteRange(begin, end) {\n    unreachable(\"Abstract method `getByteRange` called\");\n  }\n\n  getString(length) {\n    return bytesToString(this.getBytes(length));\n  }\n\n  skip(n) {\n    this.pos += n || 1;\n  }\n\n  reset() {\n    unreachable(\"Abstract method `reset` called\");\n  }\n\n  moveStart() {\n    unreachable(\"Abstract method `moveStart` called\");\n  }\n\n  makeSubStream(start, length, dict = null) {\n    unreachable(\"Abstract method `makeSubStream` called\");\n  }\n\n  /**\n   * @returns {Array | null}\n   */\n  getBaseStreams() {\n    return null;\n  }\n}\n\nexport { BaseStream };\n","/* Copyright 2019 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationEditorPrefix,\n  assert,\n  BaseException,\n  hexNumbers,\n  objectSize,\n  stringToPDFString,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { Dict, isName, Ref, RefSet } from \"./primitives.js\";\nimport { BaseStream } from \"./base_stream.js\";\n\nconst PDF_VERSION_REGEXP = /^[1-9]\\.\\d$/;\nconst MAX_INT_32 = 2 ** 31 - 1;\nconst MIN_INT_32 = -(2 ** 31);\n\nfunction getLookupTableFactory(initializer) {\n  let lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\n\nclass MissingDataException extends BaseException {\n  constructor(begin, end) {\n    super(`Missing data [${begin}, ${end})`, \"MissingDataException\");\n    this.begin = begin;\n    this.end = end;\n  }\n}\n\nclass ParserEOFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"ParserEOFException\");\n  }\n}\n\nclass XRefEntryException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefEntryException\");\n  }\n}\n\nclass XRefParseException extends BaseException {\n  constructor(msg) {\n    super(msg, \"XRefParseException\");\n  }\n}\n\n/**\n * Combines multiple ArrayBuffers into a single Uint8Array.\n * @param {Array<ArrayBuffer>} arr - An array of ArrayBuffers.\n * @returns {Uint8Array}\n */\nfunction arrayBuffersToBytes(arr) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    for (const item of arr) {\n      assert(\n        item instanceof ArrayBuffer,\n        \"arrayBuffersToBytes - expected an ArrayBuffer.\"\n      );\n    }\n  }\n  const length = arr.length;\n  if (length === 0) {\n    return new Uint8Array(0);\n  }\n  if (length === 1) {\n    return new Uint8Array(arr[0]);\n  }\n  let dataLength = 0;\n  for (let i = 0; i < length; i++) {\n    dataLength += arr[i].byteLength;\n  }\n  const data = new Uint8Array(dataLength);\n  let pos = 0;\n  for (let i = 0; i < length; i++) {\n    const item = new Uint8Array(arr[i]);\n    data.set(item, pos);\n    pos += item.byteLength;\n  }\n  return data;\n}\n\nasync function fetchBinaryData(url) {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(\n      `Failed to fetch file \"${url}\" with \"${response.statusText}\".`\n    );\n  }\n  return new Uint8Array(await response.arrayBuffer());\n}\n\n/**\n * Get the value of an inheritable property.\n *\n * If the PDF specification explicitly lists a property in a dictionary as\n * inheritable, then the value of the property may be present in the dictionary\n * itself or in one or more parents of the dictionary.\n *\n * If the key is not found in the tree, `undefined` is returned. Otherwise,\n * the value for the key is returned or, if `stopWhenFound` is `false`, a list\n * of values is returned.\n *\n * @param {Dict} dict - Dictionary from where to start the traversal.\n * @param {string} key - The key of the property to find the value for.\n * @param {boolean} getArray - Whether or not the value should be fetched as an\n *   array. The default value is `false`.\n * @param {boolean} stopWhenFound - Whether or not to stop the traversal when\n *   the key is found. If set to `false`, we always walk up the entire parent\n *   chain, for example to be able to find `\\Resources` placed on multiple\n *   levels of the tree. The default value is `true`.\n */\nfunction getInheritableProperty({\n  dict,\n  key,\n  getArray = false,\n  stopWhenFound = true,\n}) {\n  let values;\n  const visited = new RefSet();\n\n  while (dict instanceof Dict && !(dict.objId && visited.has(dict.objId))) {\n    if (dict.objId) {\n      visited.put(dict.objId);\n    }\n    const value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      (values ||= []).push(value);\n    }\n    dict = dict.get(\"Parent\");\n  }\n  return values;\n}\n\n/**\n * Get the parent dictionary to update when a property is set.\n *\n * @param {Dict} dict - Dictionary from where to start the traversal.\n * @param {Ref} ref - The reference to the dictionary.\n * @param {XRef} xref - The `XRef` instance.\n */\nfunction getParentToUpdate(dict, ref, xref) {\n  const visited = new RefSet();\n  const firstDict = dict;\n  const result = { dict: null, ref: null };\n\n  while (dict instanceof Dict && !visited.has(ref)) {\n    visited.put(ref);\n    if (dict.has(\"T\")) {\n      break;\n    }\n    ref = dict.getRaw(\"Parent\");\n    if (!(ref instanceof Ref)) {\n      return result;\n    }\n    dict = xref.fetch(ref);\n  }\n  if (dict instanceof Dict && dict !== firstDict) {\n    result.dict = dict;\n    result.ref = ref;\n  }\n  return result;\n}\n\n// prettier-ignore\nconst ROMAN_NUMBER_MAP = [\n  \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\",\n  \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\",\n  \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"\n];\n\n/**\n * Converts positive integers to (upper case) Roman numerals.\n * @param {number} number - The number that should be converted.\n * @param {boolean} lowerCase - Indicates if the result should be converted\n *   to lower case letters. The default value is `false`.\n * @returns {string} The resulting Roman number.\n */\nfunction toRomanNumerals(number, lowerCase = false) {\n  assert(\n    Number.isInteger(number) && number > 0,\n    \"The number should be a positive integer.\"\n  );\n\n  const roman =\n    \"M\".repeat((number / 1000) | 0) +\n    ROMAN_NUMBER_MAP[((number % 1000) / 100) | 0] +\n    ROMAN_NUMBER_MAP[10 + (((number % 100) / 10) | 0)] +\n    ROMAN_NUMBER_MAP[20 + (number % 10)];\n  return lowerCase ? roman.toLowerCase() : roman;\n}\n\n// Calculate the base 2 logarithm of the number `x`. This differs from the\n// native function in the sense that it returns the ceiling value and that it\n// returns 0 instead of `Infinity`/`NaN` for `x` values smaller than/equal to 0.\nfunction log2(x) {\n  return x > 0 ? Math.ceil(Math.log2(x)) : 0;\n}\n\nfunction readInt8(data, offset) {\n  return (data[offset] << 24) >> 24;\n}\n\nfunction readInt16(data, offset) {\n  return ((data[offset] << 24) | (data[offset + 1] << 16)) >> 16;\n}\n\nfunction readUint16(data, offset) {\n  return (data[offset] << 8) | data[offset + 1];\n}\n\nfunction readUint32(data, offset) {\n  return (\n    ((data[offset] << 24) |\n      (data[offset + 1] << 16) |\n      (data[offset + 2] << 8) |\n      data[offset + 3]) >>>\n    0\n  );\n}\n\n// Checks if ch is one of the following characters: SPACE, TAB, CR or LF.\nfunction isWhiteSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n\n/**\n * Checks if something is an Array containing only boolean values,\n * and (optionally) checks its length.\n * @param {any} arr\n * @param {number | null} len\n * @returns {boolean}\n */\nfunction isBooleanArray(arr, len) {\n  return (\n    Array.isArray(arr) &&\n    (len === null || arr.length === len) &&\n    arr.every(x => typeof x === \"boolean\")\n  );\n}\n\n/**\n * Checks if something is an Array containing only numbers,\n * and (optionally) checks its length.\n * @param {any} arr\n * @param {number | null} len\n * @returns {boolean}\n */\nfunction isNumberArray(arr, len) {\n  if (Array.isArray(arr)) {\n    return (\n      (len === null || arr.length === len) &&\n      arr.every(x => typeof x === \"number\")\n    );\n  }\n\n  // This check allows us to have typed arrays but not the\n  // BigInt64Array/BigUint64Array types (their elements aren't \"number\").\n  return (\n    ArrayBuffer.isView(arr) &&\n    !(arr instanceof BigInt64Array || arr instanceof BigUint64Array) &&\n    (len === null || arr.length === len)\n  );\n}\n\n// Returns the matrix, or the fallback value if it's invalid.\nfunction lookupMatrix(arr, fallback) {\n  return isNumberArray(arr, 6) ? arr : fallback;\n}\n\n// Returns the rectangle, or the fallback value if it's invalid.\nfunction lookupRect(arr, fallback) {\n  return isNumberArray(arr, 4) ? arr : fallback;\n}\n\n// Returns the normalized rectangle, or the fallback value if it's invalid.\nfunction lookupNormalRect(arr, fallback) {\n  return isNumberArray(arr, 4) ? Util.normalizeRect(arr) : fallback;\n}\n\n/**\n * AcroForm field names use an array like notation to refer to\n * repeated XFA elements e.g. foo.bar[nnn].\n * see: XFA Spec Chapter 3 - Repeated Elements\n *\n * @param {string} path - XFA path name.\n * @returns {Array} - Array of Objects with the name and pos of\n * each part of the path.\n */\nfunction parseXFAPath(path) {\n  const positionPattern = /(.+)\\[(\\d+)\\]$/;\n  return path.split(\".\").map(component => {\n    const m = component.match(positionPattern);\n    if (m) {\n      return { name: m[1], pos: parseInt(m[2], 10) };\n    }\n    return { name: component, pos: 0 };\n  });\n}\n\nfunction escapePDFName(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    // Whitespace or delimiters aren't regular chars, so escape them.\n    if (\n      char < 0x21 ||\n      char > 0x7e ||\n      char === 0x23 /* # */ ||\n      char === 0x28 /* ( */ ||\n      char === 0x29 /* ) */ ||\n      char === 0x3c /* < */ ||\n      char === 0x3e /* > */ ||\n      char === 0x5b /* [ */ ||\n      char === 0x5d /* ] */ ||\n      char === 0x7b /* { */ ||\n      char === 0x7d /* } */ ||\n      char === 0x2f /* / */ ||\n      char === 0x25 /* % */\n    ) {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`#${char.toString(16)}`);\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n\n  return buffer.join(\"\");\n}\n\n// Replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\" by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n// in order to write it in a PDF file.\nfunction escapeString(str) {\n  return str.replaceAll(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction _collectJS(entry, xref, list, parents) {\n  if (!entry) {\n    return;\n  }\n\n  let parent = null;\n  if (entry instanceof Ref) {\n    if (parents.has(entry)) {\n      // If we've already found entry then we've a cycle.\n      return;\n    }\n    parent = entry;\n    parents.put(parent);\n    entry = xref.fetch(entry);\n  }\n  if (Array.isArray(entry)) {\n    for (const element of entry) {\n      _collectJS(element, xref, list, parents);\n    }\n  } else if (entry instanceof Dict) {\n    if (isName(entry.get(\"S\"), \"JavaScript\")) {\n      const js = entry.get(\"JS\");\n      let code;\n      if (js instanceof BaseStream) {\n        code = js.getString();\n      } else if (typeof js === \"string\") {\n        code = js;\n      }\n      code &&= stringToPDFString(code).replaceAll(\"\\x00\", \"\");\n      if (code) {\n        list.push(code);\n      }\n    }\n    _collectJS(entry.getRaw(\"Next\"), xref, list, parents);\n  }\n\n  if (parent) {\n    parents.remove(parent);\n  }\n}\n\nfunction collectActions(xref, dict, eventType) {\n  const actions = Object.create(null);\n  const additionalActionsDicts = getInheritableProperty({\n    dict,\n    key: \"AA\",\n    stopWhenFound: false,\n  });\n  if (additionalActionsDicts) {\n    // additionalActionsDicts contains dicts from ancestors\n    // as they're found in the tree from bottom to top.\n    // So the dicts are visited in reverse order to guarantee\n    // that actions from elder ancestors will be overwritten\n    // by ones from younger ancestors.\n    for (let i = additionalActionsDicts.length - 1; i >= 0; i--) {\n      const additionalActions = additionalActionsDicts[i];\n      if (!(additionalActions instanceof Dict)) {\n        continue;\n      }\n      for (const key of additionalActions.getKeys()) {\n        const action = eventType[key];\n        if (!action) {\n          continue;\n        }\n        const actionDict = additionalActions.getRaw(key);\n        const parents = new RefSet();\n        const list = [];\n        _collectJS(actionDict, xref, list, parents);\n        if (list.length > 0) {\n          actions[action] = list;\n        }\n      }\n    }\n  }\n  // Collect the Action if any (we may have one on pushbutton).\n  if (dict.has(\"A\")) {\n    const actionDict = dict.get(\"A\");\n    const parents = new RefSet();\n    const list = [];\n    _collectJS(actionDict, xref, list, parents);\n    if (list.length > 0) {\n      actions.Action = list;\n    }\n  }\n  return objectSize(actions) > 0 ? actions : null;\n}\n\nconst XMLEntities = {\n  /* < */ 0x3c: \"&lt;\",\n  /* > */ 0x3e: \"&gt;\",\n  /* & */ 0x26: \"&amp;\",\n  /* \" */ 0x22: \"&quot;\",\n  /* ' */ 0x27: \"&apos;\",\n};\n\nfunction* codePointIter(str) {\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n      // char is represented by two u16\n      i++;\n    }\n    yield char;\n  }\n}\n\nfunction encodeToXmlString(str) {\n  const buffer = [];\n  let start = 0;\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.codePointAt(i);\n    if (0x20 <= char && char <= 0x7e) {\n      // ascii\n      const entity = XMLEntities[char];\n      if (entity) {\n        if (start < i) {\n          buffer.push(str.substring(start, i));\n        }\n        buffer.push(entity);\n        start = i + 1;\n      }\n    } else {\n      if (start < i) {\n        buffer.push(str.substring(start, i));\n      }\n      buffer.push(`&#x${char.toString(16).toUpperCase()};`);\n      if (char > 0xd7ff && (char < 0xe000 || char > 0xfffd)) {\n        // char is represented by two u16\n        i++;\n      }\n      start = i + 1;\n    }\n  }\n\n  if (buffer.length === 0) {\n    return str;\n  }\n  if (start < str.length) {\n    buffer.push(str.substring(start, str.length));\n  }\n  return buffer.join(\"\");\n}\n\nfunction validateFontName(fontFamily, mustWarn = false) {\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/string.\n  const m = /^(\"|').*(\"|')$/.exec(fontFamily);\n  if (m && m[1] === m[2]) {\n    const re = new RegExp(`[^\\\\\\\\]${m[1]}`);\n    if (re.test(fontFamily.slice(1, -1))) {\n      if (mustWarn) {\n        warn(`FontFamily contains unescaped ${m[1]}: ${fontFamily}.`);\n      }\n      return false;\n    }\n  } else {\n    // See https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident.\n    for (const ident of fontFamily.split(/[ \\t]+/)) {\n      if (/^(\\d|(-(\\d|-)))/.test(ident) || !/^[\\w-\\\\]+$/.test(ident)) {\n        if (mustWarn) {\n          warn(`FontFamily contains invalid <custom-ident>: ${fontFamily}.`);\n        }\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction validateCSSFont(cssFontInfo) {\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-style.\n  const DEFAULT_CSS_FONT_OBLIQUE = \"14\";\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight.\n  const DEFAULT_CSS_FONT_WEIGHT = \"400\";\n  const CSS_FONT_WEIGHT_VALUES = new Set([\n    \"100\",\n    \"200\",\n    \"300\",\n    \"400\",\n    \"500\",\n    \"600\",\n    \"700\",\n    \"800\",\n    \"900\",\n    \"1000\",\n    \"normal\",\n    \"bold\",\n    \"bolder\",\n    \"lighter\",\n  ]);\n\n  const { fontFamily, fontWeight, italicAngle } = cssFontInfo;\n\n  if (!validateFontName(fontFamily, true)) {\n    return false;\n  }\n\n  const weight = fontWeight ? fontWeight.toString() : \"\";\n  cssFontInfo.fontWeight = CSS_FONT_WEIGHT_VALUES.has(weight)\n    ? weight\n    : DEFAULT_CSS_FONT_WEIGHT;\n\n  const angle = parseFloat(italicAngle);\n  cssFontInfo.italicAngle =\n    isNaN(angle) || angle < -90 || angle > 90\n      ? DEFAULT_CSS_FONT_OBLIQUE\n      : italicAngle.toString();\n\n  return true;\n}\n\nfunction recoverJsURL(str) {\n  // Attempt to recover valid URLs from `JS` entries with certain\n  // white-listed formats:\n  //  - window.open('http://example.com')\n  //  - app.launchURL('http://example.com', true)\n  //  - xfa.host.gotoURL('http://example.com')\n  const URL_OPEN_METHODS = [\"app.launchURL\", \"window.open\", \"xfa.host.gotoURL\"];\n  const regex = new RegExp(\n    \"^\\\\s*(\" +\n      URL_OPEN_METHODS.join(\"|\").replaceAll(\".\", \"\\\\.\") +\n      \")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\n    \"i\"\n  );\n\n  const jsUrl = regex.exec(str);\n  if (jsUrl?.[2]) {\n    return {\n      url: jsUrl[2],\n      newWindow: jsUrl[1] === \"app.launchURL\" && jsUrl[3] === \"true\",\n    };\n  }\n\n  return null;\n}\n\nfunction numberToString(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n\n  const roundedValue = Math.round(value * 100);\n  if (roundedValue % 100 === 0) {\n    return (roundedValue / 100).toString();\n  }\n\n  if (roundedValue % 10 === 0) {\n    return value.toFixed(1);\n  }\n\n  return value.toFixed(2);\n}\n\nfunction getNewAnnotationsMap(annotationStorage) {\n  if (!annotationStorage) {\n    return null;\n  }\n  const newAnnotationsByPage = new Map();\n  // The concept of page in a XFA is very different, so\n  // editing is just not implemented.\n  for (const [key, value] of annotationStorage) {\n    if (!key.startsWith(AnnotationEditorPrefix)) {\n      continue;\n    }\n    let annotations = newAnnotationsByPage.get(value.pageIndex);\n    if (!annotations) {\n      annotations = [];\n      newAnnotationsByPage.set(value.pageIndex, annotations);\n    }\n    annotations.push(value);\n  }\n  return newAnnotationsByPage.size > 0 ? newAnnotationsByPage : null;\n}\n\nfunction stringToAsciiOrUTF16BE(str) {\n  return isAscii(str) ? str : stringToUTF16String(str, /* bigEndian = */ true);\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16HexString(str) {\n  const buf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(hexNumbers[(char >> 8) & 0xff], hexNumbers[char & 0xff]);\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF16String(str, bigEndian = false) {\n  const buf = [];\n  if (bigEndian) {\n    buf.push(\"\\xFE\\xFF\");\n  }\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction getRotationMatrix(rotation, width, height) {\n  switch (rotation) {\n    case 90:\n      return [0, 1, -1, 0, width, 0];\n    case 180:\n      return [-1, 0, 0, -1, width, height];\n    case 270:\n      return [0, -1, 1, 0, 0, height];\n    default:\n      throw new Error(\"Invalid rotation\");\n  }\n}\n\n/**\n * Get the number of bytes to use to represent the given positive integer.\n * If n is zero, the function returns 0 which means that we don't need to waste\n * a byte to represent it.\n * @param {number} x - a positive integer.\n * @returns {number}\n */\nfunction getSizeInBytes(x) {\n  // n bits are required for numbers up to 2^n - 1.\n  // So for a number x, we need ceil(log2(1 + x)) bits.\n  return Math.ceil(Math.ceil(Math.log2(1 + x)) / 8);\n}\n\nexport {\n  arrayBuffersToBytes,\n  codePointIter,\n  collectActions,\n  encodeToXmlString,\n  escapePDFName,\n  escapeString,\n  fetchBinaryData,\n  getInheritableProperty,\n  getLookupTableFactory,\n  getNewAnnotationsMap,\n  getParentToUpdate,\n  getRotationMatrix,\n  getSizeInBytes,\n  isAscii,\n  isBooleanArray,\n  isNumberArray,\n  isWhiteSpace,\n  log2,\n  lookupMatrix,\n  lookupNormalRect,\n  lookupRect,\n  MAX_INT_32,\n  MIN_INT_32,\n  MissingDataException,\n  numberToString,\n  ParserEOFException,\n  parseXFAPath,\n  PDF_VERSION_REGEXP,\n  readInt16,\n  readInt8,\n  readUint16,\n  readUint32,\n  recoverJsURL,\n  stringToAsciiOrUTF16BE,\n  stringToUTF16HexString,\n  stringToUTF16String,\n  toRomanNumerals,\n  validateCSSFont,\n  validateFontName,\n  XRefEntryException,\n  XRefParseException,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Table C-2\nconst QeTable = [\n  { qe: 0x5601, nmps: 1, nlps: 1, switchFlag: 1 },\n  { qe: 0x3401, nmps: 2, nlps: 6, switchFlag: 0 },\n  { qe: 0x1801, nmps: 3, nlps: 9, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 4, nlps: 12, switchFlag: 0 },\n  { qe: 0x0521, nmps: 5, nlps: 29, switchFlag: 0 },\n  { qe: 0x0221, nmps: 38, nlps: 33, switchFlag: 0 },\n  { qe: 0x5601, nmps: 7, nlps: 6, switchFlag: 1 },\n  { qe: 0x5401, nmps: 8, nlps: 14, switchFlag: 0 },\n  { qe: 0x4801, nmps: 9, nlps: 14, switchFlag: 0 },\n  { qe: 0x3801, nmps: 10, nlps: 14, switchFlag: 0 },\n  { qe: 0x3001, nmps: 11, nlps: 17, switchFlag: 0 },\n  { qe: 0x2401, nmps: 12, nlps: 18, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 13, nlps: 20, switchFlag: 0 },\n  { qe: 0x1601, nmps: 29, nlps: 21, switchFlag: 0 },\n  { qe: 0x5601, nmps: 15, nlps: 14, switchFlag: 1 },\n  { qe: 0x5401, nmps: 16, nlps: 14, switchFlag: 0 },\n  { qe: 0x5101, nmps: 17, nlps: 15, switchFlag: 0 },\n  { qe: 0x4801, nmps: 18, nlps: 16, switchFlag: 0 },\n  { qe: 0x3801, nmps: 19, nlps: 17, switchFlag: 0 },\n  { qe: 0x3401, nmps: 20, nlps: 18, switchFlag: 0 },\n  { qe: 0x3001, nmps: 21, nlps: 19, switchFlag: 0 },\n  { qe: 0x2801, nmps: 22, nlps: 19, switchFlag: 0 },\n  { qe: 0x2401, nmps: 23, nlps: 20, switchFlag: 0 },\n  { qe: 0x2201, nmps: 24, nlps: 21, switchFlag: 0 },\n  { qe: 0x1c01, nmps: 25, nlps: 22, switchFlag: 0 },\n  { qe: 0x1801, nmps: 26, nlps: 23, switchFlag: 0 },\n  { qe: 0x1601, nmps: 27, nlps: 24, switchFlag: 0 },\n  { qe: 0x1401, nmps: 28, nlps: 25, switchFlag: 0 },\n  { qe: 0x1201, nmps: 29, nlps: 26, switchFlag: 0 },\n  { qe: 0x1101, nmps: 30, nlps: 27, switchFlag: 0 },\n  { qe: 0x0ac1, nmps: 31, nlps: 28, switchFlag: 0 },\n  { qe: 0x09c1, nmps: 32, nlps: 29, switchFlag: 0 },\n  { qe: 0x08a1, nmps: 33, nlps: 30, switchFlag: 0 },\n  { qe: 0x0521, nmps: 34, nlps: 31, switchFlag: 0 },\n  { qe: 0x0441, nmps: 35, nlps: 32, switchFlag: 0 },\n  { qe: 0x02a1, nmps: 36, nlps: 33, switchFlag: 0 },\n  { qe: 0x0221, nmps: 37, nlps: 34, switchFlag: 0 },\n  { qe: 0x0141, nmps: 38, nlps: 35, switchFlag: 0 },\n  { qe: 0x0111, nmps: 39, nlps: 36, switchFlag: 0 },\n  { qe: 0x0085, nmps: 40, nlps: 37, switchFlag: 0 },\n  { qe: 0x0049, nmps: 41, nlps: 38, switchFlag: 0 },\n  { qe: 0x0025, nmps: 42, nlps: 39, switchFlag: 0 },\n  { qe: 0x0015, nmps: 43, nlps: 40, switchFlag: 0 },\n  { qe: 0x0009, nmps: 44, nlps: 41, switchFlag: 0 },\n  { qe: 0x0005, nmps: 45, nlps: 42, switchFlag: 0 },\n  { qe: 0x0001, nmps: 45, nlps: 43, switchFlag: 0 },\n  { qe: 0x5601, nmps: 46, nlps: 46, switchFlag: 0 },\n];\n\n/**\n * This class implements the QM Coder decoding as defined in\n *   JPEG 2000 Part I Final Committee Draft Version 1.0\n *   Annex C.3 Arithmetic decoding procedure\n * available at http://www.jpeg.org/public/fcd15444-1.pdf\n *\n * The arithmetic decoder is used in conjunction with context models to decode\n * JPEG2000 and JBIG2 streams.\n */\nclass ArithmeticDecoder {\n  // C.3.5 Initialisation of the decoder (INITDEC)\n  constructor(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n\n    this.chigh = data[start];\n    this.clow = 0;\n\n    this.byteIn();\n\n    this.chigh = ((this.chigh << 7) & 0xffff) | ((this.clow >> 9) & 0x7f);\n    this.clow = (this.clow << 7) & 0xffff;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n\n  // C.3.4 Compressed data input (BYTEIN)\n  byteIn() {\n    const data = this.data;\n    let bp = this.bp;\n\n    if (data[bp] === 0xff) {\n      if (data[bp + 1] > 0x8f) {\n        this.clow += 0xff00;\n        this.ct = 8;\n      } else {\n        bp++;\n        this.clow += data[bp] << 9;\n        this.ct = 7;\n        this.bp = bp;\n      }\n    } else {\n      bp++;\n      this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xff00;\n      this.ct = 8;\n      this.bp = bp;\n    }\n    if (this.clow > 0xffff) {\n      this.chigh += this.clow >> 16;\n      this.clow &= 0xffff;\n    }\n  }\n\n  // C.3.2 Decoding a decision (DECODE)\n  readBit(contexts, pos) {\n    // Contexts are packed into 1 byte:\n    // highest 7 bits carry cx.index, lowest bit carries cx.mps\n    let cx_index = contexts[pos] >> 1,\n      cx_mps = contexts[pos] & 1;\n    const qeTableIcx = QeTable[cx_index];\n    const qeIcx = qeTableIcx.qe;\n    let d;\n    let a = this.a - qeIcx;\n\n    if (this.chigh < qeIcx) {\n      // exchangeLps\n      if (a < qeIcx) {\n        a = qeIcx;\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      } else {\n        a = qeIcx;\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      }\n    } else {\n      this.chigh -= qeIcx;\n      if ((a & 0x8000) !== 0) {\n        this.a = a;\n        return cx_mps;\n      }\n      // exchangeMps\n      if (a < qeIcx) {\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n          cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n      } else {\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n      }\n    }\n    // C.3.3 renormD;\n    do {\n      if (this.ct === 0) {\n        this.byteIn();\n      }\n\n      a <<= 1;\n      this.chigh = ((this.chigh << 1) & 0xffff) | ((this.clow >> 15) & 1);\n      this.clow = (this.clow << 1) & 0xffff;\n      this.ct--;\n    } while ((a & 0x8000) === 0);\n    this.a = a;\n\n    contexts[pos] = (cx_index << 1) | cx_mps;\n    return d;\n  }\n}\n\nexport { ArithmeticDecoder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* Copyright 1996-2003 Glyph & Cog, LLC\n *\n * The CCITT stream implementation contained in this file is a JavaScript port\n * of XPDF's implementation, made available under the Apache 2.0 open source\n * license.\n */\n\nimport { FormatError, info } from \"../shared/util.js\";\n\n/**\n * @typedef {Object} CCITTFaxDecoderSource\n * @property {function} next - Method that return one byte of data for decoding,\n *   or -1 when EOF is reached.\n */\n\nconst ccittEOL = -2;\nconst ccittEOF = -1;\nconst twoDimPass = 0;\nconst twoDimHoriz = 1;\nconst twoDimVert0 = 2;\nconst twoDimVertR1 = 3;\nconst twoDimVertL1 = 4;\nconst twoDimVertR2 = 5;\nconst twoDimVertL2 = 6;\nconst twoDimVertR3 = 7;\nconst twoDimVertL3 = 8;\n\n// prettier-ignore\nconst twoDimTable = [\n  [-1, -1], [-1, -1],                   // 000000x\n  [7, twoDimVertL3],                    // 0000010\n  [7, twoDimVertR3],                    // 0000011\n  [6, twoDimVertL2], [6, twoDimVertL2], // 000010x\n  [6, twoDimVertR2], [6, twoDimVertR2], // 000011x\n  [4, twoDimPass], [4, twoDimPass],     // 0001xxx\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [4, twoDimPass], [4, twoDimPass],\n  [3, twoDimHoriz], [3, twoDimHoriz],   // 001xxxx\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimHoriz], [3, twoDimHoriz],\n  [3, twoDimVertL1], [3, twoDimVertL1], // 010xxxx\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertL1], [3, twoDimVertL1],\n  [3, twoDimVertR1], [3, twoDimVertR1], // 011xxxx\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [3, twoDimVertR1], [3, twoDimVertR1],\n  [1, twoDimVert0], [1, twoDimVert0],   // 1xxxxxx\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0],\n  [1, twoDimVert0], [1, twoDimVert0]\n];\n\n// prettier-ignore\nconst whiteTable1 = [\n  [-1, -1],                               // 00000\n  [12, ccittEOL],                         // 00001\n  [-1, -1], [-1, -1],                     // 0001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 011xx\n  [11, 1792], [11, 1792],                 // 1000x\n  [12, 1984],                             // 10010\n  [12, 2048],                             // 10011\n  [12, 2112],                             // 10100\n  [12, 2176],                             // 10101\n  [12, 2240],                             // 10110\n  [12, 2304],                             // 10111\n  [11, 1856], [11, 1856],                 // 1100x\n  [11, 1920], [11, 1920],                 // 1101x\n  [12, 2368],                             // 11100\n  [12, 2432],                             // 11101\n  [12, 2496],                             // 11110\n  [12, 2560]                              // 11111\n];\n\n// prettier-ignore\nconst whiteTable2 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],     // 0000000xx\n  [8, 29], [8, 29],                           // 00000010x\n  [8, 30], [8, 30],                           // 00000011x\n  [8, 45], [8, 45],                           // 00000100x\n  [8, 46], [8, 46],                           // 00000101x\n  [7, 22], [7, 22], [7, 22], [7, 22],         // 0000011xx\n  [7, 23], [7, 23], [7, 23], [7, 23],         // 0000100xx\n  [8, 47], [8, 47],                           // 00001010x\n  [8, 48], [8, 48],                           // 00001011x\n  [6, 13], [6, 13], [6, 13], [6, 13],         // 000011xxx\n  [6, 13], [6, 13], [6, 13], [6, 13],\n  [7, 20], [7, 20], [7, 20], [7, 20],         // 0001000xx\n  [8, 33], [8, 33],                           // 00010010x\n  [8, 34], [8, 34],                           // 00010011x\n  [8, 35], [8, 35],                           // 00010100x\n  [8, 36], [8, 36],                           // 00010101x\n  [8, 37], [8, 37],                           // 00010110x\n  [8, 38], [8, 38],                           // 00010111x\n  [7, 19], [7, 19], [7, 19], [7, 19],         // 0001100xx\n  [8, 31], [8, 31],                           // 00011010x\n  [8, 32], [8, 32],                           // 00011011x\n  [6, 1], [6, 1], [6, 1], [6, 1],             // 000111xxx\n  [6, 1], [6, 1], [6, 1], [6, 1],\n  [6, 12], [6, 12], [6, 12], [6, 12],         // 001000xxx\n  [6, 12], [6, 12], [6, 12], [6, 12],\n  [8, 53], [8, 53],                           // 00100100x\n  [8, 54], [8, 54],                           // 00100101x\n  [7, 26], [7, 26], [7, 26], [7, 26],         // 0010011xx\n  [8, 39], [8, 39],                           // 00101000x\n  [8, 40], [8, 40],                           // 00101001x\n  [8, 41], [8, 41],                           // 00101010x\n  [8, 42], [8, 42],                           // 00101011x\n  [8, 43], [8, 43],                           // 00101100x\n  [8, 44], [8, 44],                           // 00101101x\n  [7, 21], [7, 21], [7, 21], [7, 21],         // 0010111xx\n  [7, 28], [7, 28], [7, 28], [7, 28],         // 0011000xx\n  [8, 61], [8, 61],                           // 00110010x\n  [8, 62], [8, 62],                           // 00110011x\n  [8, 63], [8, 63],                           // 00110100x\n  [8, 0], [8, 0],                             // 00110101x\n  [8, 320], [8, 320],                         // 00110110x\n  [8, 384], [8, 384],                         // 00110111x\n  [5, 10], [5, 10], [5, 10], [5, 10],         // 00111xxxx\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 10], [5, 10], [5, 10], [5, 10],\n  [5, 11], [5, 11], [5, 11], [5, 11],         // 01000xxxx\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [5, 11], [5, 11], [5, 11], [5, 11],\n  [7, 27], [7, 27], [7, 27], [7, 27],         // 0100100xx\n  [8, 59], [8, 59],                           // 01001010x\n  [8, 60], [8, 60],                           // 01001011x\n  [9, 1472],                                  // 010011000\n  [9, 1536],                                  // 010011001\n  [9, 1600],                                  // 010011010\n  [9, 1728],                                  // 010011011\n  [7, 18], [7, 18], [7, 18], [7, 18],         // 0100111xx\n  [7, 24], [7, 24], [7, 24], [7, 24],         // 0101000xx\n  [8, 49], [8, 49],                           // 01010010x\n  [8, 50], [8, 50],                           // 01010011x\n  [8, 51], [8, 51],                           // 01010100x\n  [8, 52], [8, 52],                           // 01010101x\n  [7, 25], [7, 25], [7, 25], [7, 25],         // 0101011xx\n  [8, 55], [8, 55],                           // 01011000x\n  [8, 56], [8, 56],                           // 01011001x\n  [8, 57], [8, 57],                           // 01011010x\n  [8, 58], [8, 58],                           // 01011011x\n  [6, 192], [6, 192], [6, 192], [6, 192],     // 010111xxx\n  [6, 192], [6, 192], [6, 192], [6, 192],\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664], // 011000xxx\n  [6, 1664], [6, 1664], [6, 1664], [6, 1664],\n  [8, 448], [8, 448],                         // 01100100x\n  [8, 512], [8, 512],                         // 01100101x\n  [9, 704],                                   // 011001100\n  [9, 768],                                   // 011001101\n  [8, 640], [8, 640],                         // 01100111x\n  [8, 576], [8, 576],                         // 01101000x\n  [9, 832],                                   // 011010010\n  [9, 896],                                   // 011010011\n  [9, 960],                                   // 011010100\n  [9, 1024],                                  // 011010101\n  [9, 1088],                                  // 011010110\n  [9, 1152],                                  // 011010111\n  [9, 1216],                                  // 011011000\n  [9, 1280],                                  // 011011001\n  [9, 1344],                                  // 011011010\n  [9, 1408],                                  // 011011011\n  [7, 256], [7, 256], [7, 256], [7, 256],     // 0110111xx\n  [4, 2], [4, 2], [4, 2], [4, 2],             // 0111xxxxx\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 2], [4, 2], [4, 2], [4, 2],\n  [4, 3], [4, 3], [4, 3], [4, 3],             // 1000xxxxx\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [4, 3], [4, 3], [4, 3], [4, 3],\n  [5, 128], [5, 128], [5, 128], [5, 128],     // 10010xxxx\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 128], [5, 128], [5, 128], [5, 128],\n  [5, 8], [5, 8], [5, 8], [5, 8],             // 10011xxxx\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 8], [5, 8], [5, 8], [5, 8],\n  [5, 9], [5, 9], [5, 9], [5, 9],             // 10100xxxx\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [5, 9], [5, 9], [5, 9], [5, 9],\n  [6, 16], [6, 16], [6, 16], [6, 16],         // 101010xxx\n  [6, 16], [6, 16], [6, 16], [6, 16],\n  [6, 17], [6, 17], [6, 17], [6, 17],         // 101011xxx\n  [6, 17], [6, 17], [6, 17], [6, 17],\n  [4, 4], [4, 4], [4, 4], [4, 4],             // 1011xxxxx\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 4], [4, 4], [4, 4], [4, 4],\n  [4, 5], [4, 5], [4, 5], [4, 5],             // 1100xxxxx\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [4, 5], [4, 5], [4, 5], [4, 5],\n  [6, 14], [6, 14], [6, 14], [6, 14],         // 110100xxx\n  [6, 14], [6, 14], [6, 14], [6, 14],\n  [6, 15], [6, 15], [6, 15], [6, 15],         // 110101xxx\n  [6, 15], [6, 15], [6, 15], [6, 15],\n  [5, 64], [5, 64], [5, 64], [5, 64],         // 11011xxxx\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [5, 64], [5, 64], [5, 64], [5, 64],\n  [4, 6], [4, 6], [4, 6], [4, 6],             // 1110xxxxx\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 6], [4, 6], [4, 6], [4, 6],\n  [4, 7], [4, 7], [4, 7], [4, 7],             // 1111xxxxx\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7],\n  [4, 7], [4, 7], [4, 7], [4, 7]\n];\n\n// prettier-ignore\nconst blackTable1 = [\n  [-1, -1], [-1, -1],                             // 000000000000x\n  [12, ccittEOL], [12, ccittEOL],                 // 000000000001x\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000001xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000010xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000011xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000100xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000101xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000110xx\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1],         // 00000000111xx\n  [11, 1792], [11, 1792], [11, 1792], [11, 1792], // 00000001000xx\n  [12, 1984], [12, 1984],                         // 000000010010x\n  [12, 2048], [12, 2048],                         // 000000010011x\n  [12, 2112], [12, 2112],                         // 000000010100x\n  [12, 2176], [12, 2176],                         // 000000010101x\n  [12, 2240], [12, 2240],                         // 000000010110x\n  [12, 2304], [12, 2304],                         // 000000010111x\n  [11, 1856], [11, 1856], [11, 1856], [11, 1856], // 00000001100xx\n  [11, 1920], [11, 1920], [11, 1920], [11, 1920], // 00000001101xx\n  [12, 2368], [12, 2368],                         // 000000011100x\n  [12, 2432], [12, 2432],                         // 000000011101x\n  [12, 2496], [12, 2496],                         // 000000011110x\n  [12, 2560], [12, 2560],                         // 000000011111x\n  [10, 18], [10, 18], [10, 18], [10, 18],         // 0000001000xxx\n  [10, 18], [10, 18], [10, 18], [10, 18],\n  [12, 52], [12, 52],                             // 000000100100x\n  [13, 640],                                      // 0000001001010\n  [13, 704],                                      // 0000001001011\n  [13, 768],                                      // 0000001001100\n  [13, 832],                                      // 0000001001101\n  [12, 55], [12, 55],                             // 000000100111x\n  [12, 56], [12, 56],                             // 000000101000x\n  [13, 1280],                                     // 0000001010010\n  [13, 1344],                                     // 0000001010011\n  [13, 1408],                                     // 0000001010100\n  [13, 1472],                                     // 0000001010101\n  [12, 59], [12, 59],                             // 000000101011x\n  [12, 60], [12, 60],                             // 000000101100x\n  [13, 1536],                                     // 0000001011010\n  [13, 1600],                                     // 0000001011011\n  [11, 24], [11, 24], [11, 24], [11, 24],         // 00000010111xx\n  [11, 25], [11, 25], [11, 25], [11, 25],         // 00000011000xx\n  [13, 1664],                                     // 0000001100100\n  [13, 1728],                                     // 0000001100101\n  [12, 320], [12, 320],                           // 000000110011x\n  [12, 384], [12, 384],                           // 000000110100x\n  [12, 448], [12, 448],                           // 000000110101x\n  [13, 512],                                      // 0000001101100\n  [13, 576],                                      // 0000001101101\n  [12, 53], [12, 53],                             // 000000110111x\n  [12, 54], [12, 54],                             // 000000111000x\n  [13, 896],                                      // 0000001110010\n  [13, 960],                                      // 0000001110011\n  [13, 1024],                                     // 0000001110100\n  [13, 1088],                                     // 0000001110101\n  [13, 1152],                                     // 0000001110110\n  [13, 1216],                                     // 0000001110111\n  [10, 64], [10, 64], [10, 64], [10, 64],         // 0000001111xxx\n  [10, 64], [10, 64], [10, 64], [10, 64]\n];\n\n// prettier-ignore\nconst blackTable2 = [\n  [8, 13], [8, 13], [8, 13], [8, 13],     // 00000100xxxx\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [8, 13], [8, 13], [8, 13], [8, 13],\n  [11, 23], [11, 23],                     // 00000101000x\n  [12, 50],                               // 000001010010\n  [12, 51],                               // 000001010011\n  [12, 44],                               // 000001010100\n  [12, 45],                               // 000001010101\n  [12, 46],                               // 000001010110\n  [12, 47],                               // 000001010111\n  [12, 57],                               // 000001011000\n  [12, 58],                               // 000001011001\n  [12, 61],                               // 000001011010\n  [12, 256],                              // 000001011011\n  [10, 16], [10, 16], [10, 16], [10, 16], // 0000010111xx\n  [10, 17], [10, 17], [10, 17], [10, 17], // 0000011000xx\n  [12, 48],                               // 000001100100\n  [12, 49],                               // 000001100101\n  [12, 62],                               // 000001100110\n  [12, 63],                               // 000001100111\n  [12, 30],                               // 000001101000\n  [12, 31],                               // 000001101001\n  [12, 32],                               // 000001101010\n  [12, 33],                               // 000001101011\n  [12, 40],                               // 000001101100\n  [12, 41],                               // 000001101101\n  [11, 22], [11, 22],                     // 00000110111x\n  [8, 14], [8, 14], [8, 14], [8, 14],     // 00000111xxxx\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [8, 14], [8, 14], [8, 14], [8, 14],\n  [7, 10], [7, 10], [7, 10], [7, 10],     // 0000100xxxxx\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 10], [7, 10], [7, 10], [7, 10],\n  [7, 11], [7, 11], [7, 11], [7, 11],     // 0000101xxxxx\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [7, 11], [7, 11], [7, 11], [7, 11],\n  [9, 15], [9, 15], [9, 15], [9, 15],     // 000011000xxx\n  [9, 15], [9, 15], [9, 15], [9, 15],\n  [12, 128],                              // 000011001000\n  [12, 192],                              // 000011001001\n  [12, 26],                               // 000011001010\n  [12, 27],                               // 000011001011\n  [12, 28],                               // 000011001100\n  [12, 29],                               // 000011001101\n  [11, 19], [11, 19],                     // 00001100111x\n  [11, 20], [11, 20],                     // 00001101000x\n  [12, 34],                               // 000011010010\n  [12, 35],                               // 000011010011\n  [12, 36],                               // 000011010100\n  [12, 37],                               // 000011010101\n  [12, 38],                               // 000011010110\n  [12, 39],                               // 000011010111\n  [11, 21], [11, 21],                     // 00001101100x\n  [12, 42],                               // 000011011010\n  [12, 43],                               // 000011011011\n  [10, 0], [10, 0], [10, 0], [10, 0],     // 0000110111xx\n  [7, 12], [7, 12], [7, 12], [7, 12],     // 0000111xxxxx\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12],\n  [7, 12], [7, 12], [7, 12], [7, 12]\n];\n\n// prettier-ignore\nconst blackTable3 = [\n  [-1, -1], [-1, -1], [-1, -1], [-1, -1], // 0000xx\n  [6, 9],                                 // 000100\n  [6, 8],                                 // 000101\n  [5, 7], [5, 7],                         // 00011x\n  [4, 6], [4, 6], [4, 6], [4, 6],         // 0010xx\n  [4, 5], [4, 5], [4, 5], [4, 5],         // 0011xx\n  [3, 1], [3, 1], [3, 1], [3, 1],         // 010xxx\n  [3, 1], [3, 1], [3, 1], [3, 1],\n  [3, 4], [3, 4], [3, 4], [3, 4],         // 011xxx\n  [3, 4], [3, 4], [3, 4], [3, 4],\n  [2, 3], [2, 3], [2, 3], [2, 3],         // 10xxxx\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 3], [2, 3], [2, 3], [2, 3],\n  [2, 2], [2, 2], [2, 2], [2, 2],         // 11xxxx\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2],\n  [2, 2], [2, 2], [2, 2], [2, 2]\n];\n\n/**\n * @param {CCITTFaxDecoderSource} source - The data which should be decoded.\n * @param {Object} [options] - Decoding options.\n */\nclass CCITTFaxDecoder {\n  constructor(source, options = {}) {\n    if (typeof source?.next !== \"function\") {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n\n    this.encoding = options.K || 0;\n    this.eoline = options.EndOfLine || false;\n    this.byteAlign = options.EncodedByteAlign || false;\n    this.columns = options.Columns || 1728;\n    this.rows = options.Rows || 0;\n    this.eoblock = options.EndOfBlock ?? true;\n    this.black = options.BlackIs1 || false;\n\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n\n    let code1;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n\n  readNextChar() {\n    if (this.eof) {\n      return -1;\n    }\n    const refLine = this.refLine;\n    const codingLine = this.codingLine;\n    const columns = this.columns;\n\n    let refPos, blackPixels, bits, i;\n\n    if (this.outputBits === 0) {\n      if (this.rowsDone) {\n        this.eof = true;\n      }\n      if (this.eof) {\n        return -1;\n      }\n      this.err = false;\n\n      let code1, code2, code3;\n      if (this.nextLine2D) {\n        for (i = 0; codingLine[i] < columns; ++i) {\n          refLine[i] = codingLine[i];\n        }\n        refLine[i++] = columns;\n        refLine[i] = columns;\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        refPos = 0;\n        blackPixels = 0;\n\n        while (codingLine[this.codingPos] < columns) {\n          code1 = this._getTwoDimCode();\n          switch (code1) {\n            case twoDimPass:\n              this._addPixels(refLine[refPos + 1], blackPixels);\n              if (refLine[refPos + 1] < columns) {\n                refPos += 2;\n              }\n              break;\n            case twoDimHoriz:\n              code1 = code2 = 0;\n              if (blackPixels) {\n                do {\n                  code1 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n              } else {\n                do {\n                  code1 += code3 = this._getWhiteCode();\n                } while (code3 >= 64);\n                do {\n                  code2 += code3 = this._getBlackCode();\n                } while (code3 >= 64);\n              }\n              this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n              if (codingLine[this.codingPos] < columns) {\n                this._addPixels(\n                  codingLine[this.codingPos] + code2,\n                  blackPixels ^ 1\n                );\n              }\n              while (\n                refLine[refPos] <= codingLine[this.codingPos] &&\n                refLine[refPos] < columns\n              ) {\n                refPos += 2;\n              }\n              break;\n            case twoDimVertR3:\n              this._addPixels(refLine[refPos] + 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR2:\n              this._addPixels(refLine[refPos] + 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertR1:\n              this._addPixels(refLine[refPos] + 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVert0:\n              this._addPixels(refLine[refPos], blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                ++refPos;\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL3:\n              this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL2:\n              this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case twoDimVertL1:\n              this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n              blackPixels ^= 1;\n              if (codingLine[this.codingPos] < columns) {\n                if (refPos > 0) {\n                  --refPos;\n                } else {\n                  ++refPos;\n                }\n                while (\n                  refLine[refPos] <= codingLine[this.codingPos] &&\n                  refLine[refPos] < columns\n                ) {\n                  refPos += 2;\n                }\n              }\n              break;\n            case ccittEOF:\n              this._addPixels(columns, 0);\n              this.eof = true;\n              break;\n            default:\n              info(\"bad 2d code\");\n              this._addPixels(columns, 0);\n              this.err = true;\n          }\n        }\n      } else {\n        codingLine[0] = 0;\n        this.codingPos = 0;\n        blackPixels = 0;\n        while (codingLine[this.codingPos] < columns) {\n          code1 = 0;\n          if (blackPixels) {\n            do {\n              code1 += code3 = this._getBlackCode();\n            } while (code3 >= 64);\n          } else {\n            do {\n              code1 += code3 = this._getWhiteCode();\n            } while (code3 >= 64);\n          }\n          this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n          blackPixels ^= 1;\n        }\n      }\n\n      let gotEOL = false;\n\n      if (this.byteAlign) {\n        this.inputBits &= ~7;\n      }\n\n      if (!this.eoblock && this.row === this.rows - 1) {\n        this.rowsDone = true;\n      } else {\n        code1 = this._lookBits(12);\n        if (this.eoline) {\n          while (code1 !== ccittEOF && code1 !== 1) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        } else {\n          while (code1 === 0) {\n            this._eatBits(1);\n            code1 = this._lookBits(12);\n          }\n        }\n        if (code1 === 1) {\n          this._eatBits(12);\n          gotEOL = true;\n        } else if (code1 === ccittEOF) {\n          this.eof = true;\n        }\n      }\n\n      if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n        this.nextLine2D = !this._lookBits(1);\n        this._eatBits(1);\n      }\n\n      if (this.eoblock && gotEOL && this.byteAlign) {\n        code1 = this._lookBits(12);\n        if (code1 === 1) {\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._lookBits(1);\n            this._eatBits(1);\n          }\n          if (this.encoding >= 0) {\n            for (i = 0; i < 4; ++i) {\n              code1 = this._lookBits(12);\n              if (code1 !== 1) {\n                info(\"bad rtc code: \" + code1);\n              }\n              this._eatBits(12);\n              if (this.encoding > 0) {\n                this._lookBits(1);\n                this._eatBits(1);\n              }\n            }\n          }\n          this.eof = true;\n        }\n      } else if (this.err && this.eoline) {\n        while (true) {\n          code1 = this._lookBits(13);\n          if (code1 === ccittEOF) {\n            this.eof = true;\n            return -1;\n          }\n          if (code1 >> 1 === 1) {\n            break;\n          }\n          this._eatBits(1);\n        }\n        this._eatBits(12);\n        if (this.encoding > 0) {\n          this._eatBits(1);\n          this.nextLine2D = !(code1 & 1);\n        }\n      }\n\n      this.outputBits =\n        codingLine[0] > 0\n          ? codingLine[(this.codingPos = 0)]\n          : codingLine[(this.codingPos = 1)];\n      this.row++;\n    }\n\n    let c;\n    if (this.outputBits >= 8) {\n      c = this.codingPos & 1 ? 0 : 0xff;\n      this.outputBits -= 8;\n      if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n        this.codingPos++;\n        this.outputBits =\n          codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n      }\n    } else {\n      bits = 8;\n      c = 0;\n      do {\n        if (typeof this.outputBits !== \"number\") {\n          throw new FormatError(\n            'Invalid /CCITTFaxDecode data, \"outputBits\" must be a number.'\n          );\n        }\n\n        if (this.outputBits > bits) {\n          c <<= bits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - bits);\n          }\n          this.outputBits -= bits;\n          bits = 0;\n        } else {\n          c <<= this.outputBits;\n          if (!(this.codingPos & 1)) {\n            c |= 0xff >> (8 - this.outputBits);\n          }\n          bits -= this.outputBits;\n          this.outputBits = 0;\n          if (codingLine[this.codingPos] < columns) {\n            this.codingPos++;\n            this.outputBits =\n              codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n          } else if (bits > 0) {\n            c <<= bits;\n            bits = 0;\n          }\n        }\n      } while (bits);\n    }\n    if (this.black) {\n      c ^= 0xff;\n    }\n    return c;\n  }\n\n  /**\n   * @private\n   */\n  _addPixels(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    }\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * @private\n   */\n  _addPixelsNeg(a1, blackPixels) {\n    const codingLine = this.codingLine;\n    let codingPos = this.codingPos;\n\n    if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n        info(\"row is wrong length\");\n        this.err = true;\n        a1 = this.columns;\n      }\n      if ((codingPos & 1) ^ blackPixels) {\n        ++codingPos;\n      }\n\n      codingLine[codingPos] = a1;\n    } else if (a1 < codingLine[codingPos]) {\n      if (a1 < 0) {\n        info(\"invalid code\");\n        this.err = true;\n        a1 = 0;\n      }\n      while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n        --codingPos;\n      }\n      codingLine[codingPos] = a1;\n    }\n\n    this.codingPos = codingPos;\n  }\n\n  /**\n   * This function returns the code found from the table.\n   * The start and end parameters set the boundaries for searching the table.\n   * The limit parameter is optional. Function returns an array with three\n   * values. The first array element indicates whether a valid code is being\n   * returned. The second array element is the actual code. The third array\n   * element indicates whether EOF was reached.\n   * @private\n   */\n  _findTableCode(start, end, table, limit) {\n    const limitValue = limit || 0;\n    for (let i = start; i <= end; ++i) {\n      let code = this._lookBits(i);\n      if (code === ccittEOF) {\n        return [true, 1, false];\n      }\n      if (i < end) {\n        code <<= end - i;\n      }\n      if (!limitValue || code >= limitValue) {\n        const p = table[code - limitValue];\n        if (p[0] === i) {\n          this._eatBits(i);\n          return [true, p[1], true];\n        }\n      }\n    }\n    return [false, 0, false];\n  }\n\n  /**\n   * @private\n   */\n  _getTwoDimCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(7);\n      p = twoDimTable[code];\n      if (p?.[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      const result = this._findTableCode(1, 7, twoDimTable);\n      if (result[0] && result[2]) {\n        return result[1];\n      }\n    }\n    info(\"Bad two dim code\");\n    return ccittEOF;\n  }\n\n  /**\n   * @private\n   */\n  _getWhiteCode() {\n    let code = 0;\n    let p;\n    if (this.eoblock) {\n      code = this._lookBits(12);\n      if (code === ccittEOF) {\n        return 1;\n      }\n\n      p = code >> 5 === 0 ? whiteTable1[code] : whiteTable2[code >> 3];\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(1, 9, whiteTable2);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(11, 12, whiteTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad white code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _getBlackCode() {\n    let code, p;\n    if (this.eoblock) {\n      code = this._lookBits(13);\n      if (code === ccittEOF) {\n        return 1;\n      }\n      if (code >> 7 === 0) {\n        p = blackTable1[code];\n      } else if (code >> 9 === 0 && code >> 7 !== 0) {\n        p = blackTable2[(code >> 1) - 64];\n      } else {\n        p = blackTable3[code >> 7];\n      }\n\n      if (p[0] > 0) {\n        this._eatBits(p[0]);\n        return p[1];\n      }\n    } else {\n      let result = this._findTableCode(2, 6, blackTable3);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(7, 12, blackTable2, 64);\n      if (result[0]) {\n        return result[1];\n      }\n\n      result = this._findTableCode(10, 13, blackTable1);\n      if (result[0]) {\n        return result[1];\n      }\n    }\n    info(\"bad black code\");\n    this._eatBits(1);\n    return 1;\n  }\n\n  /**\n   * @private\n   */\n  _lookBits(n) {\n    let c;\n    while (this.inputBits < n) {\n      if ((c = this.source.next()) === -1) {\n        if (this.inputBits === 0) {\n          return ccittEOF;\n        }\n        return (this.inputBuf << (n - this.inputBits)) & (0xffff >> (16 - n));\n      }\n      this.inputBuf = (this.inputBuf << 8) | c;\n      this.inputBits += 8;\n    }\n    return (this.inputBuf >> (this.inputBits - n)) & (0xffff >> (16 - n));\n  }\n\n  /**\n   * @private\n   */\n  _eatBits(n) {\n    if ((this.inputBits -= n) < 0) {\n      this.inputBits = 0;\n    }\n  }\n}\n\nexport { CCITTFaxDecoder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, shadow } from \"../shared/util.js\";\nimport {\n  log2,\n  MAX_INT_32,\n  MIN_INT_32,\n  readInt8,\n  readUint16,\n  readUint32,\n} from \"./core_utils.js\";\nimport { ArithmeticDecoder } from \"./arithmetic_decoder.js\";\nimport { CCITTFaxDecoder } from \"./ccitt.js\";\n\nclass Jbig2Error extends BaseException {\n  constructor(msg) {\n    super(msg, \"Jbig2Error\");\n  }\n}\n\n// Utility data structures\nclass ContextCache {\n  getContexts(id) {\n    if (id in this) {\n      return this[id];\n    }\n    return (this[id] = new Int8Array(1 << 16));\n  }\n}\n\nclass DecodingContext {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n\n  get decoder() {\n    const decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n    return shadow(this, \"decoder\", decoder);\n  }\n\n  get contextCache() {\n    const cache = new ContextCache();\n    return shadow(this, \"contextCache\", cache);\n  }\n}\n\n// Annex A. Arithmetic Integer Decoding Procedure\n// A.2 Procedure for decoding values\nfunction decodeInteger(contextCache, procedure, decoder) {\n  const contexts = contextCache.getContexts(procedure);\n  let prev = 1;\n\n  function readBits(length) {\n    let v = 0;\n    for (let i = 0; i < length; i++) {\n      const bit = decoder.readBit(contexts, prev);\n      prev = prev < 256 ? (prev << 1) | bit : (((prev << 1) | bit) & 511) | 256;\n      v = (v << 1) | bit;\n    }\n    return v >>> 0;\n  }\n\n  const sign = readBits(1);\n  // prettier-ignore\n  /* eslint-disable no-nested-ternary */\n  const value = readBits(1) ?\n                  (readBits(1) ?\n                    (readBits(1) ?\n                      (readBits(1) ?\n                        (readBits(1) ?\n                          (readBits(32) + 4436) :\n                        readBits(12) + 340) :\n                      readBits(8) + 84) :\n                    readBits(6) + 20) :\n                  readBits(4) + 4) :\n                readBits(2);\n  /* eslint-enable no-nested-ternary */\n  let signedValue;\n  if (sign === 0) {\n    signedValue = value;\n  } else if (value > 0) {\n    signedValue = -value;\n  }\n  // Ensure that the integer value doesn't underflow or overflow.\n  if (signedValue >= MIN_INT_32 && signedValue <= MAX_INT_32) {\n    return signedValue;\n  }\n  return null;\n}\n\n// A.3 The IAID decoding procedure\nfunction decodeIAID(contextCache, decoder, codeLength) {\n  const contexts = contextCache.getContexts(\"IAID\");\n\n  let prev = 1;\n  for (let i = 0; i < codeLength; i++) {\n    const bit = decoder.readBit(contexts, prev);\n    prev = (prev << 1) | bit;\n  }\n  if (codeLength < 31) {\n    return prev & ((1 << codeLength) - 1);\n  }\n  return prev & 0x7fffffff;\n}\n\n// 7.3 Segment types\nconst SegmentTypes = [\n  \"SymbolDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateTextRegion\",\n  null,\n  \"ImmediateTextRegion\",\n  \"ImmediateLosslessTextRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"PatternDictionary\",\n  null,\n  null,\n  null,\n  \"IntermediateHalftoneRegion\",\n  null,\n  \"ImmediateHalftoneRegion\",\n  \"ImmediateLosslessHalftoneRegion\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"IntermediateGenericRegion\",\n  null,\n  \"ImmediateGenericRegion\",\n  \"ImmediateLosslessGenericRegion\",\n  \"IntermediateGenericRefinementRegion\",\n  null,\n  \"ImmediateGenericRefinementRegion\",\n  \"ImmediateLosslessGenericRefinementRegion\",\n  null,\n  null,\n  null,\n  null,\n  \"PageInformation\",\n  \"EndOfPage\",\n  \"EndOfStripe\",\n  \"EndOfFile\",\n  \"Profiles\",\n  \"Tables\",\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  \"Extension\",\n];\n\nconst CodingTemplates = [\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: 2, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: 2, y: -1 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -1, y: -2 },\n    { x: 0, y: -2 },\n    { x: 1, y: -2 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n  [\n    { x: -3, y: -1 },\n    { x: -2, y: -1 },\n    { x: -1, y: -1 },\n    { x: 0, y: -1 },\n    { x: 1, y: -1 },\n    { x: -4, y: 0 },\n    { x: -3, y: 0 },\n    { x: -2, y: 0 },\n    { x: -1, y: 0 },\n  ],\n];\n\nconst RefinementTemplates = [\n  {\n    coding: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: -1, y: 1 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n  {\n    coding: [\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: -1, y: 0 },\n    ],\n    reference: [\n      { x: 0, y: -1 },\n      { x: -1, y: 0 },\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 0, y: 1 },\n      { x: 1, y: 1 },\n    ],\n  },\n];\n\n// See 6.2.5.7 Decoding the bitmap.\nconst ReusedContexts = [\n  0x9b25, // 10011 0110010 0101\n  0x0795, // 0011 110010 101\n  0x00e5, // 001 11001 01\n  0x0195, // 011001 0101\n];\n\nconst RefinementReusedContexts = [\n  0x0020, // '000' + '0' (coding) + '00010000' + '0' (reference)\n  0x0008, // '0000' + '001000'\n];\n\nfunction decodeBitmapTemplate0(width, height, decodingContext) {\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n  const bitmap = [];\n  let contextLabel, i, j, pixel, row, row1, row2;\n\n  // ...ooooo....\n  // ..ooooooo... Context template for current pixel (X)\n  // .ooooX...... (concatenate values of 'o'-pixels to get contextLabel)\n  const OLD_PIXEL_MASK = 0x7bf7; // 01111 0111111 0111\n\n  for (i = 0; i < height; i++) {\n    row = bitmap[i] = new Uint8Array(width);\n    row1 = i < 1 ? row : bitmap[i - 1];\n    row2 = i < 2 ? row : bitmap[i - 2];\n\n    // At the beginning of each row:\n    // Fill contextLabel with pixels that are above/right of (X)\n    contextLabel =\n      (row2[0] << 13) |\n      (row2[1] << 12) |\n      (row2[2] << 11) |\n      (row1[0] << 7) |\n      (row1[1] << 6) |\n      (row1[2] << 5) |\n      (row1[3] << 4);\n\n    for (j = 0; j < width; j++) {\n      row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\n      // At each pixel: Clear contextLabel pixels that are shifted\n      // out of the context, then add new ones.\n      contextLabel =\n        ((contextLabel & OLD_PIXEL_MASK) << 1) |\n        (j + 3 < width ? row2[j + 3] << 11 : 0) |\n        (j + 4 < width ? row1[j + 4] << 4 : 0) |\n        pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.2 Generic Region Decoding Procedure\nfunction decodeBitmap(\n  mmr,\n  width,\n  height,\n  templateIndex,\n  prediction,\n  skip,\n  at,\n  decodingContext\n) {\n  if (mmr) {\n    const input = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n    return decodeMMRBitmap(input, width, height, false);\n  }\n\n  // Use optimized version for the most common case\n  if (\n    templateIndex === 0 &&\n    !skip &&\n    !prediction &&\n    at.length === 4 &&\n    at[0].x === 3 &&\n    at[0].y === -1 &&\n    at[1].x === -3 &&\n    at[1].y === -1 &&\n    at[2].x === 2 &&\n    at[2].y === -2 &&\n    at[3].x === -2 &&\n    at[3].y === -2\n  ) {\n    return decodeBitmapTemplate0(width, height, decodingContext);\n  }\n\n  const useskip = !!skip;\n  const template = CodingTemplates[templateIndex].concat(at);\n\n  // Sorting is non-standard, and it is not required. But sorting increases\n  // the number of template bits that can be reused from the previous\n  // contextLabel in the main loop.\n  template.sort(function (a, b) {\n    return a.y - b.y || a.x - b.x;\n  });\n\n  const templateLength = template.length;\n  const templateX = new Int8Array(templateLength);\n  const templateY = new Int8Array(templateLength);\n  const changingTemplateEntries = [];\n  let reuseMask = 0,\n    minX = 0,\n    maxX = 0,\n    minY = 0;\n  let c, k;\n\n  for (k = 0; k < templateLength; k++) {\n    templateX[k] = template[k].x;\n    templateY[k] = template[k].y;\n    minX = Math.min(minX, template[k].x);\n    maxX = Math.max(maxX, template[k].x);\n    minY = Math.min(minY, template[k].y);\n    // Check if the template pixel appears in two consecutive context labels,\n    // so it can be reused. Otherwise, we add it to the list of changing\n    // template entries.\n    if (\n      k < templateLength - 1 &&\n      template[k].y === template[k + 1].y &&\n      template[k].x === template[k + 1].x - 1\n    ) {\n      reuseMask |= 1 << (templateLength - 1 - k);\n    } else {\n      changingTemplateEntries.push(k);\n    }\n  }\n  const changingEntriesLength = changingTemplateEntries.length;\n\n  const changingTemplateX = new Int8Array(changingEntriesLength);\n  const changingTemplateY = new Int8Array(changingEntriesLength);\n  const changingTemplateBit = new Uint16Array(changingEntriesLength);\n  for (c = 0; c < changingEntriesLength; c++) {\n    k = changingTemplateEntries[c];\n    changingTemplateX[c] = template[k].x;\n    changingTemplateY[c] = template[k].y;\n    changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n  }\n\n  // Get the safe bounding box edges from the width, height, minX, maxX, minY\n  const sbb_left = -minX;\n  const sbb_top = -minY;\n  const sbb_right = width - maxX;\n\n  const pseudoPixelContext = ReusedContexts[templateIndex];\n  let row = new Uint8Array(width);\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GB\");\n\n  let ltp = 0,\n    j,\n    i0,\n    j0,\n    contextLabel = 0,\n    bit,\n    shift;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        bitmap.push(row); // duplicate previous row\n        continue;\n      }\n    }\n    row = new Uint8Array(row);\n    bitmap.push(row);\n    for (j = 0; j < width; j++) {\n      if (useskip && skip[i][j]) {\n        row[j] = 0;\n        continue;\n      }\n      // Are we in the middle of a scanline, so we can reuse contextLabel\n      // bits?\n      if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n        // If yes, we can just shift the bits that are reusable and only\n        // fetch the remaining ones.\n        contextLabel = (contextLabel << 1) & reuseMask;\n        for (k = 0; k < changingEntriesLength; k++) {\n          i0 = i + changingTemplateY[k];\n          j0 = j + changingTemplateX[k];\n          bit = bitmap[i0][j0];\n          if (bit) {\n            bit = changingTemplateBit[k];\n            contextLabel |= bit;\n          }\n        }\n      } else {\n        // compute the contextLabel from scratch\n        contextLabel = 0;\n        shift = templateLength - 1;\n        for (k = 0; k < templateLength; k++, shift--) {\n          j0 = j + templateX[k];\n          if (j0 >= 0 && j0 < width) {\n            i0 = i + templateY[k];\n            if (i0 >= 0) {\n              bit = bitmap[i0][j0];\n              if (bit) {\n                contextLabel |= bit << shift;\n              }\n            }\n          }\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n  return bitmap;\n}\n\n// 6.3.2 Generic Refinement Region Decoding Procedure\nfunction decodeRefinement(\n  width,\n  height,\n  templateIndex,\n  referenceBitmap,\n  offsetX,\n  offsetY,\n  prediction,\n  at,\n  decodingContext\n) {\n  let codingTemplate = RefinementTemplates[templateIndex].coding;\n  if (templateIndex === 0) {\n    codingTemplate = codingTemplate.concat([at[0]]);\n  }\n  const codingTemplateLength = codingTemplate.length;\n  const codingTemplateX = new Int32Array(codingTemplateLength);\n  const codingTemplateY = new Int32Array(codingTemplateLength);\n  let k;\n  for (k = 0; k < codingTemplateLength; k++) {\n    codingTemplateX[k] = codingTemplate[k].x;\n    codingTemplateY[k] = codingTemplate[k].y;\n  }\n\n  let referenceTemplate = RefinementTemplates[templateIndex].reference;\n  if (templateIndex === 0) {\n    referenceTemplate = referenceTemplate.concat([at[1]]);\n  }\n  const referenceTemplateLength = referenceTemplate.length;\n  const referenceTemplateX = new Int32Array(referenceTemplateLength);\n  const referenceTemplateY = new Int32Array(referenceTemplateLength);\n  for (k = 0; k < referenceTemplateLength; k++) {\n    referenceTemplateX[k] = referenceTemplate[k].x;\n    referenceTemplateY[k] = referenceTemplate[k].y;\n  }\n  const referenceWidth = referenceBitmap[0].length;\n  const referenceHeight = referenceBitmap.length;\n\n  const pseudoPixelContext = RefinementReusedContexts[templateIndex];\n  const bitmap = [];\n\n  const decoder = decodingContext.decoder;\n  const contexts = decodingContext.contextCache.getContexts(\"GR\");\n\n  let ltp = 0;\n  for (let i = 0; i < height; i++) {\n    if (prediction) {\n      const sltp = decoder.readBit(contexts, pseudoPixelContext);\n      ltp ^= sltp;\n      if (ltp) {\n        throw new Jbig2Error(\"prediction is not supported\");\n      }\n    }\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let j = 0; j < width; j++) {\n      let i0, j0;\n      let contextLabel = 0;\n      for (k = 0; k < codingTemplateLength; k++) {\n        i0 = i + codingTemplateY[k];\n        j0 = j + codingTemplateX[k];\n        if (i0 < 0 || j0 < 0 || j0 >= width) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n        }\n      }\n      for (k = 0; k < referenceTemplateLength; k++) {\n        i0 = i + referenceTemplateY[k] - offsetY;\n        j0 = j + referenceTemplateX[k] - offsetX;\n        if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n          contextLabel <<= 1; // out of bound pixel\n        } else {\n          contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n        }\n      }\n      const pixel = decoder.readBit(contexts, contextLabel);\n      row[j] = pixel;\n    }\n  }\n\n  return bitmap;\n}\n\n// 6.5.5 Decoding the symbol dictionary\nfunction decodeSymbolDictionary(\n  huffman,\n  refinement,\n  symbols,\n  numberOfNewSymbols,\n  numberOfExportedSymbols,\n  huffmanTables,\n  templateIndex,\n  at,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"symbol refinement with Huffman is not supported\");\n  }\n\n  const newSymbols = [];\n  let currentHeight = 0;\n  let symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n  let tableB1, symbolWidths;\n  if (huffman) {\n    tableB1 = getStandardTable(1); // standard table B.1\n    symbolWidths = [];\n    symbolCodeLength = Math.max(symbolCodeLength, 1); // 6.5.8.2.3\n  }\n\n  while (newSymbols.length < numberOfNewSymbols) {\n    const deltaHeight = huffman\n      ? huffmanTables.tableDeltaHeight.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADH\", decoder); // 6.5.6\n    currentHeight += deltaHeight;\n    let currentWidth = 0,\n      totalWidth = 0;\n    const firstSymbol = huffman ? symbolWidths.length : 0;\n    while (true) {\n      const deltaWidth = huffman\n        ? huffmanTables.tableDeltaWidth.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADW\", decoder); // 6.5.7\n      if (deltaWidth === null) {\n        break; // OOB\n      }\n      currentWidth += deltaWidth;\n      totalWidth += currentWidth;\n      let bitmap;\n      if (refinement) {\n        // 6.5.8.2 Refinement/aggregate-coded symbol bitmap\n        const numberOfInstances = decodeInteger(contextCache, \"IAAI\", decoder);\n        if (numberOfInstances > 1) {\n          bitmap = decodeTextRegion(\n            huffman,\n            refinement,\n            currentWidth,\n            currentHeight,\n            0,\n            numberOfInstances,\n            1, // strip size\n            symbols.concat(newSymbols),\n            symbolCodeLength,\n            0, // transposed\n            0, // ds offset\n            1, // top left 7.4.3.1.1\n            0, // OR operator\n            huffmanTables,\n            refinementTemplateIndex,\n            refinementAt,\n            decodingContext,\n            0,\n            huffmanInput\n          );\n        } else {\n          const symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n          const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n          const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n          const symbol =\n            symbolId < symbols.length\n              ? symbols[symbolId]\n              : newSymbols[symbolId - symbols.length];\n          bitmap = decodeRefinement(\n            currentWidth,\n            currentHeight,\n            refinementTemplateIndex,\n            symbol,\n            rdx,\n            rdy,\n            false,\n            refinementAt,\n            decodingContext\n          );\n        }\n        newSymbols.push(bitmap);\n      } else if (huffman) {\n        // Store only symbol width and decode a collective bitmap when the\n        // height class is done.\n        symbolWidths.push(currentWidth);\n      } else {\n        // 6.5.8.1 Direct-coded symbol bitmap\n        bitmap = decodeBitmap(\n          false,\n          currentWidth,\n          currentHeight,\n          templateIndex,\n          false,\n          null,\n          at,\n          decodingContext\n        );\n        newSymbols.push(bitmap);\n      }\n    }\n    if (huffman && !refinement) {\n      // 6.5.9 Height class collective bitmap\n      const bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n      huffmanInput.byteAlign();\n      let collectiveBitmap;\n      if (bitmapSize === 0) {\n        // Uncompressed collective bitmap\n        collectiveBitmap = readUncompressedBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight\n        );\n      } else {\n        // MMR collective bitmap\n        const originalEnd = huffmanInput.end;\n        const bitmapEnd = huffmanInput.position + bitmapSize;\n        huffmanInput.end = bitmapEnd;\n        collectiveBitmap = decodeMMRBitmap(\n          huffmanInput,\n          totalWidth,\n          currentHeight,\n          false\n        );\n        huffmanInput.end = originalEnd;\n        huffmanInput.position = bitmapEnd;\n      }\n      const numberOfSymbolsDecoded = symbolWidths.length;\n      if (firstSymbol === numberOfSymbolsDecoded - 1) {\n        // collectiveBitmap is a single symbol.\n        newSymbols.push(collectiveBitmap);\n      } else {\n        // Divide collectiveBitmap into symbols.\n        let i,\n          y,\n          xMin = 0,\n          xMax,\n          bitmapWidth,\n          symbolBitmap;\n        for (i = firstSymbol; i < numberOfSymbolsDecoded; i++) {\n          bitmapWidth = symbolWidths[i];\n          xMax = xMin + bitmapWidth;\n          symbolBitmap = [];\n          for (y = 0; y < currentHeight; y++) {\n            symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n          }\n          newSymbols.push(symbolBitmap);\n          xMin = xMax;\n        }\n      }\n    }\n  }\n\n  // 6.5.10 Exported symbols\n  const exportedSymbols = [],\n    flags = [];\n  let currentFlag = false,\n    i,\n    ii;\n  const totalSymbolsLength = symbols.length + numberOfNewSymbols;\n  while (flags.length < totalSymbolsLength) {\n    let runLength = huffman\n      ? tableB1.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAEX\", decoder);\n    while (runLength--) {\n      flags.push(currentFlag);\n    }\n    currentFlag = !currentFlag;\n  }\n  for (i = 0, ii = symbols.length; i < ii; i++) {\n    if (flags[i]) {\n      exportedSymbols.push(symbols[i]);\n    }\n  }\n  for (let j = 0; j < numberOfNewSymbols; i++, j++) {\n    if (flags[i]) {\n      exportedSymbols.push(newSymbols[j]);\n    }\n  }\n  return exportedSymbols;\n}\n\nfunction decodeTextRegion(\n  huffman,\n  refinement,\n  width,\n  height,\n  defaultPixelValue,\n  numberOfSymbolInstances,\n  stripSize,\n  inputSymbols,\n  symbolCodeLength,\n  transposed,\n  dsOffset,\n  referenceCorner,\n  combinationOperator,\n  huffmanTables,\n  refinementTemplateIndex,\n  refinementAt,\n  decodingContext,\n  logStripSize,\n  huffmanInput\n) {\n  if (huffman && refinement) {\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  // Prepare bitmap\n  const bitmap = [];\n  let i, row;\n  for (i = 0; i < height; i++) {\n    row = new Uint8Array(width);\n    if (defaultPixelValue) {\n      row.fill(defaultPixelValue);\n    }\n    bitmap.push(row);\n  }\n\n  const decoder = decodingContext.decoder;\n  const contextCache = decodingContext.contextCache;\n\n  let stripT = huffman\n    ? -huffmanTables.tableDeltaT.decode(huffmanInput)\n    : -decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n  let firstS = 0;\n  i = 0;\n  while (i < numberOfSymbolInstances) {\n    const deltaT = huffman\n      ? huffmanTables.tableDeltaT.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IADT\", decoder); // 6.4.6\n    stripT += deltaT;\n\n    const deltaFirstS = huffman\n      ? huffmanTables.tableFirstS.decode(huffmanInput)\n      : decodeInteger(contextCache, \"IAFS\", decoder); // 6.4.7\n    firstS += deltaFirstS;\n    let currentS = firstS;\n    do {\n      let currentT = 0; // 6.4.9\n      if (stripSize > 1) {\n        currentT = huffman\n          ? huffmanInput.readBits(logStripSize)\n          : decodeInteger(contextCache, \"IAIT\", decoder);\n      }\n      const t = stripSize * stripT + currentT;\n      const symbolId = huffman\n        ? huffmanTables.symbolIDTable.decode(huffmanInput)\n        : decodeIAID(contextCache, decoder, symbolCodeLength);\n      const applyRefinement =\n        refinement &&\n        (huffman\n          ? huffmanInput.readBit()\n          : decodeInteger(contextCache, \"IARI\", decoder));\n      let symbolBitmap = inputSymbols[symbolId];\n      let symbolWidth = symbolBitmap[0].length;\n      let symbolHeight = symbolBitmap.length;\n      if (applyRefinement) {\n        const rdw = decodeInteger(contextCache, \"IARDW\", decoder); // 6.4.11.1\n        const rdh = decodeInteger(contextCache, \"IARDH\", decoder); // 6.4.11.2\n        const rdx = decodeInteger(contextCache, \"IARDX\", decoder); // 6.4.11.3\n        const rdy = decodeInteger(contextCache, \"IARDY\", decoder); // 6.4.11.4\n        symbolWidth += rdw;\n        symbolHeight += rdh;\n        symbolBitmap = decodeRefinement(\n          symbolWidth,\n          symbolHeight,\n          refinementTemplateIndex,\n          symbolBitmap,\n          (rdw >> 1) + rdx,\n          (rdh >> 1) + rdy,\n          false,\n          refinementAt,\n          decodingContext\n        );\n      }\n\n      let increment = 0;\n      if (!transposed) {\n        if (referenceCorner > 1) {\n          currentS += symbolWidth - 1;\n        } else {\n          increment = symbolWidth - 1;\n        }\n      } else if (!(referenceCorner & 1)) {\n        currentS += symbolHeight - 1;\n      } else {\n        increment = symbolHeight - 1;\n      }\n\n      const offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n      const offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n      let s2, t2, symbolRow;\n      if (transposed) {\n        // Place Symbol Bitmap from T1,S1\n        for (s2 = 0; s2 < symbolHeight; s2++) {\n          row = bitmap[offsetS + s2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[s2];\n          // To ignore Parts of Symbol bitmap which goes\n          // outside bitmap region\n          const maxWidth = Math.min(width - offsetT, symbolWidth);\n          switch (combinationOperator) {\n            case 0: // OR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] |= symbolRow[t2];\n              }\n              break;\n            case 2: // XOR\n              for (t2 = 0; t2 < maxWidth; t2++) {\n                row[offsetT + t2] ^= symbolRow[t2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n      } else {\n        for (t2 = 0; t2 < symbolHeight; t2++) {\n          row = bitmap[offsetT + t2];\n          if (!row) {\n            continue;\n          }\n          symbolRow = symbolBitmap[t2];\n          switch (combinationOperator) {\n            case 0: // OR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] |= symbolRow[s2];\n              }\n              break;\n            case 2: // XOR\n              for (s2 = 0; s2 < symbolWidth; s2++) {\n                row[offsetS + s2] ^= symbolRow[s2];\n              }\n              break;\n            default:\n              throw new Jbig2Error(\n                `operator ${combinationOperator} is not supported`\n              );\n          }\n        }\n      }\n      i++;\n      const deltaS = huffman\n        ? huffmanTables.tableDeltaS.decode(huffmanInput)\n        : decodeInteger(contextCache, \"IADS\", decoder); // 6.4.8\n      if (deltaS === null) {\n        break; // OOB\n      }\n      currentS += increment + deltaS + dsOffset;\n    } while (true);\n  }\n  return bitmap;\n}\n\nfunction decodePatternDictionary(\n  mmr,\n  patternWidth,\n  patternHeight,\n  maxPatternIndex,\n  template,\n  decodingContext\n) {\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: -patternWidth,\n      y: 0,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  const collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n  const collectiveBitmap = decodeBitmap(\n    mmr,\n    collectiveWidth,\n    patternHeight,\n    template,\n    false,\n    null,\n    at,\n    decodingContext\n  );\n  // Divide collective bitmap into patterns.\n  const patterns = [];\n  for (let i = 0; i <= maxPatternIndex; i++) {\n    const patternBitmap = [];\n    const xMin = patternWidth * i;\n    const xMax = xMin + patternWidth;\n    for (let y = 0; y < patternHeight; y++) {\n      patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n    }\n    patterns.push(patternBitmap);\n  }\n  return patterns;\n}\n\nfunction decodeHalftoneRegion(\n  mmr,\n  patterns,\n  template,\n  regionWidth,\n  regionHeight,\n  defaultPixelValue,\n  enableSkip,\n  combinationOperator,\n  gridWidth,\n  gridHeight,\n  gridOffsetX,\n  gridOffsetY,\n  gridVectorX,\n  gridVectorY,\n  decodingContext\n) {\n  const skip = null;\n  if (enableSkip) {\n    throw new Jbig2Error(\"skip is not supported\");\n  }\n  if (combinationOperator !== 0) {\n    throw new Jbig2Error(\n      `operator \"${combinationOperator}\" is not supported in halftone region`\n    );\n  }\n\n  // Prepare bitmap.\n  const regionBitmap = [];\n  let i, j, row;\n  for (i = 0; i < regionHeight; i++) {\n    row = new Uint8Array(regionWidth);\n    if (defaultPixelValue) {\n      row.fill(defaultPixelValue);\n    }\n    regionBitmap.push(row);\n  }\n\n  const numberOfPatterns = patterns.length;\n  const pattern0 = patterns[0];\n  const patternWidth = pattern0[0].length,\n    patternHeight = pattern0.length;\n  const bitsPerValue = log2(numberOfPatterns);\n  const at = [];\n  if (!mmr) {\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1,\n    });\n    if (template === 0) {\n      at.push(\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -2,\n        }\n      );\n    }\n  }\n  // Annex C. Gray-scale Image Decoding Procedure.\n  const grayScaleBitPlanes = [];\n  let mmrInput, bitmap;\n  if (mmr) {\n    // MMR bit planes are in one continuous stream. Only EOFB codes indicate\n    // the end of each bitmap, so EOFBs must be decoded.\n    mmrInput = new Reader(\n      decodingContext.data,\n      decodingContext.start,\n      decodingContext.end\n    );\n  }\n  for (i = bitsPerValue - 1; i >= 0; i--) {\n    if (mmr) {\n      bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n    } else {\n      bitmap = decodeBitmap(\n        false,\n        gridWidth,\n        gridHeight,\n        template,\n        false,\n        skip,\n        at,\n        decodingContext\n      );\n    }\n    grayScaleBitPlanes[i] = bitmap;\n  }\n  // 6.6.5.2 Rendering the patterns.\n  let mg, ng, bit, patternIndex, patternBitmap, x, y, patternRow, regionRow;\n  for (mg = 0; mg < gridHeight; mg++) {\n    for (ng = 0; ng < gridWidth; ng++) {\n      bit = 0;\n      patternIndex = 0;\n      for (j = bitsPerValue - 1; j >= 0; j--) {\n        bit ^= grayScaleBitPlanes[j][mg][ng]; // Gray decoding\n        patternIndex |= bit << j;\n      }\n      patternBitmap = patterns[patternIndex];\n      x = (gridOffsetX + mg * gridVectorY + ng * gridVectorX) >> 8;\n      y = (gridOffsetY + mg * gridVectorX - ng * gridVectorY) >> 8;\n      // Draw patternBitmap at (x, y).\n      if (\n        x >= 0 &&\n        x + patternWidth <= regionWidth &&\n        y >= 0 &&\n        y + patternHeight <= regionHeight\n      ) {\n        for (i = 0; i < patternHeight; i++) {\n          regionRow = regionBitmap[y + i];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionRow[x + j] |= patternRow[j];\n          }\n        }\n      } else {\n        let regionX, regionY;\n        for (i = 0; i < patternHeight; i++) {\n          regionY = y + i;\n          if (regionY < 0 || regionY >= regionHeight) {\n            continue;\n          }\n          regionRow = regionBitmap[regionY];\n          patternRow = patternBitmap[i];\n          for (j = 0; j < patternWidth; j++) {\n            regionX = x + j;\n            if (regionX >= 0 && regionX < regionWidth) {\n              regionRow[regionX] |= patternRow[j];\n            }\n          }\n        }\n      }\n    }\n  }\n  return regionBitmap;\n}\n\nfunction readSegmentHeader(data, start) {\n  const segmentHeader = {};\n  segmentHeader.number = readUint32(data, start);\n  const flags = data[start + 4];\n  const segmentType = flags & 0x3f;\n  if (!SegmentTypes[segmentType]) {\n    throw new Jbig2Error(\"invalid segment type: \" + segmentType);\n  }\n  segmentHeader.type = segmentType;\n  segmentHeader.typeName = SegmentTypes[segmentType];\n  segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\n  const pageAssociationFieldSize = !!(flags & 0x40);\n  const referredFlags = data[start + 5];\n  let referredToCount = (referredFlags >> 5) & 7;\n  const retainBits = [referredFlags & 31];\n  let position = start + 6;\n  if (referredFlags === 7) {\n    referredToCount = readUint32(data, position - 1) & 0x1fffffff;\n    position += 3;\n    let bytes = (referredToCount + 7) >> 3;\n    retainBits[0] = data[position++];\n    while (--bytes > 0) {\n      retainBits.push(data[position++]);\n    }\n  } else if (referredFlags === 5 || referredFlags === 6) {\n    throw new Jbig2Error(\"invalid referred-to flags\");\n  }\n\n  segmentHeader.retainBits = retainBits;\n\n  let referredToSegmentNumberSize = 4;\n  if (segmentHeader.number <= 256) {\n    referredToSegmentNumberSize = 1;\n  } else if (segmentHeader.number <= 65536) {\n    referredToSegmentNumberSize = 2;\n  }\n  const referredTo = [];\n  let i, ii;\n  for (i = 0; i < referredToCount; i++) {\n    let number;\n    if (referredToSegmentNumberSize === 1) {\n      number = data[position];\n    } else if (referredToSegmentNumberSize === 2) {\n      number = readUint16(data, position);\n    } else {\n      number = readUint32(data, position);\n    }\n    referredTo.push(number);\n    position += referredToSegmentNumberSize;\n  }\n  segmentHeader.referredTo = referredTo;\n  if (!pageAssociationFieldSize) {\n    segmentHeader.pageAssociation = data[position++];\n  } else {\n    segmentHeader.pageAssociation = readUint32(data, position);\n    position += 4;\n  }\n  segmentHeader.length = readUint32(data, position);\n  position += 4;\n\n  if (segmentHeader.length === 0xffffffff) {\n    // 7.2.7 Segment data length, unknown segment length\n    if (segmentType === 38) {\n      // ImmediateGenericRegion\n      const genericRegionInfo = readRegionSegmentInformation(data, position);\n      const genericRegionSegmentFlags =\n        data[position + RegionSegmentInformationFieldLength];\n      const genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n      // searching for the segment end\n      const searchPatternLength = 6;\n      const searchPattern = new Uint8Array(searchPatternLength);\n      if (!genericRegionMmr) {\n        searchPattern[0] = 0xff;\n        searchPattern[1] = 0xac;\n      }\n      searchPattern[2] = (genericRegionInfo.height >>> 24) & 0xff;\n      searchPattern[3] = (genericRegionInfo.height >> 16) & 0xff;\n      searchPattern[4] = (genericRegionInfo.height >> 8) & 0xff;\n      searchPattern[5] = genericRegionInfo.height & 0xff;\n      for (i = position, ii = data.length; i < ii; i++) {\n        let j = 0;\n        while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n          j++;\n        }\n        if (j === searchPatternLength) {\n          segmentHeader.length = i + searchPatternLength;\n          break;\n        }\n      }\n      if (segmentHeader.length === 0xffffffff) {\n        throw new Jbig2Error(\"segment end was not found\");\n      }\n    } else {\n      throw new Jbig2Error(\"invalid unknown segment length\");\n    }\n  }\n  segmentHeader.headerEnd = position;\n  return segmentHeader;\n}\n\nfunction readSegments(header, data, start, end) {\n  const segments = [];\n  let position = start;\n  while (position < end) {\n    const segmentHeader = readSegmentHeader(data, position);\n    position = segmentHeader.headerEnd;\n    const segment = {\n      header: segmentHeader,\n      data,\n    };\n    if (!header.randomAccess) {\n      segment.start = position;\n      position += segmentHeader.length;\n      segment.end = position;\n    }\n    segments.push(segment);\n    if (segmentHeader.type === 51) {\n      break; // end of file is found\n    }\n  }\n  if (header.randomAccess) {\n    for (let i = 0, ii = segments.length; i < ii; i++) {\n      segments[i].start = position;\n      position += segments[i].header.length;\n      segments[i].end = position;\n    }\n  }\n  return segments;\n}\n\n// 7.4.1 Region segment information field\nfunction readRegionSegmentInformation(data, start) {\n  return {\n    width: readUint32(data, start),\n    height: readUint32(data, start + 4),\n    x: readUint32(data, start + 8),\n    y: readUint32(data, start + 12),\n    combinationOperator: data[start + 16] & 7,\n  };\n}\nconst RegionSegmentInformationFieldLength = 17;\n\nfunction processSegment(segment, visitor) {\n  const header = segment.header;\n\n  const data = segment.data,\n    end = segment.end;\n  let position = segment.start;\n  let args, at, i, atLength;\n  switch (header.type) {\n    case 0: // SymbolDictionary\n      // 7.4.2 Symbol dictionary segment syntax\n      const dictionary = {};\n      const dictionaryFlags = readUint16(data, position); // 7.4.2.1.1\n      dictionary.huffman = !!(dictionaryFlags & 1);\n      dictionary.refinement = !!(dictionaryFlags & 2);\n      dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n      dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n      dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n      dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n      dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n      dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n      dictionary.template = (dictionaryFlags >> 10) & 3;\n      dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n      position += 2;\n      if (!dictionary.huffman) {\n        atLength = dictionary.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.at = at;\n      }\n      if (dictionary.refinement && !dictionary.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        dictionary.refinementAt = at;\n      }\n      dictionary.numberOfExportedSymbols = readUint32(data, position);\n      position += 4;\n      dictionary.numberOfNewSymbols = readUint32(data, position);\n      position += 4;\n      args = [\n        dictionary,\n        header.number,\n        header.referredTo,\n        data,\n        position,\n        end,\n      ];\n      break;\n    case 6: // ImmediateTextRegion\n    case 7: // ImmediateLosslessTextRegion\n      const textRegion = {};\n      textRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const textRegionSegmentFlags = readUint16(data, position);\n      position += 2;\n      textRegion.huffman = !!(textRegionSegmentFlags & 1);\n      textRegion.refinement = !!(textRegionSegmentFlags & 2);\n      textRegion.logStripSize = (textRegionSegmentFlags >> 2) & 3;\n      textRegion.stripSize = 1 << textRegion.logStripSize;\n      textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n      textRegion.transposed = !!(textRegionSegmentFlags & 64);\n      textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n      textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n      textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n      textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n      if (textRegion.huffman) {\n        const textRegionHuffmanFlags = readUint16(data, position);\n        position += 2;\n        textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n        textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n        textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n        textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n        textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n        textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n        textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n        textRegion.huffmanRefinementSizeSelector = !!(\n          textRegionHuffmanFlags & 0x4000\n        );\n      }\n      if (textRegion.refinement && !textRegion.refinementTemplate) {\n        at = [];\n        for (i = 0; i < 2; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        textRegion.refinementAt = at;\n      }\n      textRegion.numberOfSymbolInstances = readUint32(data, position);\n      position += 4;\n      args = [textRegion, header.referredTo, data, position, end];\n      break;\n    case 16: // PatternDictionary\n      // 7.4.4. Pattern dictionary segment syntax\n      const patternDictionary = {};\n      const patternDictionaryFlags = data[position++];\n      patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n      patternDictionary.template = (patternDictionaryFlags >> 1) & 3;\n      patternDictionary.patternWidth = data[position++];\n      patternDictionary.patternHeight = data[position++];\n      patternDictionary.maxPatternIndex = readUint32(data, position);\n      position += 4;\n      args = [patternDictionary, header.number, data, position, end];\n      break;\n    case 22: // ImmediateHalftoneRegion\n    case 23: // ImmediateLosslessHalftoneRegion\n      // 7.4.5 Halftone region segment syntax\n      const halftoneRegion = {};\n      halftoneRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const halftoneRegionFlags = data[position++];\n      halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n      halftoneRegion.template = (halftoneRegionFlags >> 1) & 3;\n      halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n      halftoneRegion.combinationOperator = (halftoneRegionFlags >> 4) & 7;\n      halftoneRegion.defaultPixelValue = (halftoneRegionFlags >> 7) & 1;\n      halftoneRegion.gridWidth = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridHeight = readUint32(data, position);\n      position += 4;\n      halftoneRegion.gridOffsetX = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridOffsetY = readUint32(data, position) & 0xffffffff;\n      position += 4;\n      halftoneRegion.gridVectorX = readUint16(data, position);\n      position += 2;\n      halftoneRegion.gridVectorY = readUint16(data, position);\n      position += 2;\n      args = [halftoneRegion, header.referredTo, data, position, end];\n      break;\n    case 38: // ImmediateGenericRegion\n    case 39: // ImmediateLosslessGenericRegion\n      const genericRegion = {};\n      genericRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      const genericRegionSegmentFlags = data[position++];\n      genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n      genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n      genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n      if (!genericRegion.mmr) {\n        atLength = genericRegion.template === 0 ? 4 : 1;\n        at = [];\n        for (i = 0; i < atLength; i++) {\n          at.push({\n            x: readInt8(data, position),\n            y: readInt8(data, position + 1),\n          });\n          position += 2;\n        }\n        genericRegion.at = at;\n      }\n      args = [genericRegion, data, position, end];\n      break;\n    case 48: // PageInformation\n      const pageInfo = {\n        width: readUint32(data, position),\n        height: readUint32(data, position + 4),\n        resolutionX: readUint32(data, position + 8),\n        resolutionY: readUint32(data, position + 12),\n      };\n      if (pageInfo.height === 0xffffffff) {\n        delete pageInfo.height;\n      }\n      const pageSegmentFlags = data[position + 16];\n      readUint16(data, position + 17); // pageStripingInformation\n      pageInfo.lossless = !!(pageSegmentFlags & 1);\n      pageInfo.refinement = !!(pageSegmentFlags & 2);\n      pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n      pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n      pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n      pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n      args = [pageInfo];\n      break;\n    case 49: // EndOfPage\n      break;\n    case 50: // EndOfStripe\n      break;\n    case 51: // EndOfFile\n      break;\n    case 53: // Tables\n      args = [header.number, data, position, end];\n      break;\n    case 62: // 7.4.15 defines 2 extension types which\n      // are comments and can be ignored.\n      break;\n    default:\n      throw new Jbig2Error(\n        `segment type ${header.typeName}(${header.type}) is not implemented`\n      );\n  }\n  const callbackName = \"on\" + header.typeName;\n  if (callbackName in visitor) {\n    // eslint-disable-next-line prefer-spread\n    visitor[callbackName].apply(visitor, args);\n  }\n}\n\nfunction processSegments(segments, visitor) {\n  for (let i = 0, ii = segments.length; i < ii; i++) {\n    processSegment(segments[i], visitor);\n  }\n}\n\nfunction parseJbig2Chunks(chunks) {\n  const visitor = new SimpleSegmentVisitor();\n  for (let i = 0, ii = chunks.length; i < ii; i++) {\n    const chunk = chunks[i];\n    const segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n    processSegments(segments, visitor);\n  }\n  return visitor.buffer;\n}\n\nfunction parseJbig2(data) {\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"IMAGE_DECODERS\")) {\n    throw new Error(\"Not implemented: parseJbig2\");\n  }\n  const end = data.length;\n  let position = 0;\n\n  if (\n    data[position] !== 0x97 ||\n    data[position + 1] !== 0x4a ||\n    data[position + 2] !== 0x42 ||\n    data[position + 3] !== 0x32 ||\n    data[position + 4] !== 0x0d ||\n    data[position + 5] !== 0x0a ||\n    data[position + 6] !== 0x1a ||\n    data[position + 7] !== 0x0a\n  ) {\n    throw new Jbig2Error(\"parseJbig2 - invalid header.\");\n  }\n\n  const header = Object.create(null);\n  position += 8;\n  const flags = data[position++];\n  header.randomAccess = !(flags & 1);\n  if (!(flags & 2)) {\n    header.numberOfPages = readUint32(data, position);\n    position += 4;\n  }\n\n  const segments = readSegments(header, data, position, end);\n  const visitor = new SimpleSegmentVisitor();\n  processSegments(segments, visitor);\n\n  const { width, height } = visitor.currentPageInfo;\n  const bitPacked = visitor.buffer;\n  const imgData = new Uint8ClampedArray(width * height);\n  let q = 0,\n    k = 0;\n  for (let i = 0; i < height; i++) {\n    let mask = 0,\n      buffer;\n    for (let j = 0; j < width; j++) {\n      if (!mask) {\n        mask = 128;\n        buffer = bitPacked[k++];\n      }\n      imgData[q++] = buffer & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  return { imgData, width, height };\n}\n\nclass SimpleSegmentVisitor {\n  onPageInformation(info) {\n    this.currentPageInfo = info;\n    const rowSize = (info.width + 7) >> 3;\n    const buffer = new Uint8ClampedArray(rowSize * info.height);\n    // The contents of ArrayBuffers are initialized to 0.\n    // Fill the buffer with 0xFF only if info.defaultPixelValue is set\n    if (info.defaultPixelValue) {\n      buffer.fill(0xff);\n    }\n    this.buffer = buffer;\n  }\n\n  drawBitmap(regionInfo, bitmap) {\n    const pageInfo = this.currentPageInfo;\n    const width = regionInfo.width,\n      height = regionInfo.height;\n    const rowSize = (pageInfo.width + 7) >> 3;\n    const combinationOperator = pageInfo.combinationOperatorOverride\n      ? regionInfo.combinationOperator\n      : pageInfo.combinationOperator;\n    const buffer = this.buffer;\n    const mask0 = 128 >> (regionInfo.x & 7);\n    let offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n    let i, j, mask, offset;\n    switch (combinationOperator) {\n      case 0: // OR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] |= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      case 2: // XOR\n        for (i = 0; i < height; i++) {\n          mask = mask0;\n          offset = offset0;\n          for (j = 0; j < width; j++) {\n            if (bitmap[i][j]) {\n              buffer[offset] ^= mask;\n            }\n            mask >>= 1;\n            if (!mask) {\n              mask = 128;\n              offset++;\n            }\n          }\n          offset0 += rowSize;\n        }\n        break;\n      default:\n        throw new Jbig2Error(\n          `operator ${combinationOperator} is not supported`\n        );\n    }\n  }\n\n  onImmediateGenericRegion(region, data, start, end) {\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeBitmap(\n      region.mmr,\n      regionInfo.width,\n      regionInfo.height,\n      region.template,\n      region.prediction,\n      null,\n      region.at,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessGenericRegion() {\n    this.onImmediateGenericRegion(...arguments);\n  }\n\n  onSymbolDictionary(\n    dictionary,\n    currentSegment,\n    referredSegments,\n    data,\n    start,\n    end\n  ) {\n    let huffmanTables, huffmanInput;\n    if (dictionary.huffman) {\n      huffmanTables = getSymbolDictionaryHuffmanTables(\n        dictionary,\n        referredSegments,\n        this.customTables\n      );\n      huffmanInput = new Reader(data, start, end);\n    }\n\n    // Combines exported symbols from all referred segments\n    let symbols = this.symbols;\n    if (!symbols) {\n      this.symbols = symbols = {};\n    }\n\n    const inputSymbols = [];\n    for (const referredSegment of referredSegments) {\n      const referredSymbols = symbols[referredSegment];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols.push(...referredSymbols);\n      }\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    symbols[currentSegment] = decodeSymbolDictionary(\n      dictionary.huffman,\n      dictionary.refinement,\n      inputSymbols,\n      dictionary.numberOfNewSymbols,\n      dictionary.numberOfExportedSymbols,\n      huffmanTables,\n      dictionary.template,\n      dictionary.at,\n      dictionary.refinementTemplate,\n      dictionary.refinementAt,\n      decodingContext,\n      huffmanInput\n    );\n  }\n\n  onImmediateTextRegion(region, referredSegments, data, start, end) {\n    const regionInfo = region.info;\n    let huffmanTables, huffmanInput;\n\n    // Combines exported symbols from all referred segments\n    const symbols = this.symbols;\n    const inputSymbols = [];\n    for (const referredSegment of referredSegments) {\n      const referredSymbols = symbols[referredSegment];\n      // referredSymbols is undefined when we have a reference to a Tables\n      // segment instead of a SymbolDictionary.\n      if (referredSymbols) {\n        inputSymbols.push(...referredSymbols);\n      }\n    }\n    const symbolCodeLength = log2(inputSymbols.length);\n    if (region.huffman) {\n      huffmanInput = new Reader(data, start, end);\n      huffmanTables = getTextRegionHuffmanTables(\n        region,\n        referredSegments,\n        this.customTables,\n        inputSymbols.length,\n        huffmanInput\n      );\n    }\n\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeTextRegion(\n      region.huffman,\n      region.refinement,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.numberOfSymbolInstances,\n      region.stripSize,\n      inputSymbols,\n      symbolCodeLength,\n      region.transposed,\n      region.dsOffset,\n      region.referenceCorner,\n      region.combinationOperator,\n      huffmanTables,\n      region.refinementTemplate,\n      region.refinementAt,\n      decodingContext,\n      region.logStripSize,\n      huffmanInput\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessTextRegion() {\n    this.onImmediateTextRegion(...arguments);\n  }\n\n  onPatternDictionary(dictionary, currentSegment, data, start, end) {\n    let patterns = this.patterns;\n    if (!patterns) {\n      this.patterns = patterns = {};\n    }\n    const decodingContext = new DecodingContext(data, start, end);\n    patterns[currentSegment] = decodePatternDictionary(\n      dictionary.mmr,\n      dictionary.patternWidth,\n      dictionary.patternHeight,\n      dictionary.maxPatternIndex,\n      dictionary.template,\n      decodingContext\n    );\n  }\n\n  onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n    // HalftoneRegion refers to exactly one PatternDictionary.\n    const patterns = this.patterns[referredSegments[0]];\n    const regionInfo = region.info;\n    const decodingContext = new DecodingContext(data, start, end);\n    const bitmap = decodeHalftoneRegion(\n      region.mmr,\n      patterns,\n      region.template,\n      regionInfo.width,\n      regionInfo.height,\n      region.defaultPixelValue,\n      region.enableSkip,\n      region.combinationOperator,\n      region.gridWidth,\n      region.gridHeight,\n      region.gridOffsetX,\n      region.gridOffsetY,\n      region.gridVectorX,\n      region.gridVectorY,\n      decodingContext\n    );\n    this.drawBitmap(regionInfo, bitmap);\n  }\n\n  onImmediateLosslessHalftoneRegion() {\n    this.onImmediateHalftoneRegion(...arguments);\n  }\n\n  onTables(currentSegment, data, start, end) {\n    let customTables = this.customTables;\n    if (!customTables) {\n      this.customTables = customTables = {};\n    }\n    customTables[currentSegment] = decodeTablesSegment(data, start, end);\n  }\n}\n\nclass HuffmanLine {\n  constructor(lineData) {\n    if (lineData.length === 2) {\n      // OOB line.\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      // Normal, upper range or lower range line.\n      // Upper range lines are processed like normal lines.\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === \"lower\";\n    }\n  }\n}\n\nclass HuffmanTreeNode {\n  constructor(line) {\n    this.children = [];\n    if (line) {\n      // Leaf node\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      // Intermediate or root node\n      this.isLeaf = false;\n    }\n  }\n\n  buildTree(line, shift) {\n    const bit = (line.prefixCode >> shift) & 1;\n    if (shift <= 0) {\n      // Create a leaf node.\n      this.children[bit] = new HuffmanTreeNode(line);\n    } else {\n      // Create an intermediate node and continue recursively.\n      let node = this.children[bit];\n      if (!node) {\n        this.children[bit] = node = new HuffmanTreeNode(null);\n      }\n      node.buildTree(line, shift - 1);\n    }\n  }\n\n  decodeNode(reader) {\n    if (this.isLeaf) {\n      if (this.isOOB) {\n        return null;\n      }\n      const htOffset = reader.readBits(this.rangeLength);\n      return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n    }\n    const node = this.children[reader.readBit()];\n    if (!node) {\n      throw new Jbig2Error(\"invalid Huffman data\");\n    }\n    return node.decodeNode(reader);\n  }\n}\n\nclass HuffmanTable {\n  constructor(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    // Create Huffman tree.\n    this.rootNode = new HuffmanTreeNode(null);\n    for (let i = 0, ii = lines.length; i < ii; i++) {\n      const line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n\n  decode(reader) {\n    return this.rootNode.decodeNode(reader);\n  }\n\n  assignPrefixCodes(lines) {\n    // Annex B.3 Assigning the prefix codes.\n    const linesLength = lines.length;\n    let prefixLengthMax = 0;\n    for (let i = 0; i < linesLength; i++) {\n      prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n    }\n\n    const histogram = new Uint32Array(prefixLengthMax + 1);\n    for (let i = 0; i < linesLength; i++) {\n      histogram[lines[i].prefixLength]++;\n    }\n    let currentLength = 1,\n      firstCode = 0,\n      currentCode,\n      currentTemp,\n      line;\n    histogram[0] = 0;\n\n    while (currentLength <= prefixLengthMax) {\n      firstCode = (firstCode + histogram[currentLength - 1]) << 1;\n      currentCode = firstCode;\n      currentTemp = 0;\n      while (currentTemp < linesLength) {\n        line = lines[currentTemp];\n        if (line.prefixLength === currentLength) {\n          line.prefixCode = currentCode;\n          currentCode++;\n        }\n        currentTemp++;\n      }\n      currentLength++;\n    }\n  }\n}\n\nfunction decodeTablesSegment(data, start, end) {\n  // Decodes a Tables segment, i.e., a custom Huffman table.\n  // Annex B.2 Code table structure.\n  const flags = data[start];\n  const lowestValue = readUint32(data, start + 1) & 0xffffffff;\n  const highestValue = readUint32(data, start + 5) & 0xffffffff;\n  const reader = new Reader(data, start + 9, end);\n\n  const prefixSizeBits = ((flags >> 1) & 7) + 1;\n  const rangeSizeBits = ((flags >> 4) & 7) + 1;\n  const lines = [];\n  let prefixLength,\n    rangeLength,\n    currentRangeLow = lowestValue;\n\n  // Normal table lines\n  do {\n    prefixLength = reader.readBits(prefixSizeBits);\n    rangeLength = reader.readBits(rangeSizeBits);\n    lines.push(\n      new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0])\n    );\n    currentRangeLow += 1 << rangeLength;\n  } while (currentRangeLow < highestValue);\n\n  // Lower range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, \"lower\"]));\n\n  // Upper range table line\n  prefixLength = reader.readBits(prefixSizeBits);\n  lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n\n  if (flags & 1) {\n    // Out-of-band table line\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([prefixLength, 0]));\n  }\n\n  return new HuffmanTable(lines, false);\n}\n\nconst standardTablesCache = {};\n\nfunction getStandardTable(number) {\n  // Annex B.5 Standard Huffman tables.\n  let table = standardTablesCache[number];\n  if (table) {\n    return table;\n  }\n  let lines;\n  switch (number) {\n    case 1:\n      lines = [\n        [0, 1, 4, 0x0],\n        [16, 2, 8, 0x2],\n        [272, 3, 16, 0x6],\n        [65808, 3, 32, 0x7], // upper\n      ];\n      break;\n    case 2:\n      lines = [\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [75, 6, 32, 0x3e], // upper\n        [6, 0x3f], // OOB\n      ];\n      break;\n    case 3:\n      lines = [\n        [-256, 8, 8, 0xfe],\n        [0, 1, 0, 0x0],\n        [1, 2, 0, 0x2],\n        [2, 3, 0, 0x6],\n        [3, 4, 3, 0xe],\n        [11, 5, 6, 0x1e],\n        [-257, 8, 32, 0xff, \"lower\"],\n        [75, 7, 32, 0x7e], // upper\n        [6, 0x3e], // OOB\n      ];\n      break;\n    case 4:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [76, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 5:\n      lines = [\n        [-255, 7, 8, 0x7e],\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 0, 0x6],\n        [4, 4, 3, 0xe],\n        [12, 5, 6, 0x1e],\n        [-256, 7, 32, 0x7f, \"lower\"],\n        [76, 6, 32, 0x3e], // upper\n      ];\n      break;\n    case 6:\n      lines = [\n        [-2048, 5, 10, 0x1c],\n        [-1024, 4, 9, 0x8],\n        [-512, 4, 8, 0x9],\n        [-256, 4, 7, 0xa],\n        [-128, 5, 6, 0x1d],\n        [-64, 5, 5, 0x1e],\n        [-32, 4, 5, 0xb],\n        [0, 2, 7, 0x0],\n        [128, 3, 7, 0x2],\n        [256, 3, 8, 0x3],\n        [512, 4, 9, 0xc],\n        [1024, 4, 10, 0xd],\n        [-2049, 6, 32, 0x3e, \"lower\"],\n        [2048, 6, 32, 0x3f], // upper\n      ];\n      break;\n    case 7:\n      lines = [\n        [-1024, 4, 9, 0x8],\n        [-512, 3, 8, 0x0],\n        [-256, 4, 7, 0x9],\n        [-128, 5, 6, 0x1a],\n        [-64, 5, 5, 0x1b],\n        [-32, 4, 5, 0xa],\n        [0, 4, 5, 0xb],\n        [32, 5, 5, 0x1c],\n        [64, 5, 6, 0x1d],\n        [128, 4, 7, 0xc],\n        [256, 3, 8, 0x1],\n        [512, 3, 9, 0x2],\n        [1024, 3, 10, 0x3],\n        [-1025, 5, 32, 0x1e, \"lower\"],\n        [2048, 5, 32, 0x1f], // upper\n      ];\n      break;\n    case 8:\n      lines = [\n        [-15, 8, 3, 0xfc],\n        [-7, 9, 1, 0x1fc],\n        [-5, 8, 1, 0xfd],\n        [-3, 9, 0, 0x1fd],\n        [-2, 7, 0, 0x7c],\n        [-1, 4, 0, 0xa],\n        [0, 2, 1, 0x0],\n        [2, 5, 0, 0x1a],\n        [3, 6, 0, 0x3a],\n        [4, 3, 4, 0x4],\n        [20, 6, 1, 0x3b],\n        [22, 4, 4, 0xb],\n        [38, 4, 5, 0xc],\n        [70, 5, 6, 0x1b],\n        [134, 5, 7, 0x1c],\n        [262, 6, 7, 0x3c],\n        [390, 7, 8, 0x7d],\n        [646, 6, 10, 0x3d],\n        [-16, 9, 32, 0x1fe, \"lower\"],\n        [1670, 9, 32, 0x1ff], // upper\n        [2, 0x1], // OOB\n      ];\n      break;\n    case 9:\n      lines = [\n        [-31, 8, 4, 0xfc],\n        [-15, 9, 2, 0x1fc],\n        [-11, 8, 2, 0xfd],\n        [-7, 9, 1, 0x1fd],\n        [-5, 7, 1, 0x7c],\n        [-3, 4, 1, 0xa],\n        [-1, 3, 1, 0x2],\n        [1, 3, 1, 0x3],\n        [3, 5, 1, 0x1a],\n        [5, 6, 1, 0x3a],\n        [7, 3, 5, 0x4],\n        [39, 6, 2, 0x3b],\n        [43, 4, 5, 0xb],\n        [75, 4, 6, 0xc],\n        [139, 5, 7, 0x1b],\n        [267, 5, 8, 0x1c],\n        [523, 6, 8, 0x3c],\n        [779, 7, 9, 0x7d],\n        [1291, 6, 11, 0x3d],\n        [-32, 9, 32, 0x1fe, \"lower\"],\n        [3339, 9, 32, 0x1ff], // upper\n        [2, 0x0], // OOB\n      ];\n      break;\n    case 10:\n      lines = [\n        [-21, 7, 4, 0x7a],\n        [-5, 8, 0, 0xfc],\n        [-4, 7, 0, 0x7b],\n        [-3, 5, 0, 0x18],\n        [-2, 2, 2, 0x0],\n        [2, 5, 0, 0x19],\n        [3, 6, 0, 0x36],\n        [4, 7, 0, 0x7c],\n        [5, 8, 0, 0xfd],\n        [6, 2, 6, 0x1],\n        [70, 5, 5, 0x1a],\n        [102, 6, 5, 0x37],\n        [134, 6, 6, 0x38],\n        [198, 6, 7, 0x39],\n        [326, 6, 8, 0x3a],\n        [582, 6, 9, 0x3b],\n        [1094, 6, 10, 0x3c],\n        [2118, 7, 11, 0x7d],\n        [-22, 8, 32, 0xfe, \"lower\"],\n        [4166, 8, 32, 0xff], // upper\n        [2, 0x2], // OOB\n      ];\n      break;\n    case 11:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 1, 0x2],\n        [4, 4, 0, 0xc],\n        [5, 4, 1, 0xd],\n        [7, 5, 1, 0x1c],\n        [9, 5, 2, 0x1d],\n        [13, 6, 2, 0x3c],\n        [17, 7, 2, 0x7a],\n        [21, 7, 3, 0x7b],\n        [29, 7, 4, 0x7c],\n        [45, 7, 5, 0x7d],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 12:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 2, 0, 0x2],\n        [3, 3, 1, 0x6],\n        [5, 5, 0, 0x1c],\n        [6, 5, 1, 0x1d],\n        [8, 6, 1, 0x3c],\n        [10, 7, 0, 0x7a],\n        [11, 7, 1, 0x7b],\n        [13, 7, 2, 0x7c],\n        [17, 7, 3, 0x7d],\n        [25, 7, 4, 0x7e],\n        [41, 8, 5, 0xfe],\n        [73, 8, 32, 0xff], // upper\n      ];\n      break;\n    case 13:\n      lines = [\n        [1, 1, 0, 0x0],\n        [2, 3, 0, 0x4],\n        [3, 4, 0, 0xc],\n        [4, 5, 0, 0x1c],\n        [5, 4, 1, 0xd],\n        [7, 3, 3, 0x5],\n        [15, 6, 1, 0x3a],\n        [17, 6, 2, 0x3b],\n        [21, 6, 3, 0x3c],\n        [29, 6, 4, 0x3d],\n        [45, 6, 5, 0x3e],\n        [77, 7, 6, 0x7e],\n        [141, 7, 32, 0x7f], // upper\n      ];\n      break;\n    case 14:\n      lines = [\n        [-2, 3, 0, 0x4],\n        [-1, 3, 0, 0x5],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x6],\n        [2, 3, 0, 0x7],\n      ];\n      break;\n    case 15:\n      lines = [\n        [-24, 7, 4, 0x7c],\n        [-8, 6, 2, 0x3c],\n        [-4, 5, 1, 0x1c],\n        [-2, 4, 0, 0xc],\n        [-1, 3, 0, 0x4],\n        [0, 1, 0, 0x0],\n        [1, 3, 0, 0x5],\n        [2, 4, 0, 0xd],\n        [3, 5, 1, 0x1d],\n        [5, 6, 2, 0x3d],\n        [9, 7, 4, 0x7d],\n        [-25, 7, 32, 0x7e, \"lower\"],\n        [25, 7, 32, 0x7f], // upper\n      ];\n      break;\n    default:\n      throw new Jbig2Error(`standard table B.${number} does not exist`);\n  }\n\n  for (let i = 0, ii = lines.length; i < ii; i++) {\n    lines[i] = new HuffmanLine(lines[i]);\n  }\n  table = new HuffmanTable(lines, true);\n  standardTablesCache[number] = table;\n  return table;\n}\n\nclass Reader {\n  constructor(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n\n  readBit() {\n    if (this.shift < 0) {\n      if (this.position >= this.end) {\n        throw new Jbig2Error(\"end of data while reading bit\");\n      }\n      this.currentByte = this.data[this.position++];\n      this.shift = 7;\n    }\n    const bit = (this.currentByte >> this.shift) & 1;\n    this.shift--;\n    return bit;\n  }\n\n  readBits(numBits) {\n    let result = 0,\n      i;\n    for (i = numBits - 1; i >= 0; i--) {\n      result |= this.readBit() << i;\n    }\n    return result;\n  }\n\n  byteAlign() {\n    this.shift = -1;\n  }\n\n  next() {\n    if (this.position >= this.end) {\n      return -1;\n    }\n    return this.data[this.position++];\n  }\n}\n\nfunction getCustomHuffmanTable(index, referredTo, customTables) {\n  // Returns a Tables segment that has been earlier decoded.\n  // See 7.4.2.1.6 (symbol dictionary) or 7.4.3.1.6 (text region).\n  let currentIndex = 0;\n  for (let i = 0, ii = referredTo.length; i < ii; i++) {\n    const table = customTables[referredTo[i]];\n    if (table) {\n      if (index === currentIndex) {\n        return table;\n      }\n      currentIndex++;\n    }\n  }\n  throw new Jbig2Error(\"can't find custom Huffman table\");\n}\n\nfunction getTextRegionHuffmanTables(\n  textRegion,\n  referredTo,\n  customTables,\n  numberOfSymbols,\n  reader\n) {\n  // 7.4.3.1.7 Symbol ID Huffman table decoding\n\n  // Read code lengths for RUNCODEs 0...34.\n  const codes = [];\n  for (let i = 0; i <= 34; i++) {\n    const codeLength = reader.readBits(4);\n    codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n  }\n  // Assign Huffman codes for RUNCODEs.\n  const runCodesTable = new HuffmanTable(codes, false);\n\n  // Read a Huffman code using the assignment above.\n  // Interpret the RUNCODE codes and the additional bits (if any).\n  codes.length = 0;\n  for (let i = 0; i < numberOfSymbols; ) {\n    const codeLength = runCodesTable.decode(reader);\n    if (codeLength >= 32) {\n      let repeatedLength, numberOfRepeats, j;\n      switch (codeLength) {\n        case 32:\n          if (i === 0) {\n            throw new Jbig2Error(\"no previous value in symbol ID table\");\n          }\n          numberOfRepeats = reader.readBits(2) + 3;\n          repeatedLength = codes[i - 1].prefixLength;\n          break;\n        case 33:\n          numberOfRepeats = reader.readBits(3) + 3;\n          repeatedLength = 0;\n          break;\n        case 34:\n          numberOfRepeats = reader.readBits(7) + 11;\n          repeatedLength = 0;\n          break;\n        default:\n          throw new Jbig2Error(\"invalid code length in symbol ID table\");\n      }\n      for (j = 0; j < numberOfRepeats; j++) {\n        codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n        i++;\n      }\n    } else {\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n      i++;\n    }\n  }\n  reader.byteAlign();\n  const symbolIDTable = new HuffmanTable(codes, false);\n\n  // 7.4.3.1.6 Text region segment Huffman table selection\n\n  let customIndex = 0,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT;\n\n  switch (textRegion.huffmanFS) {\n    case 0:\n    case 1:\n      tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n      break;\n    case 3:\n      tableFirstS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman FS selector\");\n  }\n\n  switch (textRegion.huffmanDS) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n      break;\n    case 3:\n      tableDeltaS = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DS selector\");\n  }\n\n  switch (textRegion.huffmanDT) {\n    case 0:\n    case 1:\n    case 2:\n      tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n      break;\n    case 3:\n      tableDeltaT = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DT selector\");\n  }\n\n  if (textRegion.refinement) {\n    // Load tables RDW, RDH, RDX and RDY.\n    throw new Jbig2Error(\"refinement with Huffman is not supported\");\n  }\n\n  return {\n    symbolIDTable,\n    tableFirstS,\n    tableDeltaS,\n    tableDeltaT,\n  };\n}\n\nfunction getSymbolDictionaryHuffmanTables(\n  dictionary,\n  referredTo,\n  customTables\n) {\n  // 7.4.2.1.6 Symbol dictionary segment Huffman table selection\n\n  let customIndex = 0,\n    tableDeltaHeight,\n    tableDeltaWidth;\n  switch (dictionary.huffmanDHSelector) {\n    case 0:\n    case 1:\n      tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n      break;\n    case 3:\n      tableDeltaHeight = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DH selector\");\n  }\n\n  switch (dictionary.huffmanDWSelector) {\n    case 0:\n    case 1:\n      tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n      break;\n    case 3:\n      tableDeltaWidth = getCustomHuffmanTable(\n        customIndex,\n        referredTo,\n        customTables\n      );\n      customIndex++;\n      break;\n    default:\n      throw new Jbig2Error(\"invalid Huffman DW selector\");\n  }\n\n  let tableBitmapSize, tableAggregateInstances;\n  if (dictionary.bitmapSizeSelector) {\n    tableBitmapSize = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n    customIndex++;\n  } else {\n    tableBitmapSize = getStandardTable(1);\n  }\n\n  if (dictionary.aggregationInstancesSelector) {\n    tableAggregateInstances = getCustomHuffmanTable(\n      customIndex,\n      referredTo,\n      customTables\n    );\n  } else {\n    tableAggregateInstances = getStandardTable(1);\n  }\n\n  return {\n    tableDeltaHeight,\n    tableDeltaWidth,\n    tableBitmapSize,\n    tableAggregateInstances,\n  };\n}\n\nfunction readUncompressedBitmap(reader, width, height) {\n  const bitmap = [];\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    for (let x = 0; x < width; x++) {\n      row[x] = reader.readBit();\n    }\n    reader.byteAlign();\n  }\n  return bitmap;\n}\n\nfunction decodeMMRBitmap(input, width, height, endOfBlock) {\n  // MMR is the same compression algorithm as the PDF filter\n  // CCITTFaxDecode with /K -1.\n  const params = {\n    K: -1,\n    Columns: width,\n    Rows: height,\n    BlackIs1: true,\n    EndOfBlock: endOfBlock,\n  };\n  const decoder = new CCITTFaxDecoder(input, params);\n  const bitmap = [];\n  let currentByte,\n    eof = false;\n\n  for (let y = 0; y < height; y++) {\n    const row = new Uint8Array(width);\n    bitmap.push(row);\n    let shift = -1;\n    for (let x = 0; x < width; x++) {\n      if (shift < 0) {\n        currentByte = decoder.readNextChar();\n        if (currentByte === -1) {\n          // Set the rest of the bits to zero.\n          currentByte = 0;\n          eof = true;\n        }\n        shift = 7;\n      }\n      row[x] = (currentByte >> shift) & 1;\n      shift--;\n    }\n  }\n\n  if (endOfBlock && !eof) {\n    // Read until EOFB has been consumed.\n    const lookForEOFLimit = 5;\n    for (let i = 0; i < lookForEOFLimit; i++) {\n      if (decoder.readNextChar() === -1) {\n        break;\n      }\n    }\n  }\n\n  return bitmap;\n}\n\nclass Jbig2Image {\n  parseChunks(chunks) {\n    return parseJbig2Chunks(chunks);\n  }\n\n  parse(data) {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      throw new Error(\"Not implemented: Jbig2Image.parse\");\n    }\n    const { imgData, width, height } = parseJbig2(data);\n    this.width = width;\n    this.height = height;\n    return imgData;\n  }\n}\n\nexport { Jbig2Error, Jbig2Image };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FeatureTest, ImageKind } from \"./util.js\";\n\nfunction convertToRGBA(params) {\n  switch (params.kind) {\n    case ImageKind.GRAYSCALE_1BPP:\n      return convertBlackAndWhiteToRGBA(params);\n    case ImageKind.RGB_24BPP:\n      return convertRGBToRGBA(params);\n  }\n\n  return null;\n}\n\nfunction convertBlackAndWhiteToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  width,\n  height,\n  nonBlackColor = 0xffffffff,\n  inverseDecode = false,\n}) {\n  const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = inverseDecode\n    ? [nonBlackColor, black]\n    : [black, nonBlackColor];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n  let destPos = 0;\n\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & (1 << (7 - j)) ? oneMapping : zeroMapping;\n    }\n  }\n  return { srcPos, destPos };\n}\n\nfunction convertRGBToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height,\n}) {\n  let i = 0;\n  const len = width * height * 3;\n  const len32 = len >> 2;\n  const src32 = new Uint32Array(src.buffer, srcPos, len32);\n\n  if (FeatureTest.isLittleEndian) {\n    // It's a way faster to do the shuffle manually instead of working\n    // component by component with some Uint8 arrays.\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R2B1G1R1\n      const s2 = src32[i + 1]; // G3R3B2G2\n      const s3 = src32[i + 2]; // B4G4R4B3\n\n      dest[destPos] = s1 | 0xff000000;\n      dest[destPos + 1] = (s1 >>> 24) | (s2 << 8) | 0xff000000;\n      dest[destPos + 2] = (s2 >>> 16) | (s3 << 16) | 0xff000000;\n      dest[destPos + 3] = (s3 >>> 8) | 0xff000000;\n    }\n\n    for (let j = i * 4, jj = srcPos + len; j < jj; j += 3) {\n      dest[destPos++] =\n        src[j] | (src[j + 1] << 8) | (src[j + 2] << 16) | 0xff000000;\n    }\n  } else {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R1G1B1R2\n      const s2 = src32[i + 1]; // G2B2R3G3\n      const s3 = src32[i + 2]; // B3R4G4B4\n\n      dest[destPos] = s1 | 0xff;\n      dest[destPos + 1] = (s1 << 24) | (s2 >>> 8) | 0xff;\n      dest[destPos + 2] = (s2 << 16) | (s3 >>> 16) | 0xff;\n      dest[destPos + 3] = (s3 << 8) | 0xff;\n    }\n\n    for (let j = i * 4, jj = srcPos + len; j < jj; j += 3) {\n      dest[destPos++] =\n        (src[j] << 24) | (src[j + 1] << 16) | (src[j + 2] << 8) | 0xff;\n    }\n  }\n\n  return { srcPos: srcPos + len, destPos };\n}\n\nfunction grayToRGBA(src, dest) {\n  if (FeatureTest.isLittleEndian) {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x10101) | 0xff000000;\n    }\n  } else {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x1010100) | 0x000000ff;\n    }\n  }\n}\n\nexport { convertBlackAndWhiteToRGBA, convertToRGBA, grayToRGBA };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, BaseException, warn } from \"../shared/util.js\";\nimport { grayToRGBA } from \"../shared/image_utils.js\";\nimport { readUint16 } from \"./core_utils.js\";\n\nclass JpegError extends BaseException {\n  constructor(msg) {\n    super(msg, \"JpegError\");\n  }\n}\n\nclass DNLMarkerError extends BaseException {\n  constructor(message, scanLines) {\n    super(message, \"DNLMarkerError\");\n    this.scanLines = scanLines;\n  }\n}\n\nclass EOIMarkerError extends BaseException {\n  constructor(msg) {\n    super(msg, \"EOIMarkerError\");\n  }\n}\n\n/**\n * This code was forked from https://github.com/notmasteryet/jpgjs.\n * The original version was created by GitHub user notmasteryet.\n *\n * - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n *   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n * - The JFIF specification can be found in the JPEG File Interchange Format\n *   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n * - The Adobe Application-Specific JPEG markers in the\n *   Supporting the DCT Filters in PostScript Level 2, Technical Note #5116\n *   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n */\n\n// prettier-ignore\nconst dctZigZag = new Uint8Array([\n   0,\n   1,  8,\n  16,  9,  2,\n   3, 10, 17, 24,\n  32, 25, 18, 11, 4,\n   5, 12, 19, 26, 33, 40,\n  48, 41, 34, 27, 20, 13,  6,\n   7, 14, 21, 28, 35, 42, 49, 56,\n  57, 50, 43, 36, 29, 22, 15,\n  23, 30, 37, 44, 51, 58,\n  59, 52, 45, 38, 31,\n  39, 46, 53, 60,\n  61, 54, 47,\n  55, 62,\n  63\n]);\n\nconst dctCos1 = 4017; // cos(pi/16)\nconst dctSin1 = 799; // sin(pi/16)\nconst dctCos3 = 3406; // cos(3*pi/16)\nconst dctSin3 = 2276; // sin(3*pi/16)\nconst dctCos6 = 1567; // cos(6*pi/16)\nconst dctSin6 = 3784; // sin(6*pi/16)\nconst dctSqrt2 = 5793; // sqrt(2)\nconst dctSqrt1d2 = 2896; // sqrt(2) / 2\n\nfunction buildHuffmanTable(codeLengths, values) {\n  let k = 0,\n    i,\n    j,\n    length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n    length--;\n  }\n  const code = [{ children: [], index: 0 }];\n  let p = code[0],\n    q;\n  for (i = 0; i < length; i++) {\n    for (j = 0; j < codeLengths[i]; j++) {\n      p = code.pop();\n      p.children[p.index] = values[k];\n      while (p.index > 0) {\n        p = code.pop();\n      }\n      p.index++;\n      code.push(p);\n      while (code.length <= i) {\n        code.push((q = { children: [], index: 0 }));\n        p.children[p.index] = q.children;\n        p = q;\n      }\n      k++;\n    }\n    if (i + 1 < length) {\n      // p here points to last code\n      code.push((q = { children: [], index: 0 }));\n      p.children[p.index] = q.children;\n      p = q;\n    }\n  }\n  return code[0].children;\n}\n\nfunction getBlockBufferOffset(component, row, col) {\n  return 64 * ((component.blocksPerLine + 1) * row + col);\n}\n\nfunction decodeScan(\n  data,\n  offset,\n  frame,\n  components,\n  resetInterval,\n  spectralStart,\n  spectralEnd,\n  successivePrev,\n  successive,\n  parseDNLMarker = false\n) {\n  const mcusPerLine = frame.mcusPerLine;\n  const progressive = frame.progressive;\n\n  const startOffset = offset;\n  let bitsData = 0,\n    bitsCount = 0;\n\n  function readBit() {\n    if (bitsCount > 0) {\n      bitsCount--;\n      return (bitsData >> bitsCount) & 1;\n    }\n    bitsData = data[offset++];\n    if (bitsData === 0xff) {\n      const nextByte = data[offset++];\n      if (nextByte) {\n        if (nextByte === /* DNL = */ 0xdc && parseDNLMarker) {\n          offset += 2; // Skip marker length.\n\n          const scanLines = readUint16(data, offset);\n          offset += 2;\n          if (scanLines > 0 && scanLines !== frame.scanLines) {\n            throw new DNLMarkerError(\n              \"Found DNL marker (0xFFDC) while parsing scan data\",\n              scanLines\n            );\n          }\n        } else if (nextByte === /* EOI = */ 0xd9) {\n          if (parseDNLMarker) {\n            // NOTE: only 8-bit JPEG images are supported in this decoder.\n            const maybeScanLines = blockRow * (frame.precision === 8 ? 8 : 0);\n            // Heuristic to attempt to handle corrupt JPEG images with too\n            // large `scanLines` parameter, by falling back to the currently\n            // parsed number of scanLines when it's at least (approximately)\n            // one \"half\" order of magnitude smaller than expected (fixes\n            // issue10880.pdf, issue10989.pdf, issue15492.pdf).\n            if (\n              maybeScanLines > 0 &&\n              Math.round(frame.scanLines / maybeScanLines) >= 5\n            ) {\n              throw new DNLMarkerError(\n                \"Found EOI marker (0xFFD9) while parsing scan data, \" +\n                  \"possibly caused by incorrect `scanLines` parameter\",\n                maybeScanLines\n              );\n            }\n          }\n          throw new EOIMarkerError(\n            \"Found EOI marker (0xFFD9) while parsing scan data\"\n          );\n        }\n        throw new JpegError(\n          `unexpected marker ${((bitsData << 8) | nextByte).toString(16)}`\n        );\n      }\n      // unstuff 0\n    }\n    bitsCount = 7;\n    return bitsData >>> 7;\n  }\n\n  function decodeHuffman(tree) {\n    let node = tree;\n    while (true) {\n      node = node[readBit()];\n      switch (typeof node) {\n        case \"number\":\n          return node;\n        case \"object\":\n          continue;\n      }\n      throw new JpegError(\"invalid huffman sequence\");\n    }\n  }\n\n  function receive(length) {\n    let n = 0;\n    while (length > 0) {\n      n = (n << 1) | readBit();\n      length--;\n    }\n    return n;\n  }\n\n  function receiveAndExtend(length) {\n    if (length === 1) {\n      return readBit() === 1 ? 1 : -1;\n    }\n    const n = receive(length);\n    if (n >= 1 << (length - 1)) {\n      return n;\n    }\n    return n + (-1 << length) + 1;\n  }\n\n  function decodeBaseline(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t);\n    component.blockData[blockOffset] = component.pred += diff;\n    let k = 1;\n    while (k < 64) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] = receiveAndExtend(s);\n      k++;\n    }\n  }\n\n  function decodeDCFirst(component, blockOffset) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n    component.blockData[blockOffset] = component.pred += diff;\n  }\n\n  function decodeDCSuccessive(component, blockOffset) {\n    component.blockData[blockOffset] |= readBit() << successive;\n  }\n\n  let eobrun = 0;\n  function decodeACFirst(component, blockOffset) {\n    if (eobrun > 0) {\n      eobrun--;\n      return;\n    }\n    let k = spectralStart;\n    const e = spectralEnd;\n    while (k <= e) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15,\n        r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          eobrun = receive(r) + (1 << r) - 1;\n          break;\n        }\n        k += 16;\n        continue;\n      }\n      k += r;\n      const z = dctZigZag[k];\n      component.blockData[blockOffset + z] =\n        receiveAndExtend(s) * (1 << successive);\n      k++;\n    }\n  }\n\n  let successiveACState = 0,\n    successiveACNextValue;\n  function decodeACSuccessive(component, blockOffset) {\n    let k = spectralStart;\n    const e = spectralEnd;\n    let r = 0;\n    let s;\n    let rs;\n    while (k <= e) {\n      const offsetZ = blockOffset + dctZigZag[k];\n      const sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n      switch (successiveACState) {\n        case 0: // initial state\n          rs = decodeHuffman(component.huffmanTableAC);\n          s = rs & 15;\n          r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1) {\n              throw new JpegError(\"invalid ACn encoding\");\n            }\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            r--;\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n          break;\n        case 3: // set value for a zero item\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          } else {\n            component.blockData[offsetZ] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (component.blockData[offsetZ]) {\n            component.blockData[offsetZ] += sign * (readBit() << successive);\n          }\n          break;\n      }\n      k++;\n    }\n    if (successiveACState === 4) {\n      eobrun--;\n      if (eobrun === 0) {\n        successiveACState = 0;\n      }\n    }\n  }\n\n  let blockRow = 0;\n  function decodeMcu(component, decode, mcu, row, col) {\n    const mcuRow = (mcu / mcusPerLine) | 0;\n    const mcuCol = mcu % mcusPerLine;\n    blockRow = mcuRow * component.v + row;\n    const blockCol = mcuCol * component.h + col;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  function decodeBlock(component, decode, mcu) {\n    blockRow = (mcu / component.blocksPerLine) | 0;\n    const blockCol = mcu % component.blocksPerLine;\n    const blockOffset = getBlockBufferOffset(component, blockRow, blockCol);\n    decode(component, blockOffset);\n  }\n\n  const componentsLength = components.length;\n  let component, i, j, k, n;\n  let decodeFn;\n  if (progressive) {\n    if (spectralStart === 0) {\n      decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n    } else {\n      decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    }\n  } else {\n    decodeFn = decodeBaseline;\n  }\n\n  let mcu = 0,\n    fileMarker;\n  const mcuExpected =\n    componentsLength === 1\n      ? components[0].blocksPerLine * components[0].blocksPerColumn\n      : mcusPerLine * frame.mcusPerColumn;\n\n  let h, v;\n  while (mcu <= mcuExpected) {\n    // reset interval stuff\n    const mcuToRead = resetInterval\n      ? Math.min(mcuExpected - mcu, resetInterval)\n      : mcuExpected;\n\n    // The `mcuToRead === 0` case should only occur when all of the expected\n    // MCU data has been already parsed, i.e. when `mcu === mcuExpected`, but\n    // some corrupt JPEG images contain more data than intended and we thus\n    // want to skip over any extra RSTx markers below (fixes issue11794.pdf).\n    if (mcuToRead > 0) {\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n    }\n\n    // find marker\n    bitsCount = 0;\n    fileMarker = findNextFileMarker(data, offset);\n    if (!fileMarker) {\n      break; // Reached the end of the image data without finding any marker.\n    }\n    if (fileMarker.invalid) {\n      // Some bad images seem to pad Scan blocks with e.g. zero bytes, skip\n      // past those to attempt to find a valid marker (fixes issue4090.pdf).\n      const partialMsg = mcuToRead > 0 ? \"unexpected\" : \"excessive\";\n      warn(\n        `decodeScan - ${partialMsg} MCU data, current marker is: ${fileMarker.invalid}`\n      );\n      offset = fileMarker.offset;\n    }\n    if (fileMarker.marker >= 0xffd0 && fileMarker.marker <= 0xffd7) {\n      // RSTx\n      offset += 2;\n    } else {\n      break;\n    }\n  }\n\n  return offset - startOffset;\n}\n\n// A port of poppler's IDCT method which in turn is taken from:\n//   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n//   'Practical Fast 1-D DCT Algorithms with 11 Multiplications',\n//   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n//   988-991.\nfunction quantizeAndInverse(component, blockBufferOffset, p) {\n  const qt = component.quantizationTable,\n    blockData = component.blockData;\n  let v0, v1, v2, v3, v4, v5, v6, v7;\n  let p0, p1, p2, p3, p4, p5, p6, p7;\n  let t;\n\n  if (!qt) {\n    throw new JpegError(\"missing required Quantization Table.\");\n  }\n\n  // inverse DCT on rows\n  for (let row = 0; row < 64; row += 8) {\n    // gather block data\n    p0 = blockData[blockBufferOffset + row];\n    p1 = blockData[blockBufferOffset + row + 1];\n    p2 = blockData[blockBufferOffset + row + 2];\n    p3 = blockData[blockBufferOffset + row + 3];\n    p4 = blockData[blockBufferOffset + row + 4];\n    p5 = blockData[blockBufferOffset + row + 5];\n    p6 = blockData[blockBufferOffset + row + 6];\n    p7 = blockData[blockBufferOffset + row + 7];\n\n    // dequant p0\n    p0 *= qt[row];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 512) >> 10;\n      p[row] = t;\n      p[row + 1] = t;\n      p[row + 2] = t;\n      p[row + 3] = t;\n      p[row + 4] = t;\n      p[row + 5] = t;\n      p[row + 6] = t;\n      p[row + 7] = t;\n      continue;\n    }\n    // dequant p1 ... p7\n    p1 *= qt[row + 1];\n    p2 *= qt[row + 2];\n    p3 *= qt[row + 3];\n    p4 *= qt[row + 4];\n    p5 *= qt[row + 5];\n    p6 *= qt[row + 6];\n    p7 *= qt[row + 7];\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 128) >> 8;\n    v1 = (dctSqrt2 * p4 + 128) >> 8;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n    v5 = p3 << 4;\n    v6 = p5 << 4;\n\n    // stage 3\n    v0 = (v0 + v1 + 1) >> 1;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p[row] = v0 + v7;\n    p[row + 7] = v0 - v7;\n    p[row + 1] = v1 + v6;\n    p[row + 6] = v1 - v6;\n    p[row + 2] = v2 + v5;\n    p[row + 5] = v2 - v5;\n    p[row + 3] = v3 + v4;\n    p[row + 4] = v3 - v4;\n  }\n\n  // inverse DCT on columns\n  for (let col = 0; col < 8; ++col) {\n    p0 = p[col];\n    p1 = p[col + 8];\n    p2 = p[col + 16];\n    p3 = p[col + 24];\n    p4 = p[col + 32];\n    p5 = p[col + 40];\n    p6 = p[col + 48];\n    p7 = p[col + 56];\n\n    // check for all-zero AC coefficients\n    if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n      t = (dctSqrt2 * p0 + 8192) >> 14;\n      // Convert to 8-bit.\n      if (t < -2040) {\n        t = 0;\n      } else if (t >= 2024) {\n        t = 255;\n      } else {\n        t = (t + 2056) >> 4;\n      }\n      blockData[blockBufferOffset + col] = t;\n      blockData[blockBufferOffset + col + 8] = t;\n      blockData[blockBufferOffset + col + 16] = t;\n      blockData[blockBufferOffset + col + 24] = t;\n      blockData[blockBufferOffset + col + 32] = t;\n      blockData[blockBufferOffset + col + 40] = t;\n      blockData[blockBufferOffset + col + 48] = t;\n      blockData[blockBufferOffset + col + 56] = t;\n      continue;\n    }\n\n    // stage 4\n    v0 = (dctSqrt2 * p0 + 2048) >> 12;\n    v1 = (dctSqrt2 * p4 + 2048) >> 12;\n    v2 = p2;\n    v3 = p6;\n    v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n    v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n    v5 = p3;\n    v6 = p5;\n\n    // stage 3\n    // Shift v0 by 128.5 << 5 here, so we don't need to shift p0...p7 when\n    // converting to UInt8 range later.\n    v0 = ((v0 + v1 + 1) >> 1) + 4112;\n    v1 = v0 - v1;\n    t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n    v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n    v3 = t;\n    v4 = (v4 + v6 + 1) >> 1;\n    v6 = v4 - v6;\n    v7 = (v7 + v5 + 1) >> 1;\n    v5 = v7 - v5;\n\n    // stage 2\n    v0 = (v0 + v3 + 1) >> 1;\n    v3 = v0 - v3;\n    v1 = (v1 + v2 + 1) >> 1;\n    v2 = v1 - v2;\n    t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n    v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n    v7 = t;\n    t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n    v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n    v6 = t;\n\n    // stage 1\n    p0 = v0 + v7;\n    p7 = v0 - v7;\n    p1 = v1 + v6;\n    p6 = v1 - v6;\n    p2 = v2 + v5;\n    p5 = v2 - v5;\n    p3 = v3 + v4;\n    p4 = v3 - v4;\n\n    // Convert to 8-bit integers.\n    if (p0 < 16) {\n      p0 = 0;\n    } else if (p0 >= 4080) {\n      p0 = 255;\n    } else {\n      p0 >>= 4;\n    }\n    if (p1 < 16) {\n      p1 = 0;\n    } else if (p1 >= 4080) {\n      p1 = 255;\n    } else {\n      p1 >>= 4;\n    }\n    if (p2 < 16) {\n      p2 = 0;\n    } else if (p2 >= 4080) {\n      p2 = 255;\n    } else {\n      p2 >>= 4;\n    }\n    if (p3 < 16) {\n      p3 = 0;\n    } else if (p3 >= 4080) {\n      p3 = 255;\n    } else {\n      p3 >>= 4;\n    }\n    if (p4 < 16) {\n      p4 = 0;\n    } else if (p4 >= 4080) {\n      p4 = 255;\n    } else {\n      p4 >>= 4;\n    }\n    if (p5 < 16) {\n      p5 = 0;\n    } else if (p5 >= 4080) {\n      p5 = 255;\n    } else {\n      p5 >>= 4;\n    }\n    if (p6 < 16) {\n      p6 = 0;\n    } else if (p6 >= 4080) {\n      p6 = 255;\n    } else {\n      p6 >>= 4;\n    }\n    if (p7 < 16) {\n      p7 = 0;\n    } else if (p7 >= 4080) {\n      p7 = 255;\n    } else {\n      p7 >>= 4;\n    }\n\n    // store block data\n    blockData[blockBufferOffset + col] = p0;\n    blockData[blockBufferOffset + col + 8] = p1;\n    blockData[blockBufferOffset + col + 16] = p2;\n    blockData[blockBufferOffset + col + 24] = p3;\n    blockData[blockBufferOffset + col + 32] = p4;\n    blockData[blockBufferOffset + col + 40] = p5;\n    blockData[blockBufferOffset + col + 48] = p6;\n    blockData[blockBufferOffset + col + 56] = p7;\n  }\n}\n\nfunction buildComponentData(frame, component) {\n  const blocksPerLine = component.blocksPerLine;\n  const blocksPerColumn = component.blocksPerColumn;\n  const computationBuffer = new Int16Array(64);\n\n  for (let blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n    for (let blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n      const offset = getBlockBufferOffset(component, blockRow, blockCol);\n      quantizeAndInverse(component, offset, computationBuffer);\n    }\n  }\n  return component.blockData;\n}\n\nfunction findNextFileMarker(data, currentPos, startPos = currentPos) {\n  const maxPos = data.length - 1;\n  let newPos = startPos < currentPos ? startPos : currentPos;\n\n  if (currentPos >= maxPos) {\n    return null; // Don't attempt to read non-existent data and just return.\n  }\n  const currentMarker = readUint16(data, currentPos);\n  if (currentMarker >= 0xffc0 && currentMarker <= 0xfffe) {\n    return {\n      invalid: null,\n      marker: currentMarker,\n      offset: currentPos,\n    };\n  }\n  let newMarker = readUint16(data, newPos);\n  while (!(newMarker >= 0xffc0 && newMarker <= 0xfffe)) {\n    if (++newPos >= maxPos) {\n      return null; // Don't attempt to read non-existent data and just return.\n    }\n    newMarker = readUint16(data, newPos);\n  }\n  return {\n    invalid: currentMarker.toString(16),\n    marker: newMarker,\n    offset: newPos,\n  };\n}\n\nfunction prepareComponents(frame) {\n  const mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n  const mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n  for (const component of frame.components) {\n    const blocksPerLine = Math.ceil(\n      (Math.ceil(frame.samplesPerLine / 8) * component.h) / frame.maxH\n    );\n    const blocksPerColumn = Math.ceil(\n      (Math.ceil(frame.scanLines / 8) * component.v) / frame.maxV\n    );\n    const blocksPerLineForMcu = mcusPerLine * component.h;\n    const blocksPerColumnForMcu = mcusPerColumn * component.v;\n\n    const blocksBufferSize =\n      64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n    component.blockData = new Int16Array(blocksBufferSize);\n    component.blocksPerLine = blocksPerLine;\n    component.blocksPerColumn = blocksPerColumn;\n  }\n  frame.mcusPerLine = mcusPerLine;\n  frame.mcusPerColumn = mcusPerColumn;\n}\n\nfunction readDataBlock(data, offset) {\n  const length = readUint16(data, offset);\n  offset += 2;\n  let endOffset = offset + length - 2;\n\n  const fileMarker = findNextFileMarker(data, endOffset, offset);\n  if (fileMarker?.invalid) {\n    warn(\n      \"readDataBlock - incorrect length, current marker is: \" +\n        fileMarker.invalid\n    );\n    endOffset = fileMarker.offset;\n  }\n\n  const array = data.subarray(offset, endOffset);\n  return {\n    appData: array,\n    oldOffset: offset,\n    newOffset: offset + array.length,\n  };\n}\n\nfunction skipData(data, offset) {\n  const length = readUint16(data, offset);\n  offset += 2;\n  const endOffset = offset + length - 2;\n\n  const fileMarker = findNextFileMarker(data, endOffset, offset);\n  if (fileMarker?.invalid) {\n    return fileMarker.offset;\n  }\n  return endOffset;\n}\n\nclass JpegImage {\n  constructor({ decodeTransform = null, colorTransform = -1 } = {}) {\n    this._decodeTransform = decodeTransform;\n    this._colorTransform = colorTransform;\n  }\n\n  static canUseImageDecoder(data, colorTransform = -1) {\n    let exifOffsets = null;\n    let offset = 0;\n    let numComponents = null;\n    let fileMarker = readUint16(data, offset);\n    offset += 2;\n    if (fileMarker !== /* SOI (Start of Image) = */ 0xffd8) {\n      throw new JpegError(\"SOI not found\");\n    }\n    fileMarker = readUint16(data, offset);\n    offset += 2;\n\n    markerLoop: while (fileMarker !== /* EOI (End of Image) = */ 0xffd9) {\n      switch (fileMarker) {\n        case 0xffe1: // APP1 - Exif\n          // TODO: Remove this once https://github.com/w3c/webcodecs/issues/870\n          //       is fixed.\n          const { appData, oldOffset, newOffset } = readDataBlock(data, offset);\n          offset = newOffset;\n\n          // 'Exif\\x00\\x00'\n          if (\n            appData[0] === 0x45 &&\n            appData[1] === 0x78 &&\n            appData[2] === 0x69 &&\n            appData[3] === 0x66 &&\n            appData[4] === 0 &&\n            appData[5] === 0\n          ) {\n            if (exifOffsets) {\n              throw new JpegError(\"Duplicate EXIF-blocks found.\");\n            }\n            // Don't do the EXIF-block replacement here, see `JpegStream`,\n            // since that can modify the original PDF document.\n            exifOffsets = { exifStart: oldOffset + 6, exifEnd: newOffset };\n          }\n          fileMarker = readUint16(data, offset);\n          offset += 2;\n          continue;\n        case 0xffc0: // SOF0 (Start of Frame, Baseline DCT)\n        case 0xffc1: // SOF1 (Start of Frame, Extended DCT)\n        case 0xffc2: // SOF2 (Start of Frame, Progressive DCT)\n          // Skip marker length.\n          // Skip precision.\n          // Skip scanLines.\n          // Skip samplesPerLine.\n          numComponents = data[offset + (2 + 1 + 2 + 2)];\n          break markerLoop;\n        case 0xffff: // Fill bytes\n          if (data[offset] !== 0xff) {\n            // Avoid skipping a valid marker.\n            offset--;\n          }\n          break;\n      }\n      offset = skipData(data, offset);\n      fileMarker = readUint16(data, offset);\n      offset += 2;\n    }\n    if (numComponents === 4) {\n      return null;\n    }\n    if (numComponents === 3 && colorTransform === 0) {\n      return null;\n    }\n    return exifOffsets || {};\n  }\n\n  parse(data, { dnlScanLines = null } = {}) {\n    let offset = 0;\n    let jfif = null;\n    let adobe = null;\n    let frame, resetInterval;\n    let numSOSMarkers = 0;\n    const quantizationTables = [];\n    const huffmanTablesAC = [],\n      huffmanTablesDC = [];\n\n    let fileMarker = readUint16(data, offset);\n    offset += 2;\n    if (fileMarker !== /* SOI (Start of Image) = */ 0xffd8) {\n      throw new JpegError(\"SOI not found\");\n    }\n    fileMarker = readUint16(data, offset);\n    offset += 2;\n\n    markerLoop: while (fileMarker !== /* EOI (End of Image) = */ 0xffd9) {\n      let i, j, l;\n      switch (fileMarker) {\n        case 0xffe0: // APP0 (Application Specific)\n        case 0xffe1: // APP1\n        case 0xffe2: // APP2\n        case 0xffe3: // APP3\n        case 0xffe4: // APP4\n        case 0xffe5: // APP5\n        case 0xffe6: // APP6\n        case 0xffe7: // APP7\n        case 0xffe8: // APP8\n        case 0xffe9: // APP9\n        case 0xffea: // APP10\n        case 0xffeb: // APP11\n        case 0xffec: // APP12\n        case 0xffed: // APP13\n        case 0xffee: // APP14\n        case 0xffef: // APP15\n        case 0xfffe: // COM (Comment)\n          const { appData, newOffset } = readDataBlock(data, offset);\n          offset = newOffset;\n\n          if (fileMarker === 0xffe0) {\n            // 'JFIF\\x00'\n            if (\n              appData[0] === 0x4a &&\n              appData[1] === 0x46 &&\n              appData[2] === 0x49 &&\n              appData[3] === 0x46 &&\n              appData[4] === 0\n            ) {\n              jfif = {\n                version: { major: appData[5], minor: appData[6] },\n                densityUnits: appData[7],\n                xDensity: (appData[8] << 8) | appData[9],\n                yDensity: (appData[10] << 8) | appData[11],\n                thumbWidth: appData[12],\n                thumbHeight: appData[13],\n                thumbData: appData.subarray(\n                  14,\n                  14 + 3 * appData[12] * appData[13]\n                ),\n              };\n            }\n          }\n          // TODO APP1 - Exif\n          if (fileMarker === 0xffee) {\n            // 'Adobe'\n            if (\n              appData[0] === 0x41 &&\n              appData[1] === 0x64 &&\n              appData[2] === 0x6f &&\n              appData[3] === 0x62 &&\n              appData[4] === 0x65\n            ) {\n              adobe = {\n                version: (appData[5] << 8) | appData[6],\n                flags0: (appData[7] << 8) | appData[8],\n                flags1: (appData[9] << 8) | appData[10],\n                transformCode: appData[11],\n              };\n            }\n          }\n          break;\n\n        case 0xffdb: // DQT (Define Quantization Tables)\n          const quantizationTablesLength = readUint16(data, offset);\n          offset += 2;\n          const quantizationTablesEnd = quantizationTablesLength + offset - 2;\n          let z;\n          while (offset < quantizationTablesEnd) {\n            const quantizationTableSpec = data[offset++];\n            const tableData = new Uint16Array(64);\n            if (quantizationTableSpec >> 4 === 0) {\n              // 8 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = data[offset++];\n              }\n            } else if (quantizationTableSpec >> 4 === 1) {\n              // 16 bit values\n              for (j = 0; j < 64; j++) {\n                z = dctZigZag[j];\n                tableData[z] = readUint16(data, offset);\n                offset += 2;\n              }\n            } else {\n              throw new JpegError(\"DQT - invalid table spec\");\n            }\n            quantizationTables[quantizationTableSpec & 15] = tableData;\n          }\n          break;\n\n        case 0xffc0: // SOF0 (Start of Frame, Baseline DCT)\n        case 0xffc1: // SOF1 (Start of Frame, Extended DCT)\n        case 0xffc2: // SOF2 (Start of Frame, Progressive DCT)\n          if (frame) {\n            throw new JpegError(\"Only single frame JPEGs supported\");\n          }\n          offset += 2; // Skip marker length.\n\n          frame = {};\n          frame.extended = fileMarker === 0xffc1;\n          frame.progressive = fileMarker === 0xffc2;\n          frame.precision = data[offset++];\n          const sofScanLines = readUint16(data, offset);\n          offset += 2;\n          frame.scanLines = dnlScanLines || sofScanLines;\n          frame.samplesPerLine = readUint16(data, offset);\n          offset += 2;\n          frame.components = [];\n          frame.componentIds = {};\n          const componentsCount = data[offset++];\n          let maxH = 0,\n            maxV = 0;\n          for (i = 0; i < componentsCount; i++) {\n            const componentId = data[offset];\n            const h = data[offset + 1] >> 4;\n            const v = data[offset + 1] & 15;\n            if (maxH < h) {\n              maxH = h;\n            }\n            if (maxV < v) {\n              maxV = v;\n            }\n            const qId = data[offset + 2];\n            l = frame.components.push({\n              h,\n              v,\n              quantizationId: qId,\n              quantizationTable: null, // See comment below.\n            });\n            frame.componentIds[componentId] = l - 1;\n            offset += 3;\n          }\n          frame.maxH = maxH;\n          frame.maxV = maxV;\n          prepareComponents(frame);\n          break;\n\n        case 0xffc4: // DHT (Define Huffman Tables)\n          const huffmanLength = readUint16(data, offset);\n          offset += 2;\n          for (i = 2; i < huffmanLength; ) {\n            const huffmanTableSpec = data[offset++];\n            const codeLengths = new Uint8Array(16);\n            let codeLengthSum = 0;\n            for (j = 0; j < 16; j++, offset++) {\n              codeLengthSum += codeLengths[j] = data[offset];\n            }\n            const huffmanValues = new Uint8Array(codeLengthSum);\n            for (j = 0; j < codeLengthSum; j++, offset++) {\n              huffmanValues[j] = data[offset];\n            }\n            i += 17 + codeLengthSum;\n\n            (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[\n              huffmanTableSpec & 15\n            ] = buildHuffmanTable(codeLengths, huffmanValues);\n          }\n          break;\n\n        case 0xffdd: // DRI (Define Restart Interval)\n          offset += 2; // Skip marker length.\n\n          resetInterval = readUint16(data, offset);\n          offset += 2;\n          break;\n\n        case 0xffda: // SOS (Start of Scan)\n          // A DNL marker (0xFFDC), if it exists, is only allowed at the end\n          // of the first scan segment and may only occur once in an image.\n          // Furthermore, to prevent an infinite loop, do *not* attempt to\n          // parse DNL markers during re-parsing of the JPEG scan data.\n          const parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n\n          offset += 2; // Skip marker length.\n\n          const selectorsCount = data[offset++],\n            components = [];\n          for (i = 0; i < selectorsCount; i++) {\n            const index = data[offset++];\n            const componentIndex = frame.componentIds[index];\n            const component = frame.components[componentIndex];\n            component.index = index;\n            const tableSpec = data[offset++];\n            component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n            component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n            components.push(component);\n          }\n          const spectralStart = data[offset++],\n            spectralEnd = data[offset++],\n            successiveApproximation = data[offset++];\n          try {\n            const processed = decodeScan(\n              data,\n              offset,\n              frame,\n              components,\n              resetInterval,\n              spectralStart,\n              spectralEnd,\n              successiveApproximation >> 4,\n              successiveApproximation & 15,\n              parseDNLMarker\n            );\n            offset += processed;\n          } catch (ex) {\n            if (ex instanceof DNLMarkerError) {\n              warn(`${ex.message} -- attempting to re-parse the JPEG image.`);\n              return this.parse(data, { dnlScanLines: ex.scanLines });\n            } else if (ex instanceof EOIMarkerError) {\n              warn(`${ex.message} -- ignoring the rest of the image data.`);\n              break markerLoop;\n            }\n            throw ex;\n          }\n          break;\n\n        case 0xffdc: // DNL (Define Number of Lines)\n          // Ignore the marker, since it's being handled in `decodeScan`.\n          offset += 4;\n          break;\n\n        case 0xffff: // Fill bytes\n          if (data[offset] !== 0xff) {\n            // Avoid skipping a valid marker.\n            offset--;\n          }\n          break;\n\n        default:\n          // Could be incorrect encoding -- the last 0xFF byte of the previous\n          // block could have been eaten by the encoder, hence we fallback to\n          // `startPos = offset - 3` when looking for the next valid marker.\n          const nextFileMarker = findNextFileMarker(\n            data,\n            /* currentPos = */ offset - 2,\n            /* startPos = */ offset - 3\n          );\n          if (nextFileMarker?.invalid) {\n            warn(\n              \"JpegImage.parse - unexpected data, current marker is: \" +\n                nextFileMarker.invalid\n            );\n            offset = nextFileMarker.offset;\n            break;\n          }\n          if (!nextFileMarker || offset >= data.length - 1) {\n            warn(\n              \"JpegImage.parse - reached the end of the image data \" +\n                \"without finding an EOI marker (0xFFD9).\"\n            );\n            break markerLoop;\n          }\n          throw new JpegError(\n            \"JpegImage.parse - unknown marker: \" + fileMarker.toString(16)\n          );\n      }\n      fileMarker = readUint16(data, offset);\n      offset += 2;\n    }\n\n    if (!frame) {\n      throw new JpegError(\"JpegImage.parse - no frame data found.\");\n    }\n    this.width = frame.samplesPerLine;\n    this.height = frame.scanLines;\n    this.jfif = jfif;\n    this.adobe = adobe;\n    this.components = [];\n    for (const component of frame.components) {\n      // Prevent errors when DQT markers are placed after SOF{n} markers,\n      // by assigning the `quantizationTable` entry after the entire image\n      // has been parsed (fixes issue7406.pdf).\n      const quantizationTable = quantizationTables[component.quantizationId];\n      if (quantizationTable) {\n        component.quantizationTable = quantizationTable;\n      }\n\n      this.components.push({\n        index: component.index,\n        output: buildComponentData(frame, component),\n        scaleX: component.h / frame.maxH,\n        scaleY: component.v / frame.maxV,\n        blocksPerLine: component.blocksPerLine,\n        blocksPerColumn: component.blocksPerColumn,\n      });\n    }\n    this.numComponents = this.components.length;\n    return undefined;\n  }\n\n  _getLinearizedBlockData(width, height, isSourcePDF = false) {\n    const scaleX = this.width / width,\n      scaleY = this.height / height;\n\n    let component, componentScaleX, componentScaleY, blocksPerScanline;\n    let x, y, i, j, k;\n    let index;\n    let offset = 0;\n    let output;\n    const numComponents = this.components.length;\n    const dataLength = width * height * numComponents;\n    const data = new Uint8ClampedArray(dataLength);\n    const xScaleBlockOffset = new Uint32Array(width);\n    const mask3LSB = 0xfffffff8; // used to clear the 3 LSBs\n    let lastComponentScaleX;\n\n    for (i = 0; i < numComponents; i++) {\n      component = this.components[i];\n      componentScaleX = component.scaleX * scaleX;\n      componentScaleY = component.scaleY * scaleY;\n      offset = i;\n      output = component.output;\n      blocksPerScanline = (component.blocksPerLine + 1) << 3;\n      // Precalculate the `xScaleBlockOffset`. Since it doesn't depend on the\n      // component data, that's only necessary when `componentScaleX` changes.\n      if (componentScaleX !== lastComponentScaleX) {\n        for (x = 0; x < width; x++) {\n          j = 0 | (x * componentScaleX);\n          xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n        }\n        lastComponentScaleX = componentScaleX;\n      }\n      // linearize the blocks of the component\n      for (y = 0; y < height; y++) {\n        j = 0 | (y * componentScaleY);\n        index = (blocksPerScanline * (j & mask3LSB)) | ((j & 7) << 3);\n        for (x = 0; x < width; x++) {\n          data[offset] = output[index + xScaleBlockOffset[x]];\n          offset += numComponents;\n        }\n      }\n    }\n\n    // decodeTransform contains pairs of multiplier (-256..256) and additive\n    let transform = this._decodeTransform;\n\n    // In PDF files, JPEG images with CMYK colour spaces are usually inverted\n    // (this can be observed by extracting the raw image data).\n    // Since the conversion algorithms (see below) were written primarily for\n    // the PDF use-cases, attempting to use `JpegImage` to parse standalone\n    // JPEG (CMYK) images may thus result in inverted images (see issue 9513).\n    //\n    // Unfortunately it's not (always) possible to tell, from the image data\n    // alone, if it needs to be inverted. Thus in an attempt to provide better\n    // out-of-box behaviour when `JpegImage` is used standalone, default to\n    // inverting JPEG (CMYK) images if and only if the image data does *not*\n    // come from a PDF file and no `decodeTransform` was passed by the user.\n    if (!isSourcePDF && numComponents === 4 && !transform) {\n      transform = new Int32Array([-256, 255, -256, 255, -256, 255, -256, 255]);\n    }\n\n    if (transform) {\n      for (i = 0; i < dataLength; ) {\n        for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n          data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n        }\n      }\n    }\n    return data;\n  }\n\n  get _isColorConversionNeeded() {\n    if (this.adobe) {\n      // The adobe transform marker overrides any previous setting.\n      return !!this.adobe.transformCode;\n    }\n    if (this.numComponents === 3) {\n      if (this._colorTransform === 0) {\n        // If the Adobe transform marker is not present and the image\n        // dictionary has a 'ColorTransform' entry, explicitly set to `0`,\n        // then the colours should *not* be transformed.\n        return false;\n      } else if (\n        this.components[0].index === /* \"R\" = */ 0x52 &&\n        this.components[1].index === /* \"G\" = */ 0x47 &&\n        this.components[2].index === /* \"B\" = */ 0x42\n      ) {\n        // If the three components are indexed as RGB in ASCII\n        // then the colours should *not* be transformed.\n        return false;\n      }\n      return true;\n    }\n    // `this.numComponents !== 3`\n    if (this._colorTransform === 1) {\n      // If the Adobe transform marker is not present and the image\n      // dictionary has a 'ColorTransform' entry, explicitly set to `1`,\n      // then the colours should be transformed.\n      return true;\n    }\n    return false;\n  }\n\n  _convertYccToRgb(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 3) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = Y - 179.456 + 1.402 * Cr;\n      data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n      data[i + 2] = Y - 226.816 + 1.772 * Cb;\n    }\n    return data;\n  }\n\n  _convertYccToRgba(data, out) {\n    for (let i = 0, j = 0, length = data.length; i < length; i += 3, j += 4) {\n      const Y = data[i];\n      const Cb = data[i + 1];\n      const Cr = data[i + 2];\n      out[j] = Y - 179.456 + 1.402 * Cr;\n      out[j + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n      out[j + 2] = Y - 226.816 + 1.772 * Cb;\n      out[j + 3] = 255;\n    }\n    return out;\n  }\n\n  _convertYcckToRgb(data) {\n    let Y, Cb, Cr, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        -122.67195406894 +\n        Cb *\n          (-6.60635669420364e-5 * Cb +\n            0.000437130475926232 * Cr -\n            5.4080610064599e-5 * Y +\n            0.00048449797120281 * k -\n            0.154362151871126) +\n        Cr *\n          (-0.000957964378445773 * Cr +\n            0.000817076911346625 * Y -\n            0.00477271405408747 * k +\n            1.53380253221734) +\n        Y *\n          (0.000961250184130688 * Y -\n            0.00266257332283933 * k +\n            0.48357088451265) +\n        k * (-0.000336197177618394 * k + 0.484791561490776);\n\n      data[offset++] =\n        107.268039397724 +\n        Cb *\n          (2.19927104525741e-5 * Cb -\n            0.000640992018297945 * Cr +\n            0.000659397001245577 * Y +\n            0.000426105652938837 * k -\n            0.176491792462875) +\n        Cr *\n          (-0.000778269941513683 * Cr +\n            0.00130872261408275 * Y +\n            0.000770482631801132 * k -\n            0.151051492775562) +\n        Y *\n          (0.00126935368114843 * Y -\n            0.00265090189010898 * k +\n            0.25802910206845) +\n        k * (-0.000318913117588328 * k - 0.213742400323665);\n\n      data[offset++] =\n        -20.810012546947 +\n        Cb *\n          (-0.000570115196973677 * Cb -\n            2.63409051004589e-5 * Cr +\n            0.0020741088115012 * Y -\n            0.00288260236853442 * k +\n            0.814272968359295) +\n        Cr *\n          (-1.53496057440975e-5 * Cr -\n            0.000132689043961446 * Y +\n            0.000560833691242812 * k -\n            0.195152027534049) +\n        Y *\n          (0.00174418132927582 * Y -\n            0.00255243321439347 * k +\n            0.116935020465145) +\n        k * (-0.000343531996510555 * k + 0.24165260232407);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  _convertYcckToRgba(data) {\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      const Y = data[i];\n      const Cb = data[i + 1];\n      const Cr = data[i + 2];\n      const k = data[i + 3];\n\n      data[i] =\n        -122.67195406894 +\n        Cb *\n          (-6.60635669420364e-5 * Cb +\n            0.000437130475926232 * Cr -\n            5.4080610064599e-5 * Y +\n            0.00048449797120281 * k -\n            0.154362151871126) +\n        Cr *\n          (-0.000957964378445773 * Cr +\n            0.000817076911346625 * Y -\n            0.00477271405408747 * k +\n            1.53380253221734) +\n        Y *\n          (0.000961250184130688 * Y -\n            0.00266257332283933 * k +\n            0.48357088451265) +\n        k * (-0.000336197177618394 * k + 0.484791561490776);\n\n      data[i + 1] =\n        107.268039397724 +\n        Cb *\n          (2.19927104525741e-5 * Cb -\n            0.000640992018297945 * Cr +\n            0.000659397001245577 * Y +\n            0.000426105652938837 * k -\n            0.176491792462875) +\n        Cr *\n          (-0.000778269941513683 * Cr +\n            0.00130872261408275 * Y +\n            0.000770482631801132 * k -\n            0.151051492775562) +\n        Y *\n          (0.00126935368114843 * Y -\n            0.00265090189010898 * k +\n            0.25802910206845) +\n        k * (-0.000318913117588328 * k - 0.213742400323665);\n\n      data[i + 2] =\n        -20.810012546947 +\n        Cb *\n          (-0.000570115196973677 * Cb -\n            2.63409051004589e-5 * Cr +\n            0.0020741088115012 * Y -\n            0.00288260236853442 * k +\n            0.814272968359295) +\n        Cr *\n          (-1.53496057440975e-5 * Cr -\n            0.000132689043961446 * Y +\n            0.000560833691242812 * k -\n            0.195152027534049) +\n        Y *\n          (0.00174418132927582 * Y -\n            0.00255243321439347 * k +\n            0.116935020465145) +\n        k * (-0.000343531996510555 * k + 0.24165260232407);\n      data[i + 3] = 255;\n    }\n    return data;\n  }\n\n  _convertYcckToCmyk(data) {\n    let Y, Cb, Cr;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      Y = data[i];\n      Cb = data[i + 1];\n      Cr = data[i + 2];\n      data[i] = 434.456 - Y - 1.402 * Cr;\n      data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n      data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      // K in data[i + 3] is unchanged\n    }\n    return data;\n  }\n\n  _convertCmykToRgb(data) {\n    let c, m, y, k;\n    let offset = 0;\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      c = data[i];\n      m = data[i + 1];\n      y = data[i + 2];\n      k = data[i + 3];\n\n      data[offset++] =\n        255 +\n        c *\n          (-0.00006747147073602441 * c +\n            0.0008379262121013727 * m +\n            0.0002894718188643294 * y +\n            0.003264231057537806 * k -\n            1.1185611867203937) +\n        m *\n          (0.000026374107616089405 * m -\n            0.00008626949158638572 * y -\n            0.0002748769067499491 * k -\n            0.02155688794978967) +\n        y *\n          (-0.00003878099212869363 * y -\n            0.0003267808279485286 * k +\n            0.0686742238595345) -\n        k * (0.0003361971776183937 * k + 0.7430659151342254);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.00013596372813588848 * c +\n            0.000924537132573585 * m +\n            0.00010567359618683593 * y +\n            0.0004791864687436512 * k -\n            0.3109689587515875) +\n        m *\n          (-0.00023545346108370344 * m +\n            0.0002702845253534714 * y +\n            0.0020200308977307156 * k -\n            0.7488052167015494) +\n        y *\n          (0.00006834815998235662 * y +\n            0.00015168452363460973 * k -\n            0.09751927774728933) -\n        k * (0.0003189131175883281 * k + 0.7364883807733168);\n\n      data[offset++] =\n        255 +\n        c *\n          (0.000013598650411385307 * c +\n            0.00012423956175490851 * m +\n            0.0004751985097583589 * y -\n            0.0000036729317476630422 * k -\n            0.05562186980264034) +\n        m *\n          (0.00016141380598724676 * m +\n            0.0009692239130725186 * y +\n            0.0007782692450036253 * k -\n            0.44015232367526463) +\n        y *\n          (5.068882914068769e-7 * y +\n            0.0017778369011375071 * k -\n            0.7591454649749609) -\n        k * (0.0003435319965105553 * k + 0.7063770186160144);\n    }\n    // Ensure that only the converted RGB data is returned.\n    return data.subarray(0, offset);\n  }\n\n  _convertCmykToRgba(data) {\n    for (let i = 0, length = data.length; i < length; i += 4) {\n      const c = data[i];\n      const m = data[i + 1];\n      const y = data[i + 2];\n      const k = data[i + 3];\n\n      data[i] =\n        255 +\n        c *\n          (-0.00006747147073602441 * c +\n            0.0008379262121013727 * m +\n            0.0002894718188643294 * y +\n            0.003264231057537806 * k -\n            1.1185611867203937) +\n        m *\n          (0.000026374107616089405 * m -\n            0.00008626949158638572 * y -\n            0.0002748769067499491 * k -\n            0.02155688794978967) +\n        y *\n          (-0.00003878099212869363 * y -\n            0.0003267808279485286 * k +\n            0.0686742238595345) -\n        k * (0.0003361971776183937 * k + 0.7430659151342254);\n\n      data[i + 1] =\n        255 +\n        c *\n          (0.00013596372813588848 * c +\n            0.000924537132573585 * m +\n            0.00010567359618683593 * y +\n            0.0004791864687436512 * k -\n            0.3109689587515875) +\n        m *\n          (-0.00023545346108370344 * m +\n            0.0002702845253534714 * y +\n            0.0020200308977307156 * k -\n            0.7488052167015494) +\n        y *\n          (0.00006834815998235662 * y +\n            0.00015168452363460973 * k -\n            0.09751927774728933) -\n        k * (0.0003189131175883281 * k + 0.7364883807733168);\n\n      data[i + 2] =\n        255 +\n        c *\n          (0.000013598650411385307 * c +\n            0.00012423956175490851 * m +\n            0.0004751985097583589 * y -\n            0.0000036729317476630422 * k -\n            0.05562186980264034) +\n        m *\n          (0.00016141380598724676 * m +\n            0.0009692239130725186 * y +\n            0.0007782692450036253 * k -\n            0.44015232367526463) +\n        y *\n          (5.068882914068769e-7 * y +\n            0.0017778369011375071 * k -\n            0.7591454649749609) -\n        k * (0.0003435319965105553 * k + 0.7063770186160144);\n      data[i + 3] = 255;\n    }\n    return data;\n  }\n\n  getData({\n    width,\n    height,\n    forceRGBA = false,\n    forceRGB = false,\n    isSourcePDF = false,\n  }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        isSourcePDF === true,\n        'JpegImage.getData: Unexpected \"isSourcePDF\" value for PDF files.'\n      );\n    }\n    if (this.numComponents > 4) {\n      throw new JpegError(\"Unsupported color mode\");\n    }\n    // Type of data: Uint8ClampedArray(width * height * numComponents)\n    const data = this._getLinearizedBlockData(width, height, isSourcePDF);\n\n    if (this.numComponents === 1 && (forceRGBA || forceRGB)) {\n      const len = data.length * (forceRGBA ? 4 : 3);\n      const rgbaData = new Uint8ClampedArray(len);\n      let offset = 0;\n      if (forceRGBA) {\n        grayToRGBA(data, new Uint32Array(rgbaData.buffer));\n      } else {\n        for (const grayColor of data) {\n          rgbaData[offset++] = grayColor;\n          rgbaData[offset++] = grayColor;\n          rgbaData[offset++] = grayColor;\n        }\n      }\n      return rgbaData;\n    } else if (this.numComponents === 3 && this._isColorConversionNeeded) {\n      if (forceRGBA) {\n        const rgbaData = new Uint8ClampedArray((data.length / 3) * 4);\n        return this._convertYccToRgba(data, rgbaData);\n      }\n      return this._convertYccToRgb(data);\n    } else if (this.numComponents === 4) {\n      if (this._isColorConversionNeeded) {\n        if (forceRGBA) {\n          return this._convertYcckToRgba(data);\n        }\n        if (forceRGB) {\n          return this._convertYcckToRgb(data);\n        }\n        return this._convertYcckToCmyk(data);\n      } else if (forceRGBA) {\n        return this._convertCmykToRgba(data);\n      } else if (forceRGB) {\n        return this._convertCmykToRgb(data);\n      }\n    }\n    return data;\n  }\n}\n\nexport { JpegError, JpegImage };\n","/* THIS FILE IS GENERATED - DO NOT EDIT */\nvar OpenJPEG = (() => {\n  var _scriptName = typeof document != 'undefined' ? document.currentScript?.src : undefined;\n  \n  return (\nasync function(moduleArg = {}) {\n  var moduleRtn;\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.slice(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{readAsync=async url=>{var response=await fetch(url,{credentials:\"same-origin\"});if(response.ok){return response.arrayBuffer()}throw new Error(response.status+\" : \"+response.url)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];var wasmBinary=Module[\"wasmBinary\"];var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAP64,HEAPU64,HEAPF64;var runtimeInitialized=false;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b);Module[\"HEAP64\"]=HEAP64=new BigInt64Array(b);Module[\"HEAPU64\"]=HEAPU64=new BigUint64Array(b)}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(onPreRuns)}function initRuntime(){runtimeInitialized=true;wasmExports[\"t\"]()}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(onPostRuns)}var runDependencies=0;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var wasmBinaryFile;function findWasmBinary(){return locateFile(\"openjpeg.wasm\")}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}async function getWasmBinary(binaryFile){if(!wasmBinary){try{var response=await readAsync(binaryFile);return new Uint8Array(response)}catch{}}return getBinarySync(binaryFile)}async function instantiateArrayBuffer(binaryFile,imports){try{var binary=await getWasmBinary(binaryFile);var instance=await WebAssembly.instantiate(binary,imports);return instance}catch(reason){err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)}}async function instantiateAsync(binary,binaryFile,imports){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"){try{var response=fetch(binaryFile,{credentials:\"same-origin\"});var instantiationResult=await WebAssembly.instantiateStreaming(response,imports);return instantiationResult}catch(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\")}}return instantiateArrayBuffer(binaryFile,imports)}function getWasmImports(){return{a:wasmImports}}async function createWasm(){function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"s\"];updateMemoryViews();removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){return receiveInstance(result[\"instance\"])}var info=getWasmImports();if(Module[\"instantiateWasm\"]){return new Promise((resolve,reject)=>{Module[\"instantiateWasm\"](info,(mod,inst)=>{receiveInstance(mod,inst);resolve(mod.exports)})})}wasmBinaryFile??=findWasmBinary();try{var result=await instantiateAsync(wasmBinary,wasmBinaryFile,info);var exports=receiveInstantiationResult(result);return exports}catch(e){readyPromiseReject(e);return Promise.reject(e)}}class ExitStatus{name=\"ExitStatus\";constructor(status){this.message=`Program terminated with exit(${status})`;this.status=status}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var onPostRuns=[];var addOnPostRun=cb=>onPostRuns.unshift(cb);var onPreRuns=[];var addOnPreRun=cb=>onPreRuns.unshift(cb);var noExitRuntime=Module[\"noExitRuntime\"]||true;var __abort_js=()=>abort(\"\");var runtimeKeepaliveCounter=0;var __emscripten_runtime_keepalive_clear=()=>{noExitRuntime=false;runtimeKeepaliveCounter=0};var timers={};var handleException=e=>{if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)};var keepRuntimeAlive=()=>noExitRuntime||runtimeKeepaliveCounter>0;var _proc_exit=code=>{EXITSTATUS=code;if(!keepRuntimeAlive()){Module[\"onExit\"]?.(code);ABORT=true}quit_(code,new ExitStatus(code))};var exitJS=(status,implicit)=>{EXITSTATUS=status;_proc_exit(status)};var _exit=exitJS;var maybeExit=()=>{if(!keepRuntimeAlive()){try{_exit(EXITSTATUS)}catch(e){handleException(e)}}};var callUserCallback=func=>{if(ABORT){return}try{func();maybeExit()}catch(e){handleException(e)}};var _emscripten_get_now=()=>performance.now();var __setitimer_js=(which,timeout_ms)=>{if(timers[which]){clearTimeout(timers[which].id);delete timers[which]}if(!timeout_ms)return 0;var id=setTimeout(()=>{delete timers[which];callUserCallback(()=>__emscripten_timeout(which,_emscripten_get_now()))},timeout_ms);timers[which]={id,timeout_ms};return 0};function _copy_pixels_1(compG_ptr,nb_pixels){compG_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);imageData.set(compG)}function _copy_pixels_3(compR_ptr,compG_ptr,compB_ptr,nb_pixels){compR_ptr>>=2;compG_ptr>>=2;compB_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*3);const compR=HEAP32.subarray(compR_ptr,compR_ptr+nb_pixels);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);const compB=HEAP32.subarray(compB_ptr,compB_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[3*i]=compR[i];imageData[3*i+1]=compG[i];imageData[3*i+2]=compB[i]}}function _copy_pixels_4(compR_ptr,compG_ptr,compB_ptr,compA_ptr,nb_pixels){compR_ptr>>=2;compG_ptr>>=2;compB_ptr>>=2;compA_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*4);const compR=HEAP32.subarray(compR_ptr,compR_ptr+nb_pixels);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);const compB=HEAP32.subarray(compB_ptr,compB_ptr+nb_pixels);const compA=HEAP32.subarray(compA_ptr,compA_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[4*i]=compR[i];imageData[4*i+1]=compG[i];imageData[4*i+2]=compB[i];imageData[4*i+3]=compA[i]}}var getHeapMax=()=>2147483648;var alignMemory=(size,alignment)=>Math.ceil(size/alignment)*alignment;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536|0;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignMemory(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var ENV={};var getExecutableName=()=>thisProgram||\"./this.program\";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:lang,_:getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i){HEAP8[buffer++]=str.charCodeAt(i)}HEAP8[buffer]=0};var _environ_get=(__environ,environ_buf)=>{var bufSize=0;getEnvStrings().forEach((string,i)=>{var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0};var _environ_sizes_get=(penviron_count,penviron_buf_size)=>{var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(string=>bufSize+=string.length+1);HEAPU32[penviron_buf_size>>2]=bufSize;return 0};var _fd_close=fd=>52;var INT53_MAX=9007199254740992;var INT53_MIN=-9007199254740992;var bigintToI53Checked=num=>num<INT53_MIN||num>INT53_MAX?NaN:Number(num);function _fd_seek(fd,offset,whence,newOffset){offset=bigintToI53Checked(offset);return 70}var printCharBuffers=[null,[],[]];var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder:undefined;var UTF8ArrayToString=(heapOrArray,idx=0,maxBytesToRead=NaN)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var printChar=(stream,curr)=>{var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer));buffer.length=0}else{buffer.push(curr)}};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var _fd_write=(fd,iov,iovcnt,pnum)=>{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0};function _gray_to_rgba(compG_ptr,nb_pixels){compG_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*4);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[4*i]=imageData[4*i+1]=imageData[4*i+2]=compG[i];imageData[4*i+3]=255}}function _graya_to_rgba(compG_ptr,compA_ptr,nb_pixels){compG_ptr>>=2;compA_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*4);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);const compA=HEAP32.subarray(compA_ptr,compA_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[4*i]=imageData[4*i+1]=imageData[4*i+2]=compG[i];imageData[4*i+3]=compA[i]}}function _jsPrintWarning(message_ptr){const message=UTF8ToString(message_ptr);(Module.warn||console.warn)(`OpenJPEG: ${message}`)}function _rgb_to_rgba(compR_ptr,compG_ptr,compB_ptr,nb_pixels){compR_ptr>>=2;compG_ptr>>=2;compB_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*4);const compR=HEAP32.subarray(compR_ptr,compR_ptr+nb_pixels);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);const compB=HEAP32.subarray(compB_ptr,compB_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[4*i]=compR[i];imageData[4*i+1]=compG[i];imageData[4*i+2]=compB[i];imageData[4*i+3]=255}}function _storeErrorMessage(message_ptr){const message=UTF8ToString(message_ptr);if(!Module.errorMessages){Module.errorMessages=message}else{Module.errorMessages+=\"\\n\"+message}}var wasmImports={l:__abort_js,k:__emscripten_runtime_keepalive_clear,m:__setitimer_js,g:_copy_pixels_1,f:_copy_pixels_3,e:_copy_pixels_4,n:_emscripten_resize_heap,p:_environ_get,q:_environ_sizes_get,b:_fd_close,o:_fd_seek,c:_fd_write,r:_gray_to_rgba,i:_graya_to_rgba,d:_jsPrintWarning,j:_proc_exit,h:_rgb_to_rgba,a:_storeErrorMessage};var wasmExports=await createWasm();var ___wasm_call_ctors=wasmExports[\"t\"];var _malloc=Module[\"_malloc\"]=wasmExports[\"u\"];var _free=Module[\"_free\"]=wasmExports[\"v\"];var _jp2_decode=Module[\"_jp2_decode\"]=wasmExports[\"x\"];var __emscripten_timeout=wasmExports[\"y\"];function run(){if(runDependencies>0){dependenciesFulfilled=run;return}preRun();if(runDependencies>0){dependenciesFulfilled=run;return}function doRun(){Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);Module[\"onRuntimeInitialized\"]?.();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(()=>{setTimeout(()=>Module[\"setStatus\"](\"\"),1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();moduleRtn=readyPromise;\n\n\n  return moduleRtn;\n}\n);\n})();\nexport default OpenJPEG;\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseStream } from \"./base_stream.js\";\nimport { stringToBytes } from \"../shared/util.js\";\n\nclass Stream extends BaseStream {\n  constructor(arrayBuffer, start, length, dict) {\n    super();\n\n    this.bytes =\n      arrayBuffer instanceof Uint8Array\n        ? arrayBuffer\n        : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n\n  get length() {\n    return this.end - this.start;\n  }\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n\n  getByte() {\n    if (this.pos >= this.end) {\n      return -1;\n    }\n    return this.bytes[this.pos++];\n  }\n\n  getBytes(length) {\n    const bytes = this.bytes;\n    const pos = this.pos;\n    const strEnd = this.end;\n\n    if (!length) {\n      return bytes.subarray(pos, strEnd);\n    }\n    let end = pos + length;\n    if (end > strEnd) {\n      end = strEnd;\n    }\n    this.pos = end;\n    return bytes.subarray(pos, end);\n  }\n\n  getByteRange(begin, end) {\n    if (begin < 0) {\n      begin = 0;\n    }\n    if (end > this.end) {\n      end = this.end;\n    }\n    return this.bytes.subarray(begin, end);\n  }\n\n  reset() {\n    this.pos = this.start;\n  }\n\n  moveStart() {\n    this.start = this.pos;\n  }\n\n  makeSubStream(start, length, dict = null) {\n    return new Stream(this.bytes.buffer, start, length, dict);\n  }\n}\n\nclass StringStream extends Stream {\n  constructor(str) {\n    super(stringToBytes(str));\n  }\n}\n\nclass NullStream extends Stream {\n  constructor() {\n    super(new Uint8Array(0));\n  }\n}\n\nexport { NullStream, Stream, StringStream };\n","/* Copyright 2024 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseException, warn } from \"../shared/util.js\";\nimport { fetchBinaryData } from \"./core_utils.js\";\nimport OpenJPEG from \"../../external/openjpeg/openjpeg.js\";\nimport { Stream } from \"./stream.js\";\n\nclass JpxError extends BaseException {\n  constructor(msg) {\n    super(msg, \"JpxError\");\n  }\n}\n\nclass JpxImage {\n  static #buffer = null;\n\n  static #handler = null;\n\n  static #modulePromise = null;\n\n  static #useWasm = true;\n\n  static #useWorkerFetch = true;\n\n  static #wasmUrl = null;\n\n  static #wasmAbsoluteUrl = null;\n\n  static #wasmFallback = null;\n\n  static setOptions({\n    handler,\n    useWasm,\n    useWorkerFetch,\n    wasmUrl,\n    wasmAbsoluteUrl,\n    wasmFallback,\n  }) {\n    this.#useWasm = useWasm;\n    this.#useWorkerFetch = useWorkerFetch;\n    this.#wasmUrl = wasmUrl;\n    this.#wasmAbsoluteUrl = wasmAbsoluteUrl;\n    this.#wasmFallback = wasmFallback;\n\n    if (!useWorkerFetch) {\n      this.#handler = handler;\n    }\n  }\n\n  static async #getJsModule(fallbackCallback) {\n    let path =\n      typeof PDFJSDev === \"undefined\"\n        ? `../${this.#wasmUrl}openjpeg_nowasm_fallback.js`\n        : `${this.#wasmUrl}openjpeg_nowasm_fallback.js`;\n\n    let instance = null;\n    try {\n      const mod = await (typeof PDFJSDev === \"undefined\"\n        ? import(path) // eslint-disable-line no-unsanitized/method\n        : __non_webpack_import__(path));\n      instance = mod.default();\n    } catch (e) {\n      warn(`JpxImage#getJsModule: ${e}`);\n      if (this.#wasmFallback) {\n        instance = this.#wasmFallback;\n      }\n    }\n    fallbackCallback(instance);\n  }\n\n  static async #instantiateWasm(fallbackCallback, imports, successCallback) {\n    const filename = \"openjpeg.wasm\";\n    try {\n      if (!this.#buffer) {\n        if (this.#useWorkerFetch) {\n          this.#buffer = await fetchBinaryData(`${this.#wasmUrl}${filename}`);\n        } else {\n          this.#buffer = await this.#handler.sendWithPromise(\n            \"FetchBinaryData\",\n            { type: \"wasmFactory\", filename }\n          );\n        }\n      }\n      const results = await WebAssembly.instantiate(this.#buffer, imports);\n      return successCallback(results.instance);\n    } catch (reason) {\n      warn(`JpxImage#instantiateWasm: ${reason}`);\n\n      this.#getJsModule(fallbackCallback);\n      return null;\n    } finally {\n      this.#handler = null;\n    }\n  }\n\n  static async decode(\n    bytes,\n    { numComponents = 4, isIndexedColormap = false, smaskInData = false } = {}\n  ) {\n    if (!this.#modulePromise) {\n      const { promise, resolve } = Promise.withResolvers();\n      const promises = [promise];\n      if (!this.#useWasm) {\n        this.#getJsModule(resolve);\n      } else {\n        promises.push(\n          OpenJPEG({\n            warn,\n            instantiateWasm: this.#instantiateWasm.bind(this, resolve),\n          })\n        );\n      }\n      this.#modulePromise = Promise.race(promises);\n    }\n    const module = await this.#modulePromise;\n\n    if (!module) {\n      throw new JpxError(\"OpenJPEG failed to initialize\");\n    }\n    let ptr;\n\n    try {\n      const size = bytes.length;\n      ptr = module._malloc(size);\n      module.HEAPU8.set(bytes, ptr);\n      const ret = module._jp2_decode(\n        ptr,\n        size,\n        numComponents > 0 ? numComponents : 0,\n        !!isIndexedColormap,\n        !!smaskInData\n      );\n      if (ret) {\n        const { errorMessages } = module;\n        if (errorMessages) {\n          delete module.errorMessages;\n          throw new JpxError(errorMessages);\n        }\n        throw new JpxError(\"Unknown error\");\n      }\n      const { imageData } = module;\n      module.imageData = null;\n\n      return imageData;\n    } finally {\n      if (ptr) {\n        module._free(ptr);\n      }\n    }\n  }\n\n  static cleanup() {\n    this.#modulePromise = null;\n  }\n\n  static parseImageProperties(stream) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      if (stream instanceof ArrayBuffer || ArrayBuffer.isView(stream)) {\n        stream = new Stream(stream);\n      } else {\n        throw new JpxError(\"Invalid data format, must be a TypedArray.\");\n      }\n    }\n    // No need to use OpenJPEG here since we're only getting very basic\n    // information which are located in the first bytes of the file.\n    let newByte = stream.getByte();\n    while (newByte >= 0) {\n      const oldByte = newByte;\n      newByte = stream.getByte();\n      const code = (oldByte << 8) | newByte;\n      // Image and tile size (SIZ)\n      if (code === 0xff51) {\n        stream.skip(4);\n        const Xsiz = stream.getInt32() >>> 0; // Byte 4\n        const Ysiz = stream.getInt32() >>> 0; // Byte 8\n        const XOsiz = stream.getInt32() >>> 0; // Byte 12\n        const YOsiz = stream.getInt32() >>> 0; // Byte 16\n        stream.skip(16);\n        const Csiz = stream.getUint16(); // Byte 36\n        return {\n          width: Xsiz - XOsiz,\n          height: Ysiz - YOsiz,\n          // Results are always returned as `Uint8ClampedArray`s.\n          bitsPerComponent: 8,\n          componentsCount: Csiz,\n        };\n      }\n    }\n    throw new JpxError(\"No size marker found in JPX stream\");\n  }\n}\n\nexport { JpxError, JpxImage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import \"core-js/actual/structured-clone.js\";\nimport {\n  getVerbosityLevel,\n  setVerbosityLevel,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { Jbig2Error, Jbig2Image } from \"./core/jbig2.js\";\nimport { JpegError, JpegImage } from \"./core/jpg.js\";\nimport { JpxError, JpxImage } from \"./core/jpx.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nexport {\n  getVerbosityLevel,\n  Jbig2Error,\n  Jbig2Image,\n  JpegError,\n  JpegImage,\n  JpxError,\n  JpxImage,\n  setVerbosityLevel,\n  VerbosityLevel,\n};\n"],"names":["isNodeJS","process","versions","nw","electron","type","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","LINE_FACTOR","LINE_DESCENT_FACTOR","BASELINE_FACTOR","RenderingIntentFlag","ANY","DISPLAY","PRINT","SAVE","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","IS_EDITING","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","AnnotationEditorPrefix","AnnotationEditorType","NONE","FREETEXT","HIGHLIGHT","STAMP","INK","SIGNATURE","AnnotationEditorParamsType","RESIZE","CREATE","FREETEXT_SIZE","FREETEXT_COLOR","FREETEXT_OPACITY","INK_COLOR","INK_THICKNESS","INK_OPACITY","HIGHLIGHT_COLOR","HIGHLIGHT_DEFAULT_COLOR","HIGHLIGHT_THICKNESS","HIGHLIGHT_FREE","HIGHLIGHT_SHOW_ALL","DRAW_STEP","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","UNDERLINE","SQUIGGLY","STRIKEOUT","CARET","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","VerbosityLevel","ERRORS","WARNINGS","INFOS","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotation","endAnnotation","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","setStrokeTransparent","setFillTransparent","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","_isValidProtocol","url","protocol","createValidAbsoluteUrl","baseUrl","options","addDefaultProtocol","startsWith","dots","match","length","tryConvertEncoding","stringToUTF8String","absoluteUrl","URL","parse","shadow","obj","prop","value","nonSerializable","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","prototype","constructor","PasswordException","code","UnknownErrorException","details","InvalidPDFException","ResponseException","status","missing","FormatError","AbortException","bytesToString","bytes","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","str","Uint8Array","charCodeAt","string32","objectSize","keys","objectFromMap","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","FeatureTest","isOffscreenCanvasSupported","OffscreenCanvas","isImageDecoderSupported","ImageDecoder","platform","navigator","userAgent","isAndroid","includes","isLinux","isMac","isWindows","isFirefox","isCSSRoundSupported","globalThis","CSS","supports","hexNumbers","Array","from","n","toString","padStart","Util","makeHexColor","r","g","b","scaleMinMax","minMax","temp","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","xLow","xHigh","yLow","yHigh","getExtremumOnCurve","#getExtremumOnCurve","x0","x1","x2","x3","y0","y1","y2","y3","t","mt","tt","ttt","x","y","getExtremum","#getExtremum","abs","delta","sqrtDelta","a2","bezierBoundingBox","PDFStringTranslateTable","stringToPDFString","encoding","decoder","TextDecoder","fatal","decoded","decode","replaceAll","ex","ii","charCode","charAt","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isArrayEqual","arr1","arr2","getModificationDate","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","NormalizeRegex","NormalizationMap","normalizeUnicode","Map","_","normalize","get","getUuid","crypto","randomUUID","buf","getRandomValues","AnnotationPrefix","toHexUtil","arr","toHex","num","toBase64Util","toBase64","btoa","fromBase64Util","fromBase64","atob","Promise","try","fn","args","resolve","CIRCULAR_REF","Symbol","EOF","CmdCache","NameCache","RefCache","clearPrimitiveCaches","Name","Cmd","cmd","nonSerializableClosure","Dict","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","size","key1","key2","key3","Ref","fetch","getAsync","fetchAsync","getArray","isArray","getRaw","getKeys","getRawValues","values","set","has","iterator","empty","emptyDict","merge","dictArray","mergeSubDicts","mergedDict","properties","dict","property","subDict","clear","clone","delete","gen","fromString","ref","exec","parseInt","RefSet","parent","_set","Set","put","add","remove","RefSetCache","putAlias","aliasRef","items","isName","v","isCmd","isDict","isRefsEqual","v1","v2","BaseStream","isEmpty","isDataLoaded","getByte","getBytes","getImageData","decoderOptions","asyncGetBytes","isAsync","isAsyncDecoder","canAsyncDecodeImageFromBuffer","getTransferableImage","peekByte","peekedByte","pos","peekBytes","getUint16","b0","b1","getInt32","b2","b3","getByteRange","begin","end","getString","skip","reset","moveStart","makeSubStream","start","getBaseStreams","PDF_VERSION_REGEXP","MAX_INT_32","MIN_INT_32","getLookupTableFactory","initializer","lookup","MissingDataException","ParserEOFException","XRefEntryException","XRefParseException","arrayBuffersToBytes","dataLength","byteLength","data","item","fetchBinaryData","response","ok","statusText","arrayBuffer","getInheritableProperty","stopWhenFound","visited","getParentToUpdate","firstDict","result","ROMAN_NUMBER_MAP","toRomanNumerals","number","lowerCase","roman","repeat","toLowerCase","log2","ceil","readInt8","offset","readInt16","readUint16","readUint32","isWhiteSpace","ch","isBooleanArray","len","every","isNumberArray","ArrayBuffer","isView","BigInt64Array","BigUint64Array","lookupMatrix","fallback","lookupRect","lookupNormalRect","parseXFAPath","path","positionPattern","split","component","escapePDFName","char","substring","escapeString","_collectJS","entry","list","parents","element","js","collectActions","eventType","actions","additionalActionsDicts","additionalActions","action","actionDict","Action","XMLEntities","codePointIter","codePointAt","encodeToXmlString","entity","toUpperCase","validateFontName","fontFamily","mustWarn","re","RegExp","test","ident","validateCSSFont","cssFontInfo","DEFAULT_CSS_FONT_OBLIQUE","DEFAULT_CSS_FONT_WEIGHT","CSS_FONT_WEIGHT_VALUES","fontWeight","italicAngle","weight","angle","parseFloat","isNaN","recoverJsURL","URL_OPEN_METHODS","regex","jsUrl","newWindow","numberToString","roundedValue","round","toFixed","getNewAnnotationsMap","annotationStorage","newAnnotationsByPage","annotations","pageIndex","stringToAsciiOrUTF16BE","isAscii","stringToUTF16String","stringToUTF16HexString","bigEndian","getRotationMatrix","rotation","width","height","getSizeInBytes","QeTable","qe","nmps","nlps","switchFlag","ArithmeticDecoder","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","CCITTFaxDecoder","source","next","eof","eoline","EndOfLine","byteAlign","EncodedByteAlign","columns","Columns","rows","Rows","eoblock","EndOfBlock","black","BlackIs1","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","code1","_lookBits","_eatBits","readNextChar","refPos","blackPixels","bits","err","code2","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","table","limit","limitValue","Jbig2Error","ContextCache","getContexts","id","Int8Array","DecodingContext","contextCache","cache","decodeInteger","procedure","prev","readBits","bit","sign","signedValue","decodeIAID","codeLength","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmapTemplate0","decodingContext","bitmap","contextLabel","j","pixel","row1","row2","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","input","Reader","decodeMMRBitmap","useskip","template","concat","sort","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","k","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","Uint16Array","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","i0","j0","shift","sltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","Int32Array","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","huffmanInput","newSymbols","currentHeight","symbolCodeLength","tableB1","symbolWidths","getStandardTable","deltaHeight","tableDeltaHeight","currentWidth","totalWidth","firstSymbol","deltaWidth","tableDeltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","symbol","bitmapSize","tableBitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","position","numberOfSymbolsDecoded","xMin","xMax","bitmapWidth","symbolBitmap","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","logStripSize","stripT","tableDeltaT","firstS","deltaT","deltaFirstS","tableFirstS","currentS","currentT","symbolIDTable","applyRefinement","symbolWidth","symbolHeight","rdw","rdh","increment","offsetT","offsetS","s2","t2","symbolRow","maxWidth","deltaS","tableDeltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","patterns","patternBitmap","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","header","segments","segment","randomAccess","processSegment","visitor","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","chunks","SimpleSegmentVisitor","parseJbig2","numberOfPages","currentPageInfo","bitPacked","imgData","Uint8ClampedArray","q","mask","onPageInformation","rowSize","drawBitmap","regionInfo","mask0","offset0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","arguments","onSymbolDictionary","currentSegment","referredSegments","getSymbolDictionaryHuffmanTables","customTables","referredSegment","referredSymbols","onImmediateTextRegion","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","decodeTablesSegment","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","buildTree","node","decodeNode","reader","htOffset","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","standardTablesCache","currentByte","numBits","getCustomHuffmanTable","index","currentIndex","numberOfSymbols","codes","runCodesTable","repeatedLength","numberOfRepeats","customIndex","tableAggregateInstances","endOfBlock","params","lookForEOFLimit","Jbig2Image","parseChunks","convertToRGBA","kind","convertBlackAndWhiteToRGBA","convertRGBToRGBA","src","srcPos","dest","nonBlackColor","inverseDecode","zeroMapping","oneMapping","widthInSource","widthRemainder","srcLength","destPos","elem","len32","src32","s1","s3","jj","grayToRGBA","JpegError","DNLMarkerError","scanLines","EOIMarkerError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","codeLengths","pop","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","maybeScanLines","blockRow","precision","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","blockOffset","huffmanTableDC","diff","blockData","pred","rs","huffmanTableAC","s","z","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","e","successiveACState","successiveACNextValue","decodeACSuccessive","offsetZ","decodeMcu","mcu","mcuRow","mcuCol","blockCol","h","decodeBlock","componentsLength","decodeFn","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","partialMsg","marker","quantizeAndInverse","blockBufferOffset","qt","quantizationTable","v0","v3","v4","v5","v6","v7","p0","p5","p6","p7","buildComponentData","computationBuffer","Int16Array","currentPos","startPos","maxPos","newPos","currentMarker","newMarker","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","readDataBlock","endOffset","array","appData","oldOffset","newOffset","skipData","JpegImage","decodeTransform","colorTransform","_decodeTransform","_colorTransform","canUseImageDecoder","exifOffsets","numComponents","markerLoop","exifStart","exifEnd","dnlScanLines","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","l","version","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentsCount","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","processed","nextFileMarker","output","scaleX","scaleY","_getLinearizedBlockData","isSourcePDF","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","mask3LSB","lastComponentScaleX","_isColorConversionNeeded","_convertYccToRgb","Y","Cb","Cr","_convertYccToRgba","out","_convertYcckToRgb","_convertYcckToRgba","_convertYcckToCmyk","_convertCmykToRgb","_convertCmykToRgba","getData","forceRGBA","forceRGB","rgbaData","grayColor","OpenJPEG","_scriptName","document","currentScript","moduleArg","moduleRtn","Module","readyPromiseResolve","readyPromiseReject","readyPromise","reject","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","moduleOverrides","assign","arguments_","thisProgram","quit_","toThrow","scriptDirectory","locateFile","readAsync","readBinary","self","location","href","replace","lastIndexOf","credentials","bind","error","wasmBinary","wasmMemory","ABORT","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAP64","HEAPU64","HEAPF64","runtimeInitialized","updateMemoryViews","Float32Array","Float64Array","preRun","addOnPreRun","callRuntimeCallbacks","onPreRuns","initRuntime","wasmExports","postRun","addOnPostRun","onPostRuns","runDependencies","dependenciesFulfilled","addRunDependency","removeRunDependency","callback","abort","what","WebAssembly","RuntimeError","wasmBinaryFile","findWasmBinary","getBinarySync","file","getWasmBinary","binaryFile","instantiateArrayBuffer","imports","binary","instance","instantiate","reason","instantiateAsync","instantiateStreaming","instantiationResult","getWasmImports","wasmImports","createWasm","receiveInstance","module","exports","receiveInstantiationResult","mod","inst","ExitStatus","callbacks","cb","unshift","noExitRuntime","__abort_js","runtimeKeepaliveCounter","__emscripten_runtime_keepalive_clear","timers","handleException","keepRuntimeAlive","_proc_exit","exitJS","implicit","_exit","maybeExit","callUserCallback","func","_emscripten_get_now","performance","now","__setitimer_js","which","timeout_ms","clearTimeout","setTimeout","__emscripten_timeout","_copy_pixels_1","compG_ptr","nb_pixels","imageData","compG","_copy_pixels_3","compR_ptr","compB_ptr","compR","compB","_copy_pixels_4","compA_ptr","compA","getHeapMax","alignMemory","alignment","growMemory","pages","grow","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","newSize","replacement","ENV","getExecutableName","getEnvStrings","strings","lang","languages","env","USER","LOGNAME","PATH","PWD","HOME","LANG","stringToAscii","_environ_get","__environ","environ_buf","bufSize","forEach","string","ptr","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","fd","INT53_MAX","INT53_MIN","bigintToI53Checked","NaN","_fd_seek","whence","printCharBuffers","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","u0","u1","u2","printChar","stream","curr","UTF8ToString","_fd_write","iov","iovcnt","pnum","_gray_to_rgba","_graya_to_rgba","_jsPrintWarning","message_ptr","_rgb_to_rgba","_storeErrorMessage","errorMessages","f","o","___wasm_call_ctors","_malloc","_free","_jp2_decode","run","doRun","Stream","strEnd","StringStream","NullStream","JpxError","JpxImage","handler","modulePromise","useWasm","useWorkerFetch","wasmUrl","wasmAbsoluteUrl","wasmFallback","setOptions","getJsModule","#getJsModule","fallbackCallback","default","instantiateWasm","#instantiateWasm","successCallback","filename","sendWithPromise","results","isIndexedColormap","smaskInData","promise","withResolvers","promises","race","ret","cleanup","parseImageProperties","newByte","oldByte","Xsiz","Ysiz","XOsiz","YOsiz","Csiz","bitsPerComponent","pdfjsVersion","pdfjsBuild"],"sourceRoot":""}